{
  
    
        "post0": {
            "title": "Apec Chapter 29 Assignment #1",
            "content": "Chapter 29 Assignment #1: 29.1 . FQ: What were the goals of the revolt in sexual mores, the youth protests and student revolts, the feminist movement, and the antiwar protests? To what extent were their goals achieved? . 4/4 . A Culture of Protest . Permissive Society: The Western society after World War II that experienced more sexual freedom. Sexual freedom due to the increased accessibility of the birth control pill in the 1960s, but also included more freedom in homosexuality. This freedom saw an increase in pre- or extra-marital gratification. . Feminism: Revived in the late 1960s and accompanied the student protests. The interest in feminism create the women’s liberation movement which protests for true equality with men in their lives, have equal opportunities, and others like equal pay. The growth of this movement was helped by Betty Friedan’s work The Feminine Mystique which said that women did not have equality with men and were not growing to their potentials. . NOW: Founded by Betty Friedan in 1966, also known as the National Organization of Women. Aimed to have women have full participation in society and provide them with responsibilities and privileges that were the same as men. . Betty Friedan: Important figure in the women’s liberation movement. Published The Feminine Mystique and founded NOW . Kent State Protest: An antiwar protest against the Second Vietnam was in 1970. Protests escalated after President Lysdon Johnson instituted a military draft. This protest at Kent State University resulted in the death of four student protests by the Ohio National Guard. Resulted in the decline of the antiwar movement. This decline could also be from the American willingness to continue the war and the violence creating an appeal for “law and order.” . | Various protest movements in the Western world in the late 1960s . Education, sexual mores, women’s rights . | Antiwar movement against the Second Vietnam War . | . | Goals of these movements were not achieved immediately . Helped propel forces that would transform Western society . | . | . Revolt in Sexual Mores . WWI weakened that rigid code of morals and manners of the 19th c. . New sexual freedom (police in Berlin gave cards that allowed male and female homosexual prostitutes to practice their trade), exploring drugs, introduction of pornography in the 1920s . | Mostly happened in major cities and affected a small number of people . | | Changes in manner and morals were much more significant after WWI and was called the permissive society . | Sexual revolution in the 60s started in Sweden . Sex ed in school . | Disciminalization of homosexuality . | | U.S. and Europe also experienced this revolution . Gay rights movement in California in 1969 . Affected France, Italy, and Britain in 1970 . | | | The pill became more accessible in the mid-60s . Allowed people to be more free in sexual behavior . | | Once hidden subjects became widely known like sexually explicit plays, books, and movies . Allowed public sale of pornography and open prostitution in cities, like Amsterdam . Attracted many tourists . | | | Traditional family was broken apart by the new standards . Dramatic increase in divorice rates in the 60s . | Pre- and extra- marital sex rose substantially . 86% of women and 78% of men participated in extramarital sex based on a 1968 Netherland survey . | | | Another aspect of the sexual revolution for men was the Playboy magazine tha emerged in the 50s . Encouraged men to seek participate in extramarital sex through its nude photographs and articles on masculinity . | | | Youth Protest and Student Revolt . Drugs became part of the culture among young people during the 60s . Marijuna was the main choice of recreational drugs for college and university students . | | Harvard’s psychedelic research on the effects of LSD was done by Timothy Leary and became the leader of hallucinogenic experiences . Young people interested in mind expansion to high levels of consciousness . | | Attitudes towards sex and drugs were one way the youth of the 60s rebelled and questioned authority . | The Second Vietnam War and growing political conscious produced a youth protest movement in the late 60s . | Higher education was reserved for the wealthier classes before WWI . High education became more accessible through lowering fees which increased enrollment of those from the lower and middle classes . | | Student resentment produced from the learning environment . The classrooms after WWII had too many students and professors didn’t pay attention to the students . | Authoritarian-like administrators . | Students felt that the curriculum didn’t keep up with the times . | | The student’s discontent produced revolts in the late 1960s . Also came from students against the Second Vietnam War . | Most famous student revolt was in France, 1968 . | | French student revolt led to others in Europe . None became mass movements . | | West Berlin student revolt protested against Axel Springer, who was the leader of Germany&#39;s largest newspaper establishment . Wanted to destroy what they saw as the corrupt old order . | Influenced by the ideas of Herbert Marcuse who believed that students could free society from the capitalist ruling class . | | Germans’ attempt of revolution failed due to Berliners supporting police repression . | The peak of the student protest movement was in 1968 . | Causes of student radicalism . Wanted reform in universities . | Against the Second Vietnam War . | Against the materialism of society . | | Revolts died in the 70s but the ideas they raised revived in the 90s and 2000s . | | The Feminist Movement . Interest in feminism revived in the late 60s which led to the women’s liberation movement (WLM) . Argued that they were still not being treated equally to men despite having political and legal equality . | Women still paid less than men for the same job . | Traditional views of women . | | Betty Friedan contributed to the growth of the WLM in her 1963 work The Feminine Mystique . Argued that the expectation of the “ideal housewife and mother” limited women from growing to their full potential . | said that it affects the mental and physical health of the country . | | Friedan’s work propelled her into a well-known figure . | Friedan founded the National Organization for Women (NOW) in 1966 . Goals of women having equal privileges and responsibilities with men and be treated equally in society . | Helped the call for an amendment for equal rights of women in the U.S. Constitution . | | | Antiwar Protests . Another one of the main causes of the youth protests was the Second Vietnam War . Viewed as an act of imperialism and aggression . | | Demonstrations took place in Britain, France, and Italy in 1968 . Backfired due to people who liked order over chaos . | | Paolo Pasolini, Italian poet and intellectual, viewed the youth as spoiled brats that are narrow minded . | Divided the U.S. when a military draft was enacted by President Lyndon Johnson for the war in Vietnam escalated protests . Occupation of university buildings, sit-ins, teach-ins, and demonstrations that often led to violence . | | The Kent State Protest in 1970 at Kent State University resulted in 4 students being killed by the Ohio National Guard . Caused the antiwar movement to decline . Also due to Americans becoming more willing to continue the war . | Protests also caused a support for “law and order” . | | | | | . Summary . 29.1 Interaction . “Student Revolts of 1968”: Cause and Effect Flowchart . Cause Effect . Too many students for every professor . some professors didn’t pay attention to their students . | . | Authoritarian-like administrators . | Second Vietnam War . | Students felt like curriculum didn’t match with the times . | Students disliked the materialism of society . | . | Revolts against the Second Vietnam War in US and Europe . Kent State Protest resulted in the deaths of 4 students by the Ohio National Guard . | Americans as a whole became more unwilling to continue the war . | . | Student Revolts in France . | Revolts backfired due to public disliking the chaos and wanting order again . | . | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/2022/09/11/APEC-Chapter-29-Assignment-1.html",
            "relUrl": "/2022/09/11/APEC-Chapter-29-Assignment-1.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Notes - College Board Create Performance Task",
            "content": "College Board Create Performance Task . Row 1: Program Purpose and Function . Know the difference between program purpose and function . In College Board scoring guidelines . Row 2: Data Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program (Skill Abstraction in Program Development - data) . Row 3: Managing Complexity . Explain how abstraction manages complexity (Skill Abstraction in Program Development explain complexity . Row 4: Procedural Abstraction . Use abstraction to manage complexity in a program (Skill Abstraction in Program Development - procedures/functions) . Row 5: Algorithm Implementation . Implement and apply an algorithm (Skill Algorithms and Program Development) . Row 6: Testing . Investigate the situation, context, or task (Skill Computational Solution Design - testing) .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2022/09/08/CollegeBoard-Performance-Task.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2022/09/08/CollegeBoard-Performance-Task.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Notes - AppLab Quiz Creation",
            "content": "AppLab Quiz Creation . Here is the link to my quiz . Starting off . Here is what I noticed when exploring: . the dimensions of the screen were 320 by 450. This Note is mainly used to help center the objects I add | I could change the color of the objects color, or the color of texts using setting the rgba values | I can duplicate the screen if I want to keep the format of the screen I created | I saw that the user can input text and that they can choose from a dropdown menu | I can switch between block code and text code | . Plan . Create a math themed quiz | Create different difficulties | Find a way to go to a quiz of matching difficulty using the dropdown menu | Be able to show the final score at the end of the quiz | Be able to use only | . Process . I ended up designing a total of 13 different screens with three pairs of 3 questions, each with a different corresponding difficulty, a starting screen: Start_Window, a correct answer screen: CorrectScreen, a incorrect answer screen: WrongAnswer, and a end screen: End_Screen . . I created 3 different difficulties corresponding to different school levels . . I initially had problems figuring out how to make it so that the dropdown option I chose would result in the app taking me to the different quizzes. However, after exploring a bit more in the code blocks, I was able to create an if else statement that would take me to different screens depending on what was chosen from the dropdown option. . . The format for all the questions is a user inputted response based one. The code I wrote makes it so that after you click the button the reads “Check Answer”, if the inputted texts matches the answer, you go to the CorrectScreen screen. If you get it wrong, you’ll go to the WrongAnswer screen. (the question shown below, Normal_Question_1, is the only one where there were two possible answers, which I was able to do using double vertical bars) . . For the final question of each difficulty, I created a string concatenation that would show the results of the quiz in the blank text box in the End_Screen. . . Results and Findings . The block form of code made it really easy to visualize how each block of code worked and made it easier to find out what went wrong. It was also cool to be able to convert the blocks into JavaScript, which made JavaScript muc easier to understand. While thinking back to how I made this quiz, I realize there are a few bugs that need to be patched up such as: . If I go back to the Start_Window clicking a “Quit” or “Home” button, the dropdown menu defaults to the previously chosen item. So if I end up choose the “Choose Difficulty” item and press start, it goes to the “Hard” difficulty. | The var correct does not reset back to 0 after starting another quiz | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2022/09/07/AppLab-Quiz.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2022/09/07/AppLab-Quiz.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Lecture Notes - HTML Fragments",
            "content": "Lecture Notes - HTML Fragments . What Lists, Dictionaries, and Iterations are and how to use them . HTML Fragments . procedural abstraction and data abstraction - taking little pieces of information and putting them into different files so that something can take it in the bigger system . markdown gets converted into html. everything in your website gets converted to html. . HTML Write Analysis . The theme of the Blog could be changed in the _config.yml file in the home directory of the blog. Either theme or remote_theme key pair value can be altered. The remote_theme method needs to have the jekyll-remote-theme to be defined in the plugins key. I decided to change to the midnight theme because I thought the theme name sounded cool. . I ran into a minor problem of naming the remote theme wrong, but that was quickly fixed . . Here is what the homepage looked like: . . The problems that I noticed were that the changes removed the blog’s navigation bar such as the search and tabs. That is the main problem I saw. When opening some of my posts, they were no negatively affected, but you are unable to open the homepage once you have left: . . One last thing that I noticed before I changed back to the minima theme is that the icon of the blog does not show up. The conclusion that I came from this experiment is that other Jekyll themes are not entirely compatible with fastpages and that minima is the preferred theme. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%202/markdown/post/2022/09/01/Lecture-Notes.html",
            "relUrl": "/t1/notes/week%202/markdown/post/2022/09/01/Lecture-Notes.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Lecture Notes - Lists, Dictionaries, Iteration",
            "content": "Lists . Starts with square brackets [], then list the values, quote each value, with commas after each variable . list = [1, 2, 3, 4] print(&quot;list&quot;, list, type(list), &quot;length&quot;, len(list)) print(&#39;- list[3]&#39;, list[3], type(list[3])) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) . list [1, 2, 3, 4] &lt;class &#39;list&#39;&gt; length 4 - list[3] 4 &lt;class &#39;int&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; . name = &quot;Evan&quot; print(&quot;What is the value of variable name:&quot;, name) . What is the value of variable name: Evan . Notes can be made this way. . Dictionary . Starts with squiggly brackets {} Define data patterns . A list of dictionaries . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;none&quot;, &quot;Hobbies&quot;: [&quot;sleeping&quot;] }) print(InfoDb) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: &quot;4Runner&quot;, &quot;Hobbies&quot;: [&quot;eating&quot;] }) print() print() # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}] [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: &#39;4Runner&#39;, &#39;Hobbies&#39;: [&#39;eating&#39;]}] . Hacks . .append() . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Fav_Color&quot;: &quot;Unknown&quot;, &quot;Sleep_Schedule&quot; : &quot;Unknown&quot;, &quot;is_Teacher&quot;: True, &quot;Hobbies&quot;: [&quot;Teaching&quot;, &quot;Programming&quot;], &quot;Games&quot;: [], &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Fav_Color&quot;: &quot;Blue&quot;, &quot;Sleep_Schedule&quot; : &quot;2am&quot;, &quot;is_Teacher&quot;: False, &quot;Hobbies&quot;: [&quot;Running&quot;, &quot;Reading&quot;, &quot;Eating Asian Food/ Food Connoisseur&quot;, &quot;Sleeping&quot;, &quot;Homework&quot;, &quot;Programming&quot;], &quot;Games&quot;: [], &quot;Owns_Cars&quot;: [&quot;2001-Camry&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Alex&quot;, &quot;LastName&quot;: &quot;Lu&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;November 29, 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;maodou1258@gmail.com&quot;, &quot;Fav_Color&quot;: &quot;White&quot;, &quot;Sleep_Schedule&quot; : &quot;1am&quot;, &quot;is_Teacher&quot;: False, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Tennis&quot;, &quot;Reading&quot;, &quot;Sleeping&quot;], &quot;Games&quot;: [&quot;League of Legends&quot;, &quot;VALORANT&quot;, &quot;Minecraft&quot;, &quot;OSU&quot;], &quot;Owns_Cars&quot;: [] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Fav_Color&#39;: &#39;Unknown&#39;, &#39;Sleep_Schedule&#39;: &#39;Unknown&#39;, &#39;is_Teacher&#39;: True, &#39;Hobbies&#39;: [&#39;Teaching&#39;, &#39;Programming&#39;], &#39;Games&#39;: [], &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;Blue&#39;, &#39;Sleep_Schedule&#39;: &#39;2am&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;Running&#39;, &#39;Reading&#39;, &#39;Eating Asian Food/ Food Connoisseur&#39;, &#39;Sleeping&#39;, &#39;Homework&#39;, &#39;Programming&#39;], &#39;Games&#39;: [], &#39;Owns_Cars&#39;: [&#39;2001-Camry&#39;]}, {&#39;FirstName&#39;: &#39;Alex&#39;, &#39;LastName&#39;: &#39;Lu&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;November 29, 2006&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;maodou1258@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;White&#39;, &#39;Sleep_Schedule&#39;: &#39;1am&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Tennis&#39;, &#39;Reading&#39;, &#39;Sleeping&#39;], &#39;Games&#39;: [&#39;League of Legends&#39;, &#39;VALORANT&#39;, &#39;Minecraft&#39;, &#39;OSU&#39;], &#39;Owns_Cars&#39;: []}] . For loop . def data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Favorite Color:&quot;, d_rec[&quot;Fav_Color&quot;]) print(&quot; t&quot;, &quot;Is Teacher?:&quot;, d_rec[&quot;is_Teacher&quot;]) print(&quot; t&quot;, &quot;Hours of Sleep:&quot;, d_rec[&quot;Sleep_Schedule&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot; + &quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print(&quot; t&quot;, &quot;Games: &quot; + &quot;, &quot;.join(d_rec[&quot;Games&quot;])) print(&quot; t&quot;, &quot;Cars Owned: &quot; + &quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e . While loop . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: . Printing in reverse . def reversed_loop(arr): print(&quot;Reversed output of For loop:&quot;) for i in arr[::-1]: print_data(i) reversed_loop(InfoDb) . Reversed output of For loop: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac . Recursion . def recursion(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursion(i + 1) return print(&quot;Recursive loop output n&quot;) recursion(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e . Adding to the List using Input . def add_entry(): name = input(&quot;First and last name seperated by spaces: &quot;).split() gender = input(&quot;What is your gender? &quot;) birthdate = input(&quot;When were you born? &quot;) residence = input(&quot;City you live in? &quot;) email = input(&quot;email? &quot;) color = input(&quot;favorite color? &quot;) sleep = input(&quot;When do you go to bed? &quot;) is_teacher = bool_input(&quot;Are you a teacher? [yes/no] &quot;) hobbies = [] print(&quot;hobbies? &quot;) hobbies = multi_input(hobbies) games = [] print(&quot;Games? &quot;) games = multi_input(games) cars = input(&quot;What car(s) do you own? &quot;) entry = { &quot;FirstName&quot;: name[0], &quot;LastName&quot;: name[1], &quot;Gender&quot;: gender, &quot;DOB&quot;: birthdate, &quot;Residence&quot;: residence, &quot;Email&quot;: email, &quot;Fav_Color&quot;: color, &quot;Sleep_Schedule&quot;: sleep, &quot;is_Teacher&quot;: is_teacher, &quot;Hobbies&quot;: hobbies, &quot;Games&quot; : games, &quot;Owns_Cars&quot;: cars } return entry def bool_input(prompt): while True: try: return {&quot;yes&quot;:True,&quot;no&quot;:False}[input(prompt).lower()] except KeyError: print(&quot;Invalid input please enter yes or no&quot;) def multi_input(arr): i = 0 temp = &quot;&quot; while temp != &quot;none&quot;: i+=1 temp = input(&quot;Please enter item number {0}, type none to proceede &quot;.format(str(i))) if temp.lower != &quot;none&quot;: arr.append(temp) return arr new_entry = add_entry() InfoDb.append(new_entry) print(InfoDb[-1]) . hobbies? Games? {&#39;FirstName&#39;: &#39;Haseeb&#39;, &#39;LastName&#39;: &#39;Beg&#39;, &#39;Gender&#39;: &#39;male&#39;, &#39;DOB&#39;: &#39;december sixth 2007&#39;, &#39;Residence&#39;: &#39;san diego&#39;, &#39;Email&#39;: &#39;mirzahbeg123@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;blbue&#39;, &#39;Sleep_Schedule&#39;: &#39;11pm&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;sleep&#39;, &#39;none&#39;], &#39;Games&#39;: [&#39;minecraft&#39;, &#39;none&#39;], &#39;Owns_Cars&#39;: &#39;none&#39;} . Quiz . Questions_Answers = { &quot;What is 1 + 1 equal to?&quot; : [&quot;2&quot;], &quot;What is 1 times 1 equal to?&quot; : [&quot;1&quot;], &quot;What is 1 divided by 1 equal to?&quot; : [&quot;1&quot;], &quot;What is 1 divided by 0 equal to?&quot; : [&quot;Undefined&quot;, &quot;undefined&quot;] } def get_pair(dict): return [q for q, a in dict.items()], [a for q, a in dict.items()] def percentage(x, y): return &#39;{0:.2f}&#39;.format(100 * float(x)/float(y)) correct = 0 total = len(Questions_Answers) Questions_Answers_pairs = get_pair(Questions_Answers) for i in range(0,len(Questions_Answers_pairs[0])): rsp = input(&quot;Question: &quot; + Questions_Answers_pairs[0][i]) if rsp in Questions_Answers_pairs[1][i]: print(rsp + &quot; was correct!&quot;) correct+=1 else: print(&quot;{0} was incorrect, the correct answer was: {1}&quot;.format(rsp, &quot;, &quot;.join(Questions_Answers_pairs[1][i]))) print(&quot;Congratulations, you got {0}% on this quiz&quot;.format(percentage(correct,total))) . 2 was correct! 1 was correct! 0 was incorrect, the correct answer was: 1 undefined was correct! Congratulations, you got 75.00% on this quiz .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%202/2022/08/30/Lectures-Notes.html",
            "relUrl": "/t1/notes/week%202/2022/08/30/Lectures-Notes.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | list = [1, 2, 3, 4] print(&quot;list&quot;, list, type(list), &quot;length&quot;, len(list)) print(&#39;- list[3]&#39;, list[3], type(list[3])) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) . list [1, 2, 3, 4] &lt;class &#39;list&#39;&gt; length 4 - list[3] 4 &lt;class &#39;int&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; . name = &quot;Evan&quot; print(&quot;What is the value of variable name:&quot;, name) . What is the value of variable name: Evan . # variable of type string name = &quot;Evan&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 101.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Evan &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 101.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Evan&#39;, &#39;age&#39;: 16, &#39;score&#39;: 101.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Evan &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;none&quot;, &quot;Hobbies&quot;: [&quot;sleeping&quot;] }) print(InfoDb) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: &quot;4Runner&quot;, &quot;Hobbies&quot;: [&quot;eating&quot;] }) print() print() # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}] [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: &#39;4Runner&#39;, &#39;Hobbies&#39;: [&#39;eating&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, d_rec[&quot;Owns_Cars&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Cars: none Hobbies: sleeping Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Hobbies: eating . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Installation Checks for Evan Aparri",
            "content": "Python Intstallation Checks . python --version python3 --version . Python 3.9.12 Python 3.9.12 . function PythonInstallationCheck () { printf &quot;Checking python version n&quot; if [[ $(python3 --version) ]]; then py3version=$(python3 --version | cut -d&quot; &quot; -f2) printf &quot; - Python version $py3version has already been installed&quot; else printf &quot;Python not found&quot; fi } PythonInstallationCheck . Checking python version - Python version has already been installed . Java Installation Checks . function JavaInstallationCheck () { printf &quot;Checking java version n&quot; if [[ $(java --version) ]]; then javaversion=$(java --version | cut -d&quot; &quot; -f2) printf &quot; - Java version $javaversion has already been installed n&quot; else printf &quot;Java not found n&quot; fi } function JavaCInstallationCheck () { printf &quot;Checking javaC version n&quot; if [[ $(javac --version) ]]; then javacversion=$(javac --version | cut -d&quot; &quot; -f2) printf &quot; - JavaC version $javacversion has already been installed n&quot; else printf &quot;JavaC not found n&quot; fi } JavaInstallationCheck JavaCInstallationCheck . Checking java version - Java version 11.0.16 Runtime 64-Bit has already been installed Checking javaC version - JavaC version 11.0.16 has already been installed . Anaconda . Anaconda Installation Checks . function AnacondaInstallationCheck () { printf &quot;Checking anaconda version n&quot; if [[ $(conda --version) ]]; then anacondaversion=$(conda --version | cut -d&quot; &quot; -f2) printf &quot; - anaconda version $anacondaversion has already been installed&quot; else printf &quot;Anaconda not found&quot; fi } AnacondaInstallationCheck . Checking anaconda version - anaconda version 4.13.0 has already been installed . Anaconda Package Installation Check . function AnacondaPackageCheck () { printf &quot;Checking Anaconda package version n&quot; if [[ $(conda list | grep $1) ]]; then anacondapackageversion=$(conda list | grep $1 | awk &#39;{print $2}&#39;) printf &quot; - Conda package $1 version $anacondapackageversion has already been installed&quot; else printf &quot; - Conda Package not found&quot; fi } AnacondaPackageCheck &quot;nodejs&quot; . Checking Anaconda package version - Conda package nodejs version 6.11.2 has already been installed . Jupyter . Jupyter Kernels Check . function JupyterKernelsCheck () { printf &quot;Checking jupyter kernel installation&quot; if [[ $(jupyter kernelspec list | grep $1) ]]; then kernelpath=$(jupyter kernelspec list | grep $1 | awk &#39;{print $2}&#39;) printf &quot; - Jupyter $1 kernel has been found at $kernelpath&quot; else printf &quot; - Jupyter $1 kernel not found&quot; fi } kernels=&quot;bash javascript python3&quot; for i in $kernels; do JupyterKernelsCheck $1 done . Checking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not foundChecking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not foundChecking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not found .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/26/bash-checks.html",
            "relUrl": "/jupyter/2022/08/26/bash-checks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Lecture Notes - Bash and Cloud",
            "content": "Notes . The cloud has all git repositories. Individual computers can clone repositories from the cloud takes it to their SSD . A pull action will pull any new updates made at the repository down to our local repository and update it with the latest changes. . A push action will push any new updates made at the local repository to our remote repository in the cloud and contribute to the git repository. . A sequence is two or more lines of code .",
            "url": "https://chewyboba10.github.io/sushi-burrito/markdown/2022/08/25/Lecture-Notes.html",
            "relUrl": "/markdown/2022/08/25/Lecture-Notes.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Quiz",
            "content": "Original Quiz by Mr. Mortenson . Below shows the initial code created by Mr. Mortenson in Hello to Python. . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, root running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Question: What command is used to include other functions that were previously developed? yes is incorrect! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! root you scored 2/3 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;Name the Python output command mentioned in this lesson?&quot;) question_and_answer(&quot;If you see many lines of code in order, what would College Board call it?&quot;) question_and_answer(&quot;Describe a keyword used in Python to define a function?&quot;) . Question: Name the Python output command mentioned in this lesson? Answer: sequence Question: If you see many lines of code in order, what would College Board call it? Answer: sequence Question: Describe a keyword used in Python to define a function? Answer: sequence . Changes Made by Me . Compared to my friend Alex Lu&#39;s quiz, this will be very lacking, but I think that this is a good representation of my current abilities. . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 skipped = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) rsp = question_with_response(&quot;Are you ready to take a test? Answer &#39;yes&#39; or &#39;no&#39;&quot;) if rsp == &quot;yes&quot;: print(&quot;good luck&quot;) if rsp == &quot;no&quot;: print(&quot;too bad&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) + &quot;/&quot; + str(questions) + &quot;, with &quot; + str(skipped) + &quot; skipped questions&quot;) . Hello, chewyboba10 running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Answer &#39;yes&#39; or &#39;no&#39; too bad Question: What command is used to include other functions that were previously developed? skipping question Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! chewyboba10 you scored 2/3, with 0 skipped questions . Getting Rid of Repeating Code . It will take a long time to add these lines of code multiple times, so I&#39;ll try to reduce the amount I make when creating more questions. . import getpass, sys questions = 10 correct = 0 skipped = 0 def question_with_response(question, answer): print(&quot;Question: &quot; + question) msg = input() if msg == answer: print(msg + &quot; is correct&quot;) global correct correct += 1 elif msg == &quot;skip&quot;: print(&quot;Question has been skipped&quot;) global skipped skipped += 1 else: print(msg + &quot; is incorrect&quot;) def percentage(right, wrong): percentage = 100 * float(right)/float(wrong) return str(percentage) + &quot;%&quot; print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) print(&quot;Are you ready to take a test?&quot;) rsp = input() if rsp == &quot;yes&quot;: print(&quot;Great! Good luck!&quot;) if rsp == &quot;no&quot;: print(&quot;too bad&quot;) question_with_response(&quot;Name the Python output command mentioned in this lesson?&quot;, &quot;print&quot;) question_with_response(&quot;If you see many lines of code in order, what would College Board call it?&quot;, &quot;sequence&quot;) question_with_response(&quot;Describe a keyword used in Python to define a function?&quot;, &quot;def&quot;) question_with_response(&quot;What command is used to evaluate correct or incorrect response in this quiz?&quot;, &quot;if&quot;) question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;expression&quot;) question_with_response(&quot;What is an input to a function or method called?&quot;, &quot;parameter&quot;) question_with_response(&quot;If Input is data the computer receives, what is the data that the computer sends back?&quot;, &quot;output&quot;) question_with_response(&quot;What is a reusable block of code called?&quot;, &quot;function&quot;) question_with_response(&quot;What operator is used for string concatenation in Python?&quot;, &quot;+&quot;) question_with_response(&quot;Which function can be used to turn numbers turned into string in Python?&quot;, &quot;str() function&quot;) print(&quot;Congratulations &quot; + getpass.getuser() + &quot;! You got &quot; + percentage(correct, questions) + &quot; and skipped &quot; + str(skipped) + &quot; questions!&quot;) . Hello, chewyboba10 running /bin/python3 You will be asked 10 questions. Are you ready to take a test? too bad Question: Name the Python output command mentioned in this lesson? print is correct Question: If you see many lines of code in order, what would College Board call it? sequence is correct Question: Describe a keyword used in Python to define a function? Question has been skipped Question: What command is used to evaluate correct or incorrect response in this quiz? if is correct Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct Question: What is an input to a function or method called? parameter is correct Question: If Input is data the computer receives, what is the data that the computer sends back? output is correct Question: What is a reusable block of code called? idk is incorrect Question: What operator is used for string concatenation in Python? + is correct Question: Which function can be used to turn numbers turned into string in Python? str() function is correct Congratulations chewyboba10! You got 80.0% and skipped 1 questions! . I am satisfied with how this turned out! Please comment if there is any problems or things I can work on. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/23/Python-Quiz.html",
            "relUrl": "/jupyter/2022/08/23/Python-Quiz.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "First Blog Post",
            "content": "Hello Everyone . This is my first blog post! My name is Evan Aparri, and I currently have no experience with Computer Science. I am excited to learn how to continue working on my blog. . My Hobbies . Here are some of the things that I like to do when I have free time: . Sleep | Eat | Violin | Cross Country | Track and Field | Watch YouTube | . Other Things that I like . The color blue | Sushi | Traveling | . Thanks for visiting . Please let me know if there is anything that I could improve .",
            "url": "https://chewyboba10.github.io/sushi-burrito/markdown/2022/08/21/First-blog-post.html",
            "relUrl": "/markdown/2022/08/21/First-blog-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "First Jupyter Notebook",
            "content": "Trying things out . I&#39;m going to see if I can actually do something with Python . print(&quot;Hello everyone&quot;) . Hello everyone . It Worked! . Let&#39;s do something a little harder . a = 2 b = 5 c = (a + b) d = 7 if (c == d): for i in range(3): print(&quot;2+5 is equal to 7&quot;) . 2+5 is equal to 7 2+5 is equal to 7 2+5 is equal to 7 . That&#39;s all for now! .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/20/first-notebook.html",
            "relUrl": "/jupyter/2022/08/20/first-notebook.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://chewyboba10.github.io/sushi-burrito/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chewyboba10.github.io/sushi-burrito/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Lecture Notes",
          "content": "This page contains the notes I have taken during Mr. Mortenson’s lecture . Table of Contents . Week 0 . Date Subject . Blank | Blank | . Week 1 . Date Subject . 8/24/22 | Blog Posting and Configuration | . 8/25/22 | Bash and Cloud | . Week 2 . Date Subject . 8/29/22 | Data Abstraction | . 8/30/22 | List, Dictionaries, Iteration | . 9/1/22 | HTML Fragments | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/_pages/lecture-notes.html",
          "relUrl": "/_pages/lecture-notes.html",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "Vocab",
          "content": "Vocab Definition Example . Input | Data that is taken in by the computer from the user | print(“hello world!”) | . Output | Data that is returned by the computer to the user | input(“What are your hobbies?”) | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/_pages/vocab.html",
          "relUrl": "/_pages/vocab.html",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}