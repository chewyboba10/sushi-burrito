{
  
    
        "post0": {
            "title": "5.5, 5.6 Blog & Hacks",
            "content": "5.5 Legal and Ethical Concerns . Cost of Free . In Mr Mortensen’s most recent years in industry, there were many Lawyers making a profession on Patents and how they can be impacted on General Public Licensing (GPL). . Qualcomm makes its money on patents, if you use GPL software you could be voiding your rights to charge for software and patents. Open Source by nature, specifically GPL, says any derivative work is free and code should be shared. Qualcomm wants all derivative work to require a royalty payment payment, also anyone who uses the idea/patent pays royalty. . image.png . From synopsis.com, “Black Duck® software composition analysis (SCA) helps teams manage the security, quality, and license compliance risks that come from the use of open source and third-party code in applications and containers.” Qualcomm has had 20 technical jobs and 3 lawyers analyzing all the code produced, analyzing code for Open Source inclusion, and analyzing impact of such licenses to its ability to charge royalties for the use of their Patents. . This may sound like a simple problem, but think about the Students of Today, often they are given an assignment and instead of developing their own algorithm they opt to copy something off the internet. Well, don’t think the Workers of Today are entirely different. In summary, it is important to know the type of software license you are copying, it could impact billions of dollars in business. . License Communities, License Types Guide . Adding and selecting a license GitHub instructions. An author, a licensor, needs to determine a license. This may result in asking… Do I want to waive default copyright in reuse? | Do I want to allow derivative works or not? | Do I want to require all derivative code to be shared? | | . Creative Commons Zero v1.0 Universal . The Creative Commons CC0 Public Domain Dedication waives copyright interest in a work you’ve created and dedicates it to the world-wide public domain. . Open Source MIT License . This license in friendly to someone like Qualcomm! This allows using code freely and making and distributing closed source versions. Typically, the author of software with MIT License want credit. Credit could be as simple as adding the authors name in comments. . Close source means the GitHub project could be private. . Open Source GPL License . The GNU GPLv3 also lets people do almost anything they want with your project, except distributing closed source versions. . Open source means the GitHub project must be public. . For a company like Qualcomm, they are required to institute many practices to deliver their code in parts (public vs private). Isolating their patent and secret code, far away from the GPL or Creative Commons code. In fact, a company that is protecting their patents may need to division engineers, split distribution, not deploy to public, etc. After distribution, the customer of the Patented (ie Qualcomm) product is required to put the public/private domain code back together again. . Legal and Ethically . We need to comply with the terms of licenses. We need to cite sources. (I am particularly bad with internet pictures. However, in the picture of the Black Duck above I am actually advertising the Company). . As consumers, we have become aware that Music and Movie companies own content. These companies build DRM (Digital Rights Management) software to protect, play, and/or distribute content. Most of us buy subscriptions to services. However, some figure out ways to bypass systems and allow download. Often we will see these sites disappear, as they are illegal. . In software, it can be more complicated to understand all the Creative Commons licenses and its impact to our own ideas and businesses. Mostly, if we use things in class, there is “no problem” with Open Source as our usage is considered educational use. Creative Commons software has enabled amazing innovation as we are able to do so much for free, as we have done in this class. However, Individuals and Companies are required to figure out techniques and business models in order to use Open Source software according to terms of license. . Long ago, I remember being amazed that Red Hat was not selling its Linux distribution, they were giving away the software. They had to! This was in the terms of the licenses they were using, GPL. However, as an early pioneers in Linux distributions, they established a business model around buying their support agreement. They rose in fortune, became a public company, and had an amazing Initial Public Offering (IPO). Many, many vendors have followed the Red Hat model in building free distributions and establishing unique business models. Qualcomm figured out how to mix Patent and GPL businesses and have flourished since abandoning all proprietary, to include Android in its very complicated business model using Android. . Creative Commons, Open Source are free terminologies! However, businesses will not last without income. And today, businesses won’t last without engineers pulling Open Source software. . Blog Post Reflection . When you create a GitHub repository it requests a license type. Review the license types in relationship to this Tech Talk and make some notes in your personal blog. Cost of Free - The use of GPL software could void the rights to charge for software and patents as per Qualcomm’s business model. | License Communities and License Types Guide - As an author or licensor, it is important to determine the license type to waive default copyright in reuse, allow derivative works or not, and require all derivative code to be shared. | Creative Commons Zero v1.0 Universal - This license waives copyright interest and dedicates the work to the worldwide public domain. | Open Source MIT License - This license is friendly to businesses and allows using code freely and making and distributing closed-source versions. | Open Source GPL License - This license lets people do almost anything they want with the project except distributing closed-source versions. | Legal and Ethical Concerns - It is important to comply with the terms of licenses and cite sources. In the case of software, it is more complicated to understand all the Creative Commons licenses and their impact on one’s ideas and businesses. | Business Models - Red Hat is a classic example of how to build a business model around free distributions by offering support agreements and establishing a unique business model. Qualcomm figured out how to mix Patent and GPL businesses and have flourished. | . | In your blog, summarize the discussions and personal analysis on Software Licenses/Options, Digital Rights, and other Legal and Ethical thoughts from this College Board topic. The cost of free software licenses was discussed, specifically the impact of General Public Licensing (GPL) on patents and the importance of knowing the type of license being used, as it could affect billions of dollars in business. There are various types of licenses and they come with different conditions. Some of the ones discussed were Creative Commons Zero v1.0 Universal, Open Source MIT License, and Open Source GPL License. Creative Commons Zero v1.0 Universal waives copyright interest in a work and dedicates it to the public domain. The Open Source MIT License allows for the use of code freely and making and distributing closed source versions, with the requirement for credit to be given to the author. The Open Source GPL License allows for people to do almost anything they want with a project, but prohibits the distribution of closed source versions. In terms of legal and ethical concerns, it is important to comply with the terms of licenses, cite sources, and understand the impact of Creative Commons licenses on personal ideas and businesses. Some businesses, such as Red Hat, have established business models around open source software, such as buying support agreements. However, businesses must still find ways to generate income and cannot rely solely on free software. Overall, it is necessary to comply with the legal and ethical obligations related to software licenses, such as citing sources and understanding the terms of licenses. . | Make a license for your personal (blog) and Team repositories for the CPT project. Be sure to have a license for both Team GitHub repositories (frontend/backend). Document license(s) you picked and why. FYI, frontend, since it is built on GitHub pages may come with a license and restrictions. Document in blog how team made license choice and process of update. For my personal repository, I decided to use the MIT License because the language used in the license is simple and easy to understand, making it a clear way to communicate usage rights. I am okay with its permissiveness, which allows others to use and modify my work while requiring them to include the original copyright and license notices. The last reason is that license is widely accepted among those using open source licenses and compatible with other open source licenses. | For my team’s repositories for the CPT project, we decided to choose MIT Licenses for both the frontend and backend repositories for the same reasons I listed for my personal repository. . 5.6: Safe Computing . Personal Identifiable Information (PII) . As we create a Web Site and post information we are adding to the Searchable PII. However, there is a dichotomy as a site like LinkedIn is a place where we want to be known for our accomplishments. But be aware, the person that looks at your LinkedIn will, most likely, look at things like TikTok, Instagram or Facebook. . PII considerations . Things that will be known by everyone: Name, Email (suggest a junk email), Picture, High School attended, College Attended, Properties you own, State-City of residence, all State-City of previous residence, Credit Reports, … | Gray area items, more cautious: Birth date, Place of Birth, Street Address, Phone Number, Maiden names of Mother and Grandmother, Drivers License Number, … | Things that you should strive to keep absolutely secret: Credentials for Access, Two-Factor Authentication on Financial accounts, Social Security Number, Tax records, … | . Beware, Establish practices for your own Safety . Multi-factor authentication often requires you to enter a code that has been texted or emailed to you. Other types of authentication are biometrics (finger print or facial recognition). | Malware is often sent in attachments to things in email. Often they request you to click on an attachment and it starts the process of adding a virus to your computer. | Phishing is where unknown sources try to entice you into a response, like click here and receive $500. Often such systems impersonate someone like Amazon asking for login information. Be careful to look closely at source of email (ie amzn.com vs amazon.com). | . Factors to Increase Security of System (recommend Watch 5.6 Video 2) . Most of my financials or critical systems use Multi Factor authentication | Biometrics is something that is used secure systems, fingerprints or facial recognition | Symmetric encryption is a type of encryption where only one key (a secret key) is used to both encrypt and decrypt electronic information. | Asymmetric cryptography, also known as public-key cryptography, is a process that uses a pair of related keys – one public key and one private key – to encrypt and decrypt a message and protect it from unauthorized access or use. | SSL Uses both Asymmetric and Symmetric Encryption | . Nefarious Uses of Internet . A Virus or Malware compromise security, they are opposite of increasing security. | Phishing is a way to get a Virus on your machine, or a way to get you to input PII. | After a Virus or being compromised by Phishing it is advised to review all of you PII vulnerabilities. | . Blog Post Reflection: . Describe PII you have seen on project in CompSci Principles. Some Personal Identifiable Information that I have seen in my and other’s projects are our github usernames, in some cases our names, and the high school we attend (through questions asking us about things related to Del Norte). . | What are your feelings about PII and your personal exposure? I feel comfortable sharing basic information about myself such as my name and picture, but I would feel uncomfortable if others found out my street address, information about my family, or some obvious ones like my SSN. . | Describe good and bad passwords? What is another step that is used to assist in authentication. A good password is one that is difficult for others to guess or crack. It should be at least 12 characters long and a mixture of upper- and lowercase letters, numbers, and special characters. Don’t use easily guessable information such as your name, address, or birthdate. A bad password is one that is easy to guess or can be easily found in a dictionary. Examples of bad passwords include “password” or “123456”. You should avoid using easily guessable information or simple patterns like “qwerty” or “111111.” Another step that is used to assist in authentication is two-factor authentication (2FA). This adds an extra layer of security to your accounts by requiring a second piece of information in addition to your password, such as a code sent to your phone. This makes it more difficult for someone to gain unauthorized access to your account, even if they have your password. . | Try to describe Symmetric and Asymmetric encryption. Symmetric encryption and Asymmetric encryption are two different methods used for encrypting and decrypting data. Symmetric encryption, also known as shared-key encryption, uses a single key to both encrypt and decrypt data. This key must be kept confidential and shared securely between the sender and receiver. The same key is used for encryption and decryption, making the process fast and efficient. Asymmetric encryption, also known as public-key encryption, uses a pair of keys - a public key for encryption and a private key for decryption. The public key is used to encrypt the data and the private key is used to decrypt the data. This method allows for secure communication without the need to share a secret key beforehand. . | Provide an example of encryption we used in AWS deployment. An example of encryption we used in AWS deployment was converting our backend website from http to https. . | Describe a phishing scheme you have learned about the hard way. Describe some other phishing techniques. A phishing scheme that I have learned about is the ones that say something like “Congratulations! You have just done Google’s 10 billionth search. Click here to earn $500.” Some other phishing techniques include vishing (voice phishing) which is phishing attempts made through phone calls,spear phishing which aimed at a specific individual or organization, whaling which is phishing aimed at high-level executives or important individuals, and Clone phishing, which is phishing attacks that use a copy of a legitimate email, but with a malicious link or attachment. . |",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/02/08/5.5-5.6-blog.html",
            "relUrl": "/t2/post/2023/02/08/5.5-5.6-blog.html",
            "date": " • Feb 8, 2023"
        }
        
    
  
    
        ,"post1": {
            "title": "5.3, 5.4 Blog",
            "content": "5.3: Computer Bias . Computing can have both beneficial and harmful effects. | Human error and bias are prevalent, leading to discussions about computer bias. | Algorithms created by programmers can also be biased, intentional or not. | Age group preferences for different social media platforms can show purposeful exclusion and raise questions about harm and correction. | The use of female voices for virtual assistants is a purposeful decision that raises questions about harm and correction. | . Intentional or Purposeful bias (Crossover Group Up, 10 minutes) . Google “What age groups use Facebook” vs “… TikTok”? What does the data say? Is there purposeful exclusion in these platforms? Is it harmful? Should it be corrected? Is it good business? The data says that the age group that uses Facebook the most are those from 25-34 years old vs Tiktok which is 10-19 years old. There is purposeful exclusion in these platforms because Facebook is much more plain and not as colorful as Tiktok, so the younger generation is attracted to Tiktok more than Facebook, which is more plain. This can be harmful because it can exclude certain viewpoints which lead to narrowed views on certain ideas. It should be corrected because it can make people be more prone to being influenced of those of the same age group, which may affirm certain ideas they have, even if it is an incorrect or dangerous idea. It is a good business because people want their ideas to be affirmed and also want to fit in with others their age. . | Why do virtual assistants have female voices? Amazon, Alexa Google, Apple Siri. Was this purposeful? Is it harmful? Should it be corrected? Is it good business? Virtual assistants have female voices because virtual assistants can help us be informed or can teach us something, and when people think of people that do so many will think of a woman that does so, so I think this was purposeful. I think this is harmful because it perpetuates the belief that women’s role in society is to assist others. I think this should be corrected so that people can choose to do either male or female voices. I think it is a good business because . | Talk about an algorithm that influences your decisions, think about these companies (ie FAANG - Facebook, Amazon, Apple, Netflix, Google) An algorithm that influences are decisions are the advertisement algorithms in google. If you search up something on Google such as Bikes, suddenly you’ll see many advertisements on different websites like YouTube even after it has been searched up. So you’ll continue to think about the product and be more likely to buy it. . | . As Pairs (5 minutes) . Watch the video… HP computers are racist | Come up with some thoughts on the video and be ready to discuss them as I call on you. Here are some ideas… | Does the owner of the computer think this was intentional? I don’t think that the owner of the computer thinks that this was intentional | If yes or no, justify you conclusion. The owner and his friend were both smiling when making the video, suggesting that they think that this situation is humorous. | How do you think this happened? I think that when they were testing this camera following, the tests that they ran before it was sent out into the market only was run with people that did not have darker skin. | Is this harmful? Was it intended to be harmful or exclude? I think this is harmful even if it wasn’t intended to be harmful and excluding. | Should it be corrected? I should be corrected because there are many other users of computers that have darker skin. | What would you or should you do to produce a better outcome? I would do testing for multiple perspectives in groups, in order to avoid bias and get feedback from others. | . Hacks . Write summary/thoughts/conclusions from each of the exercises above. Focus on avoiding Bias in algorithms or code you write. . 5.4: Crowdsourcing . Crowdsourcing allows for obtaining and sharing information beyond one’s own community, reducing computer bias. | Evidence of crowdsourcing can be seen in platforms like Wikipedia, which has a large amount of information from crowdsourcing and is corrected through a self-policing community. | Crowdsourcing has also impacted the innovation of crypto currency and block chain technology, as well as the collection and analysis of COVID data. | Crowdsourcing has the potential to spawn new ways of thinking about data and its impact on people’s lives. | . Obtaining Data via Crowdsourcing (Crossover Group Up, ~10 minutes) . We have all experienced Crowdsourcing by using external data through API’s, namely RapidAPI. This data has influenced how we code and shown possibilities in obtaining and analyzing data. Discuss APIs you have used. We have used many APIS like a COVID-19 API, the Jokes API, and the . . | We have all participated in code Crowdsourcing by using GitHub. Many of you have forked from the Teacher repository, or exchanged code with fellow students. Not only can we analyze GitHub code, but we can obtain profiles and history about the persons coding history. What is the biggest discovery you have found in GitHub? The biggest discovery I have found in Github is that you are able to take code from other people’s repositories and use it to help you with other projects. For example, you can change the themes of your github page. . | Kaggle datasets for code and science exploration. The avenue of data points us youtube or netflix channels. Analyzing crowd data helps us make decisions. Exam top 10 to 20. Did you see anything interesting? . | . Hacks . Think of a use case for crowdsourcing in you project … . CompSci has 150 ish principles students. Describe a crowdsource idea and how you might initiate it in our environment? | What about Del Norte crowdsourcing? Could your project be better with crowdsourcing? | What kind of data could you capture at N@tM to make evening interesting? Perhaps use this data to impress Teachers during finals week. | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/02/01/5.3-5.4-blog.html",
            "relUrl": "/t2/post/2023/02/01/5.3-5.4-blog.html",
            "date": " • Feb 1, 2023"
        }
        
    
  
    
        ,"post2": {
            "title": "Collegeboard MCQ \#2 Reflections",
            "content": "MCQ Test #2 Results and Reflection . Results: 45/50 . Corrections . Q8: Laptop being borrowed from a school library I didn’t read that two answers should have been chosen, so I ended up choosing only one option. D is another correct option because if a laptop hasn’t been returned, the value of borrows and returns is not equal, so it would display an odd number. If a laptop is not currently borrowed, the value of borrows and returns would be equal, so it would display an even number. . Q12: Controlling an elevator in a building I think I got overwhelmed by the different statements and the Boolean expressions within Boolean expressions. In order for the elevator to move, if (onFloor1 AND callTo2) or (onFloor2 AND callTo1) is true, then the elevator moves regardless if the other Boolean expression is true or false. The situation when this occurs is if the elevator is on floor one and is called to floor two and also when the elevator is on floor 2 and called to floor 1. It doesn’t move when the elevator is on the same floor it is called to. . Q17: selection equivalent to Boolean expression C is incorrect because if val2 was false then in the option I chosen result would be true but that is not the case because in the first condition, it was said that if val1 was not true it would go to the else statement, so val1 must have been false. But in the given statement, if give the previous statements, result would not be able to be true since it needs two trues for an AND Boolean expression to be true. D is correct because it says makes it so that if val1 is false then result is false which matches the given statement. The nested condition also shows that if val2 was not true then result would be true which also matches the given statement. . Q30: use drawCircle to draw figure on a coordinate grid Once again I didn’t read that two answers should have been chosen, so I ended up choosing only one option. I need to ensure in the future to read how many options should be chosen. B is also a correct option because it starts from the smallest circle, and each time the iteration repeats, its radius and y-value increases by one, which matches the graphed circles given. . Q50: ASCII character with hexidecimal I guessed on this question because I forgot how to read hexidecimal. Reviewing and looking it up, this questions is much easier than I thought. Hexidecimal counts from 0-9 then A-F before going onto the next digit, so base 16. So hexidecimal 56 translated to decimal can be found by multiplying 5 by 16 to get 80 then adding 6 to get 86 which corresponds to V on the table. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2023/01/30/MCQ2-Reflection.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2023/01/30/MCQ2-Reflection.html",
            "date": " • Jan 30, 2023"
        }
        
    
  
    
        ,"post3": {
            "title": "Project Memory",
            "content": "Presentation Highlights . Slide 2: Agile Manifesto . Adaptability, Communcation, Collaboration, Creativity, and Quality are our focus | . Slide 3: Concept/Idea for Project . concept retro style arcade | purpose and goal is to have a fun experience while competing with other users | . Slide 4: How our purpose and goal will be accomplished . aesthetic homepage | retro arcade theme and games | leaderboard | . Slide 5: First Feature - Snake Game . Able to keep track of score | Different settings for speed | . Slide 6: Second Feature - Game Settings . Can change speed and wall in settings | More setting planned to be added | . Slide 7: Third Feature - Score Save . High score table will where you will enter in your username | Plan to make score match with the game played and the date be set to current date | . Slide 8: Fourth Feature - Leaderboard . Will be synced with our database | Will display rank, username, score, and date | Two different leaderboards: one for default and another for mods | Top 5 users with the highest score will be displayed | . Slide 9: Fifth Feature - User Game History . Will show the most recent games played | usernames can be searched up | only the top 5 most recent games will be displayed | . Slide 10 &amp; 11: Scrum Board/ Future Plans Shows scrum board split into four columns . Todo | In Progress | Done | Scratchboard | Also shows an issue example of a checklist for the week making sure certain small goals were met . Possible plans/considerations included: . More mods | improving snake game frontend | More games | Login | . Reflection . Mr. Mortenson helped us realize that our 5 “features” that we described in our presentation were really our 1, which was the leaderboard. The rest were parts of the features mentioned. One feature that will be user history so that you can search up a user’s past games and possible compare then to another user. We are still brainstorming the other two features. We are thinking about a login but that will slightly damage the theme of a retro style arcade. . I also think there wasn’t enough communication between group members because sometimes what our groups members said in the presentation when describing the features did match what I had in my mind. So we need a bit more communication between group members to make it super clear what our idea and goals are. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/01/29/Project-Memory.html",
            "relUrl": "/t2/post/2023/01/29/Project-Memory.html",
            "date": " • Jan 29, 2023"
        }
        
    
  
    
        ,"post4": {
            "title": "Project Blog",
            "content": "For the College Board Performance task, it is necessary to adhere to all the guidelines set forth for the project. After receiving feedback from my group’s presentation, I realized that our project should be able to house 4 different Create Performance Tasks with each group member doing one. For my Create Performance Task, it will be on the leaderboard for our snake game. . Outline of CPT Written response . 3 a. 3.a.i. The program provides a leaderboard helps create a competitive environment among fellow snake users. . 3.a.ii. The function of the program is to compare your snake score with top 5 scores of the game. . 3.a.iii. The input will be the username, score obtained from the game, and the date the game was played. The output will be the rank of the user’s score compared to any game played. . 3.b.i. (Will likely show code where the different users and there scores are being stored) . 3.b.ii. (Will likely show our api accessing the code sorting it based on rank) . 3.b.iii. (TBD) . 3.b.iv. The data that my list contains is important to my program because it holds the individuals scores of the users needed to fill up the leaderboard. . 3.b.v. If the program were to run without the __ list, it would make everything very inefficient because I would have to make a new variable every time a user completed a game to store their score. . 3.c.i. (Will likely show the update function that updates the player’s highscore) This code will likely change because our group is still deciding whether a user can have multiple scores on the leaderboard . 3.c.ii. (Will show above function being called) . 3.c.iii. The function takes the new score obtained by a user from their game and compares it to see if their score is greater their high score. If it is, then it replaces it if it does then it replaces the high score. If it isn’t, then it doesn’t replace the high score. . 3.c.iv. (TBD) . 3.c.v. (TBD) . 3.d.i. First example will be when the users inputs a score that is not part of the top 5. . Second example will be when the user reaches a score in the top 5 and replaces the previous holder and pushes the rest down. . 3.d.ii. Condition 1: (Will show score #1 being passed through an if statement deciding whether a score is higher than another) . Condition 2: (Will show score #2 being passed through an if statement deciding whether a score is higher than another) . 3.d.iii. Results #1: The result of the first call will display the rank of the user’s score without it being displayed on the top 5 leaderboard. . Result #2: The result of the second call will display the rank of the user’s score while also being displayed on the top 5 leaderboard. . Code I will need for CPT . code showing how data has been stored in a list ( other collection type) | code showing how the data is the list above is being used to fulfill the program’s purpose | . | code showing a student-developed procedure with at least one parameter that has an effect on the functionality of the procedure. | code showing how the procedure above is being called | . | program code segment from a student-developed algorithm that includes sequencing, selection, iteration. | . Code plan . I will need to create a code that stores the past games and it being accessed to create a leaderboard | I will need to show a procedure that has a parameter and effect on the program’s function and also it being called | I will need an algorithm sorting the rank of the users based on their score | . Video plan . I will show me running the snake game and getting a low score and then inputting submitting the score to go to the leaderboard | Then I will show me running the snake game and getting a high score that will become part of the top 5 leaderboard | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/01/25/Project-Blog.html",
            "relUrl": "/t2/post/2023/01/25/Project-Blog.html",
            "date": " • Jan 25, 2023"
        }
        
    
  
    
        ,"post5": {
            "title": "5.1, 5.2 Blog",
            "content": "5.1: Beneficial and Harmful Effects . There are many things made by computing, but each of the products created by computing can have both positive and negative effects. . Example: ChatGPT . Benefits: More streamlined version of google, easier to search for answers to your questions Harms: Being reliant on it can lead to lack of critical thinking, created biased answers. . Blog Post Reflection . Come up with three of your own Beneficial and corresponding Harmful Effects of Computing Beneficial Effect: Increased productivity and efficiency through automation of repetitive tasks. Harmful Effect: Loss of jobs due to automation of tasks that were previously performed by humans. | Beneficial Effect: Improved communication and connectivity through technology. Harmful Effect: Decrease in face-to-face communication and increased feelings of isolation. | Beneficial Effect: Access to vast amounts of information through the internet. Harmful Effect: Spread of misinformation and the erosion of critical thinking skills. | | Talk about dopamine issues above. Real? Parent conspiracy? Anything that is impacting your personal study and success in High School? Regarding the dopamine issues mentioned in the video, it is true that technology can have an impact on our brain chemistry. Studies have shown that the use of social media and video games can release dopamine, which is associated with pleasure and reward. However, excessive use can lead to addiction and negatively impact one’s mental and physical health. It is important to be aware of this and make conscious choices about how much time is spent on technology. It is not a parent conspiracy but a real concern that should be taken seriously. In terms of personal study and success in high school, it is important that I strike a balance between technology use and other activities such as exercise, socializing, and studying to ensure academic success. That | . 5.2: Digital Divide . “To Have and Have Not” in relation to Computers, Internet, or Technology in general . Less or little access to Technology for poorer or rural areas in America and other countries | Restricted access in different countries or even schools | . Factors contributing to the digital divide include socioeconomic, geographic, and demographic factors . Individuals may not have access to the latest updates; using older generation of computers | money, religion, education, location, education, nationality, ethnicity, region | . Example: Distance Learning . at the start of the pandemic 90,000 school children in New Jersey did not have access to computers that would allow them to learn online. . Blog Post Reflection - Digital Empowerment . How does someone empower themself in a digital world? To empower oneself in a technology-driven world, one can acquire knowledge and skills on using technology through their teachers, programs, or online resources. | How does someone that is empowered help someone that is not empowered? Describe something you could do at Del Norte HS. An individual who is empowered can help others by volunteering for programs that promote technology access, advocating for policy changes to bridge the technology divide, and sharing resources and knowledge with those who lack access to technology. An example of something that can be done at Del Norte High School is volunteering to teach a technology class or starting a program to provide access to technology to students in need. | Is paper or red tape blocking digital empowerment? Are there such barriers at Del Norte? Elsewhere? Bureaucratic processes can be barriers to technology empowerment as they can slow down or prevent the implementation of technology in certain institutions or organizations. For example, the Del Norte is has been blocking multiple websites that can be accessed through their internet in order to promote safety when browsing, but it also makes it difficult for students to access certain applications or websites that they need when it is blocked by the school. This is not just in Del Norte but also in the various schools that surround us. | . Questions . Think of three beneficial effects of your projects based on 5.1 Unit. Creates a competitive environment between users | Allows user to have fun playing a snake game | Helps work on the users hand-eye coordination | | Think of a potential harmful effect of your project. If someone has an extremely high score, others may be discouraged from making the leaderboard. | . | Answer with an opinion and learnings so far this year: What are pros/cons on internet blockers at router and lack of admin password on lab machines at school? In my opinion, internet blockers at routers can be beneficial for limiting access to certain websites and protecting students from harmful content. However, it can also be detrimental to students’ education as it may limit their access to necessary resources for research and classwork. On the other hand, not having admin passwords on lab machines at school can provide a sense of security in terms of preventing students from installing malicious software or altering the machines in any way, but it can also prevent students from making any necessary adjustments or installing programs they need for their work. | What concerns do you have personally about the digital divide? For yourself or for others. One concern about the digital divide is that it can perpetuate social and economic inequality. Those without access to technology and the internet may be at a disadvantage in terms of education, job opportunities, and access to information. Additionally, lack of digital literacy skills can make it difficult for individuals to fully participate in the digital economy and society. Furthermore, it could also lead to a lack of representation of certain communities in the digital space. This could lead to further marginalization of already marginalized groups in society. |",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/01/24/5.1-5.2-blog.html",
            "relUrl": "/t2/post/2023/01/24/5.1-5.2-blog.html",
            "date": " • Jan 24, 2023"
        }
        
    
  
    
        ,"post6": {
            "title": "Model and Object-Oriented Programming",
            "content": "Class and Object Terms . The foundations of Object-Oriented Programming is defining a Class . In Object-Oriented Programming (OOP), a class is a blueprint for creating an Object. (a data structure). An Object is used like many other Python variables. | A Class has ... a collection of data, these are called Attributes and in Python are pre-fixed using the keyword self | a collection of Functions/Procedures. These are called *Methods when they exist inside a Class definition. | . | An Object is created from the Class/Template. Characteristics of objects ... an Object is an Instance of the Class/Template | there can be many Objects created from the same Class | each Object contains its own Instance Data | the data is setup by the Constructor, this is the &quot;init&quot; method in a Python class | all methods in the Class/Template become part of the Object, methods are accessed using dot notation (object.method()) | . | A Python Class allow for the definition of @ decorators, these allow access to instance data without the use of functions ... @property decorator (aka getter). This enables developers to reference/get instance data in a shorthand fashion (object.name versus object.get_name()) | @name.setter decorator (aka setter). This enables developers to update/set instance data in a shorthand fashion (object.name = &quot;John&quot; versus object.set_name(&quot;John&quot;)) | observe all instance data (self._name, self.email ...) are prefixed with &quot;&quot;, this convention allows setters and getters to work with more natural variable name (name, email ...) | . | . Class and Object Code . # Werkzeug is a collection of libraries that can be used to create a WSGI (Web Server Gateway Interface) # A gateway in necessary as a web server cannot communicate directly with Python. # In this case, imports are focused on generating hash code to protect passwords. from werkzeug.security import generate_password_hash, check_password_hash import json # Define a User Class/Template # -- A User represents the data we want to manage class User: # constructor of a User object, initializes the instance variables within object (self) def __init__(self, name, uid, password): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) # a name getter method, extracts name from object @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid @property def password(self): return self._password[0:10] + &quot;...&quot; # because of security only show 1st characters # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using str(object) in human readable form, uses getter def __str__(self): return f&#39;name: &quot;{self.name}&quot;, id: &quot;{self.uid}&quot;, psw: &quot;{self.password}&quot;&#39; # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;Person(name={self._name}, uid={self._uid}, password={self._password})&#39; # tester method to print users def tester(users, uid, psw): result = None for user in users: # test for match in database if user.uid == uid and user.is_password(psw): # check for match print(&quot;* &quot;, end=&quot;&quot;) result = user # print using __str__ method print(str(user)) return result # place tester code inside of special if! This allows include without tester running if __name__ == &quot;__main__&quot;: # define user objects u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;) u2 = User(name=&#39;Nicholas Tesla&#39;, uid=&#39;nick&#39;, password=&#39;123nick&#39;) u3 = User(name=&#39;Alexander Graham Bell&#39;, uid=&#39;lex&#39;, password=&#39;123lex&#39;) u4 = User(name=&#39;Eli Whitney&#39;, uid=&#39;eli&#39;, password=&#39;123eli&#39;) u5 = User(name=&#39;Hedy Lemarr&#39;, uid=&#39;hedy&#39;, password=&#39;123hedy&#39;) # put user objects in list for convenience users = [u1, u2, u3, u4, u5] # Find user print(&quot;Test 1, find user 3&quot;) u = tester(users, u3.uid, &quot;123lex&quot;) # Change user print(&quot;Test 2, change user 3&quot;) u.name = &quot;John Mortensen&quot; u.uid = &quot;jm1021&quot; u.set_password(&quot;123qwerty&quot;) u = tester(users, u.uid, &quot;123qwerty&quot;) # Make dictionary &#39;&#39;&#39; The __dict__ in Python represents a dictionary or any mapping object that is used to store the attributes of the object. Every object in Python has an attribute that is denoted by __dict__. Use the json.dumps() method to convert the list of Users to a JSON string. &#39;&#39;&#39; print(&quot;Test 3, make a dictionary&quot;) json_string = json.dumps([user.__dict__ for user in users]) print(json_string) print(&quot;Test 4, make a dictionary&quot;) json_string = json.dumps([vars(user) for user in users]) print(json_string) . Hacks . Add new attributes/variables to the Class. Make class specific to your CPT work. . Add classOf attribute to define year of graduation Add setter and getter for classOf | . | Add dob attribute to define date of birth This will require investigation into Python datetime objects as shown in example code below | Add setter and getter for dob | . | Add instance variable for age, make sure if dob changes age changes Add getter for age, but don&#39;t add/allow setter for age | . | Update and format tester function to work with changes | . Start a class design for each of your own Full Stack CPT sections of your project . Use new code cell in this notebook | Define init and self attributes | Define setters and getters | Make a tester | . Start Code for Hacks . from datetime import date def calculate_age(born): today = date.today() return today.year - born.year - ((today.month, today.day) &lt; (born.month, born.day)) dob = date(2004, 12, 31) age = calculate_age(dob) print(age) . 18 . Hacks . from werkzeug.security import generate_password_hash, check_password_hash from datetime import date import json class User: def __init__(self, name, uid, password, dob, classOf, high_score): self._name = name # variables with self prefix become part of the object, self._uid = uid self.set_password(password) self._dob = dob self._classOf = classOf self._high_score = high_score @property def name(self): return self._name # a setter function, allows name to be updated after initial object creation @name.setter def name(self, name): self._name = name # a getter method, extracts email from object @property def uid(self): return self._uid # a setter function, allows name to be updated after initial object creation @uid.setter def uid(self, uid): self._uid = uid # check if uid parameter matches user id in object, return boolean def is_uid(self, uid): return self._uid == uid # dob property is returned as string, to avoid unfriendly outcomes @property def dob(self): dob_string = self._dob.strftime(&#39;%m-%d-%Y&#39;) return dob_string # dob should be have verification for type date @dob.setter def dob(self, dob): self._dob = dob # age is calculated and returned each time it is accessed @property def age(self): today = date.today() return today.year - self._dob.year - ((today.month, today.day) &lt; (self._dob.month, self._dob.day)) @property def classOf(self): return self._dob.year + 18 @classOf.setter def classOf(self, classOf): self._classOf = classOf @property def high_score(self): return self._high_score @high_score.setter def high_score(self, high_score): self._high_score = high_score if high_score &gt; self._high_score: self._high_score = high_score # dictionary is customized, removing password for security purposes @property def dictionary(self): dict = { &quot;name&quot; : self.name, &quot;uid&quot; : self.uid, &quot;dob&quot; : self.dob, &quot;age&quot; : self.age, &quot;class of&quot;: self.classOf, &quot;highscore&quot;: self.high_score } return dict # update password, this is conventional setter def set_password(self, password): &quot;&quot;&quot;Create a hashed password.&quot;&quot;&quot; self._password = generate_password_hash(password, method=&#39;sha256&#39;) # check password parameter versus stored/encrypted password def is_password(self, password): &quot;&quot;&quot;Check against hashed password.&quot;&quot;&quot; result = check_password_hash(self._password, password) return result # output content using json dumps, this is ready for API response def __str__(self): return json.dumps(self.dictionary) # output command to recreate the object, uses attribute directly def __repr__(self): return f&#39;User(name={self._name}, uid={self._uid}, password={self._password}, dob={self._dob}, classOf={self._classOf}, highscore={self._high_score})&#39; if __name__ == &quot;__main__&quot;: u1 = User(name=&#39;Thomas Edison&#39;, uid=&#39;toby&#39;, password=&#39;123toby&#39;, dob=date(1847, 2, 11), classOf= (date(1847, 2, 11).year + 18), high_score=&#39;100&#39;) print(&quot;JSON ready string: n&quot;, u1, &quot; n&quot;) print(&quot;Raw Variables of object: n&quot;, vars(u1), &quot; n&quot;) print(&quot;Raw Attributes and Methods of object: n&quot;, dir(u1), &quot; n&quot;) print(&quot;Representation to Re-Create the object: n&quot;, repr(u1), &quot; n&quot;) . JSON ready string: {&#34;name&#34;: &#34;Thomas Edison&#34;, &#34;uid&#34;: &#34;toby&#34;, &#34;dob&#34;: &#34;02-11-1847&#34;, &#34;age&#34;: 175, &#34;class of&#34;: 1865, &#34;highscore&#34;: &#34;100&#34;} Raw Variables of object: {&#39;_name&#39;: &#39;Thomas Edison&#39;, &#39;_uid&#39;: &#39;toby&#39;, &#39;_password&#39;: &#39;sha256$2FBRdnnxM6atZsqW$ca076d25a731dc3673c76ec25a2f080dc1f8ba580a4f99f96902e234804b691e&#39;, &#39;_dob&#39;: datetime.date(1847, 2, 11), &#39;_classOf&#39;: 1865, &#39;_high_score&#39;: &#39;100&#39;} Raw Attributes and Methods of object: [&#39;__class__&#39;, &#39;__delattr__&#39;, &#39;__dict__&#39;, &#39;__dir__&#39;, &#39;__doc__&#39;, &#39;__eq__&#39;, &#39;__format__&#39;, &#39;__ge__&#39;, &#39;__getattribute__&#39;, &#39;__gt__&#39;, &#39;__hash__&#39;, &#39;__init__&#39;, &#39;__init_subclass__&#39;, &#39;__le__&#39;, &#39;__lt__&#39;, &#39;__module__&#39;, &#39;__ne__&#39;, &#39;__new__&#39;, &#39;__reduce__&#39;, &#39;__reduce_ex__&#39;, &#39;__repr__&#39;, &#39;__setattr__&#39;, &#39;__sizeof__&#39;, &#39;__str__&#39;, &#39;__subclasshook__&#39;, &#39;__weakref__&#39;, &#39;_classOf&#39;, &#39;_dob&#39;, &#39;_high_score&#39;, &#39;_name&#39;, &#39;_password&#39;, &#39;_uid&#39;, &#39;age&#39;, &#39;classOf&#39;, &#39;dictionary&#39;, &#39;dob&#39;, &#39;high_score&#39;, &#39;is_password&#39;, &#39;is_uid&#39;, &#39;name&#39;, &#39;set_password&#39;, &#39;uid&#39;] Representation to Re-Create the object: User(name=Thomas Edison, uid=toby, password=sha256$2FBRdnnxM6atZsqW$ca076d25a731dc3673c76ec25a2f080dc1f8ba580a4f99f96902e234804b691e, dob=1847-02-11, classOf=1865, highscore=100) .",
            "url": "https://chewyboba10.github.io/sushi-burrito/2023/01/10/PBL-model.html",
            "relUrl": "/2023/01/10/PBL-model.html",
            "date": " • Jan 10, 2023"
        }
        
    
  
    
        ,"post7": {
            "title": "Create Performance Task Scoring",
            "content": "# | Week | Link | . 1 | 17 | CPT Scoring 1 | . 2 | 18 | CPT Scoring 2 | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2023/01/09/CPT-scoring.html",
            "relUrl": "/t2/post/2023/01/09/CPT-scoring.html",
            "date": " • Jan 9, 2023"
        }
        
    
  
    
        ,"post8": {
            "title": "3.17 & 3.18 Notes",
            "content": "3.17: Algorithmic Efficiency . ENDURING UNDERSTANDING AAP-4 There exist problems that computers cannot solve, and even when a computer can solve a problem, it may not be able to do so in a reasonable amount of time. . LEARNING OBJECTIVE AAP-4.A For determining the efficiency of an algorithm: a. Explain the difference between algorithms that run in reasonable time and those that do not. b. Identify situations where a heuristic solution may be more appropriate . ESSENTIAL KNOWLEDGE AAP-4.A.1 A problem is a general description of a task that can (or cannot) be solved algorithmically. An instance of a problem also includes specific input. For example, sorting is a problem; sorting the list (2,3,1,7) is an instance of the problem. . AAP-4.A.2 A decision problem is a problem with a yes/no answer (e.g., is there a path from A to B?). An optimization problem is a problem with the goal of finding the “best” solution among many (e.g., what is the shortest path from A to B?). . AAP-4.A.3 Efficiency is an estimation of the amount of computational resources used by an algorithm. Efficiency is typically expressed as a function of the size of the input. . Exclusion Statement (EK AAP-4.A.3): Formal analysis of algorithms (Big-O) and formal reasoning using mathematical formulas are outside the scope of this course and the AP Exam. . AAP-4.A.4 An algorithm’s efficiency is determined through formal or mathematical reasoning. . ESSENTIAL KNOWLEDGE . AAP-4.A.5 An algorithm’s efficiency can be informally measured by determining the number of times a statement or group of statements executes. . AAP-4.A.6 Different correct algorithms for the same problem can have different efficiencies. . AAP-4.A.7 Algorithms with a polynomial efficiency or slower (constant, linear, square, cube, etc.) are said to run in a reasonable amount of time. Algorithms with exponential or factorial efficiencies are examples of algorithms that run in an unreasonable amount of time. . AAP-4.A.8 Some problems cannot be solved in a reasonable amount of time because there is no efficient algorithm for solving them. In these cases, approximate solutions are sought. . AAP-4.A.9 A heuristic is an approach to a problem that produces a solution that is not guaranteed to be optimal but may be used when techniques that are guaranteed to always find an optimal solution are impractical. . Exclusion Statement (AAP-4.A.9): Specific heuristic solutions are outside the scope of the this course and the AP Exam. . 3.18: Undecidable Problems . ENDURING UNDERSTANDING AAP-4 There exist problems that computers cannot solve, and even when a computer can solve a problem, it may not be able to do so in a reasonable amount of time. . LEARNING OBJECTIVE AAP-4.B Explain the existence of undecidable problems in computer science.  1.A . ESSENTIAL KNOWLEDGE AAP-4.B.1 A decidable problem is a decision problem for which an algorithm can be written to produce a correct output for all inputs (e.g., “Is the number even?”). . AAP-4.B.2 An undecidable problem is one for which no algorithm can be constructed that is always capable of providing a correct yes-or-no answer. . Exclusion Statement (EK AAP-4.B.2): Determining whether a given problem is undecidable is outside the scope of this course and the AP Exam. . AAP-4.B.3 An undecidable problem may have some instances that have an algorithmic solution, but there is no algorithmic solution that could solve all instances of the problem. . Sources used . Collegeboard Videos and the Course Description | Undecidable Problems Article by Khan Academy | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections8&10notes",
            "relUrl": "/unit3/sections8&10notes",
            "date": " • Dec 14, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "3.16 Hacks",
            "content": "Simulation of the motion of a ball thrown at an angle . import math # Set the initial state position = (0, 0) velocity = (10, 10) # Set the time step dt = 0.1 # Loop for 10 seconds for t in range(10): # Update the position and velocity x, y = position vx, vy = velocity x += vx * dt y += vy * dt vx -= 9.8 * dt * math.sin(math.atan(vy / vx)) vy -= 9.8 * dt * math.cos(math.atan(vy / vx)) position = (x, y) velocity = (vx, vy) # Print the current state print(f&quot;Time: {t * dt + 0.1}, Position: {position}, Velocity: {velocity}&quot;) # +0.1 since computers start at 0 . Time: 0.1, Position: (1.0, 1.0), Velocity: (9.307035354437183, 9.33233702795688) Time: 0.2, Position: (1.9307035354437183, 1.933233702795688), Velocity: (8.61313069605152, 8.667678122026405) Time: 0.30000000000000004, Position: (2.7920166050488704, 2.8000015149983284), Velocity: (7.917982148527098, 8.006711376248763) Time: 0.4, Position: (3.5838148199015802, 3.6006726526232047), Velocity: (7.22116725788158, 7.350366670524219) Time: 0.5, Position: (4.305931545689738, 4.335709319675627), Velocity: (6.522085877077414, 6.699935112466445) Time: 0.6, Position: (4.95814013339748, 5.005702830922272), Velocity: (5.819863696246738, 6.05726783162956) Time: 0.7000000000000001, Position: (5.540126503022154, 5.611429614085228), Velocity: (5.113188994281593, 5.425123225490899) Time: 0.8, Position: (6.051445402450313, 6.153941936634318), Velocity: (4.400024937635177, 4.807809268945024) Time: 0.9, Position: (6.491447896213831, 6.634722863528821), Velocity: (3.6770798064811587, 4.2124550615465575) Time: 1.0, Position: (6.859155876861947, 7.055968369683477), Velocity: (2.9387892334076637, 3.651734153436654) . Simulation Example: SimCity . . One example of a simulation in a software or game that is popular among many people is a city-building game, such as SimCity. This type of simulation allows players to design and build their own virtual cities, complete with roads, buildings, and other infrastructure. The game uses complex algorithms and data sets to simulate the various systems and processes involved in city planning and management, such as traffic flow, resource management, and population growth. As the player interacts with the simulation, they are able to see how their decisions as a city planner affect the development and growth of their virtual city. The goal of a city-building game is to provide an engaging and entertaining experience that allows players to explore their creativity and problem-solving skills in a simulated environment. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections16hacks",
            "relUrl": "/unit3/sections16hacks",
            "date": " • Dec 13, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "3.16 Lesson",
            "content": "First Order of Business: Get your notebook . Open a terminal in vscode, run command: cd _notebooks, type &#39;wget&#39; and paste this link into said terminal and run it . | Take notes wherever you please, but you will be graded on participating . | . So, what is a simulation anyway? . A simulation is a tested scenario used for viewing results/outputs to prepare for them in real world situations . | These can be used for games like dice rolling, spinners, etc . | These can be used for practical things such as building structures, testing car crashes, and other things before engaging in them in the real world . | These simulations can have the option of obeying real world physics (Gravity, collision) or they can go against these norms since this is a fictitious scenario, and couldn&#39;t happen in real life . | . Big Question . Which of the following simulations could be the LEAST useful? . | A retailer trying to identify which products sold the most . | A restaurant determining the efficiency of robots | An insurance company studying the rain impact of cars | A sports bike company studying design changes to their new bike design | . If you guessed a bike company, you&#39;re wrong, because the retail simulation was the right answer. Simulating robots in food service, sudying rain impact on vehicles, and new bike design can contribute a lot more to society in comparison to seeing what products sell more than others. | . Next Big Question . If you were making a simulation for making a new train station, which of the following would be true about this simulation? . It could reveal potential problems/safety issues before construction starts | It cannot be used to test the train station in different weather | Simulation will add high costs to projects | Simulation is not needed because this train station already exists | . Potential Saftey was the right answer, because you need somewhere to test the safety and ethicness of what you&#39;re about to do before you start building it. Otherwise, let&#39;s just say you&#39;ll have a special plaque for FBI&#39;s Most Wanted | . Simulation 1: . Both programs below do the same thing. Given a height and a weight, they calculate how long it will take for a object to fall to the ground in a vacuum subjected to normal Earth levels of gravity. . However, the second one is a simulation. It calculates the distance the object has fallen every 0.1 seconds. This is useful for if you wanted a visual representation of a falling object, which pure math can&#39;t do as smoothly. . height = float(input(&quot;height in meters?&quot;)) weight = input(&quot;weight in pounds?&quot;) stuff = (2 * (height / 9.8))**(1/2) print(&quot;It will take&quot;, stuff,&quot;seconds for an object that weighs&quot;,weight,&quot;pounds&quot;,&quot;to fall &quot;,height,&quot;meters in a vacuum&quot;) . It will take 1.0101525445522108 seconds for an object that weighs 2 pounds to fall 5.0 meters in a vacuum . t = 0 g = 0 d = 0 false = True while false: t = t + 0.1 d = 9.8 / 2 * (t**2) if d &gt;= height: false = False #print(d) # if you want to print the distance every time it calculates it. Too long to output to a terminal, but this could be useful to display graphically. #print(t) print(t) print(d) . 1.0999999999999999 5.928999999999999 . Simulation 2: . This simulation is made in order to simulate movement on a 2d plane vs a 3d plane. . | How it works: we have multiple variables, if statements and equations under a while command in order to randomy generate steps on a 2d plane. Once it reaches the set destination, it will say that the man made it home after x amount of steps. . | For the 3D plane, it takes a lot longer due to how big and open the 3d environment is, so there are more if statements in the 3d plane . | . (explain further) . import random x = 0 y = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): step = random.randrange(4) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 turn = turn + 1 if x == 0 and y == 0: nights = nights + 1 print(&quot;The Man Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y != 0: print(&quot;(&quot;, x,y, &quot;)&quot;) if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average, &quot;Ones that when&#39;t too long &quot;, stopped) . The Man Has Made It Home After 2 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 4 Turns The Man Has Made It Home After 2 Turns ( -498 -1332 ) ( -1411 -603 ) ( -1500 -1696 ) ( -1242 -938 ) ( -794 -816 ) ( 450 -668 ) ( 699 -653 ) ( 1021 -1821 ) ( 977 -2339 ) ( 679 -3071 ) Caped ( 212 58 ) ( -75 533 ) ( -1670 -950 ) ( -1019 -1527 ) ( -1849 -1349 ) ( -1793 -1433 ) ( -761 -1661 ) ( -717 -2131 ) ( -2046 -854 ) ( -3219 -371 ) Caped The Man Has Made It Home After 4 Turns The Man Has Made It Home After 418 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 3326 Turns The Man Has Made It Home After 333770 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 344 Turns The Man Has Made It Home After 76528 Turns ( 348 606 ) ( 585 -293 ) ( 729 -133 ) ( 681 593 ) The Man Has Made It Home After 4696496 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 74 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 8 Turns The Man Has Made It Home After 396 Turns The Man Has Made It Home After 12 Turns The Man Has Made It Home After 72 Turns The Man Has Made It Home After 34 Turns The Man Has Made It Home After 6 Turns The Man Has Made It Home After 2 Turns ( 874 308 ) ( -537 -77 ) ( 67 -83 ) The Man Has Made It Home After 3043992 Turns The Man Has Made It Home After 826 Turns The Man Has Made It Home After 8130 Turns The Man Has Made It Home After 2 Turns The Man Has Made It Home After 290470 Turns ( 259 -373 ) . KeyboardInterrupt Traceback (most recent call last) /home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb Cell 10 in &lt;cell line: 9&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X12sdnNjb2RlLXJlbW90ZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; turns = [] &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X12sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; while (nights &lt; 100): &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X12sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; step = random.randrange(4) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X12sdnNjb2RlLXJlbW90ZQ%3D%3D?line=10&#39;&gt;11&lt;/a&gt; if step == 0: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X12sdnNjb2RlLXJlbW90ZQ%3D%3D?line=11&#39;&gt;12&lt;/a&gt; x = x+1 KeyboardInterrupt: . import random x = 0 y = 0 z = 0 nights = 0 turn = 0 stopped = 0 turns = [] while (nights &lt; 100): #rando movement step = random.randrange(6) if step == 0: x = x+1 if step == 1: x = x-1 if step == 2: y = y+1 if step == 3: y = y-1 if step == 4: z = z+1 if step == 5: z = z-1 #Turn counter turn = turn + 1 #Goal check if x == 0 and y == 0 and z == 0: nights = nights + 1 print(&quot;The Bird Has Made It Home After &quot;, turn, &quot;Turns&quot;) turns.append(turn) turn = 0 if turn/1000 % 1000 == 0 and x + y + z != 0: print(&quot;(&quot;, x,y, &quot;) &quot;,&quot;| &quot;, z) #Too long Stoper if (turn &gt; 10000000): stopped = stopped + 1 turn = 0 x = 0 y = 0 z = 0 nights = nights + 1 print(&quot;Caped&quot;) average = sum(turns) / len(turns) print(&quot;Avaerage&quot;, average,&quot;Ones that when&#39;t too long &quot;, stopped) . ( 710 133 ) | 525 ( 1874 -442 ) | 1064 ( 846 -588 ) | 194 ( 862 -277 ) | 407 ( -167 -319 ) | 382 ( 102 -802 ) | -648 ( 916 -328 ) | -1448 ( 1719 -281 ) | -726 ( 1703 -1246 ) | -699 ( 1440 -1621 ) | -1209 Caped ( 789 -154 ) | 335 ( 498 -1064 ) | -1026 ( 496 -825 ) | -1297 ( 462 -1008 ) | -518 ( 314 -1018 ) | 394 ( 279 -1388 ) | 651 ( 50 -2324 ) | -588 ( 240 -1404 ) | -764 ( -415 -2019 ) | -300 ( 189 -2600 ) | -207 Caped . KeyboardInterrupt Traceback (most recent call last) /home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb Cell 11 in &lt;cell line: 10&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; if step == 2: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=17&#39;&gt;18&lt;/a&gt; y = y+1 &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; if step == 3: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=19&#39;&gt;20&lt;/a&gt; y = y-1 &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/home/chewyboba10/vscode/sushi-burrito/_notebooks/2022-12-12-Simulations.ipynb#X13sdnNjb2RlLXJlbW90ZQ%3D%3D?line=20&#39;&gt;21&lt;/a&gt; if step == 4: KeyboardInterrupt: . Simulations in the wild . Simulations are used extremely frequently in real life applications. One of the most common examples of simulations are video games. A games physics engine can accurately simulate objects colliding . Another example is Blender, the software used in 3d animations class, here at Del Norte. Blender is made up of many small simulations, but one big one it uses is simulating the way light bounces off of and interacts with objects. . HW !!! . Create a simulation. It can be anything, just has to simulate something. . Some ideas: . Two objects colliding | Gravity on other planets | . AND . Find an example of a simulation in a software/game you use, screenshot, and explain how it is a simulation .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections16notes",
            "relUrl": "/unit3/sections16notes",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "3.14 & 3.15 Hacks",
            "content": "Procedure to help with my assignments . a. What is the derivative of 2x^5 - 6x^2 + 24x? . import numpy as np # defining polynomial function var = np.poly1d([2, 0, 0, 6, 24, 0]) print(&quot;Polynomial function, f(x): n&quot;, var) # calculating the derivative derivative = var.deriv() print(&quot;Derivative, f(x)&#39;= n&quot;, derivative) # calculates the derivative of after # given value of x print(&quot;When x=9 f(x)&#39;=&quot;, derivative(9)) . Polynomial function, f(x): 5 2 2 x + 6 x + 24 x Derivative, f(x)&#39;= 4 10 x + 12 x + 24 When x=9 f(x)&#39;= 65742 . b. What is the derivative of (13x^4 + 4x^2) / 2 when x = 9? . import numpy as np # defining polynomial function var = np.poly1d([13, 0, 4, 0, 0])/2 print(&quot;Polynomial function, f(x): n&quot;, var) # calculating the derivative derivative = var.deriv() print(&quot;Derivative, f(x)&#39;= n&quot;, derivative) # calculates the derivative of after # given value of x print(&quot;When x=9 f(x)&#39;=&quot;, derivative(9)) . Polynomial function, f(x): 4 2 6.5 x + 2 x Derivative, f(x)&#39;= 3 26 x + 4 x When x=9 f(x)&#39;= 18990.0 . import random dogs = [&quot;Fido&quot;, &quot;Rufus&quot;, &quot;Spot&quot;, &quot;Buddy&quot;, &quot;Max&quot;, &quot;Charlie&quot;, &quot;Rocky&quot;, &quot;Molly&quot;, &quot;Roxy&quot;, &quot;Tucker&quot;] cats = [&quot;Fluffy&quot;, &quot;Whiskers&quot;, &quot;Mittens&quot;, &quot;Socks&quot;, &quot;Oliver&quot;, &quot;Smokey&quot;, &quot;Boots&quot;, &quot;Lucy&quot;, &quot;Princess&quot;, &quot;Simba&quot;] random.shuffle(dogs) random.shuffle(cats) print(dogs) print(cats) . [&#39;Max&#39;, &#39;Buddy&#39;, &#39;Tucker&#39;, &#39;Fido&#39;, &#39;Charlie&#39;, &#39;Spot&#39;, &#39;Roxy&#39;, &#39;Rocky&#39;, &#39;Molly&#39;, &#39;Rufus&#39;] [&#39;Princess&#39;, &#39;Oliver&#39;, &#39;Whiskers&#39;, &#39;Mittens&#39;, &#39;Smokey&#39;, &#39;Socks&#39;, &#39;Fluffy&#39;, &#39;Boots&#39;, &#39;Lucy&#39;, &#39;Simba&#39;] .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections14-15hacks",
            "relUrl": "/unit3/sections14-15hacks",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "3.12 & 3.13 Hacks",
            "content": "Procedure to help with my assignments . class Assignment: def __init__(self, name, due_date): self.name = name self.due_date = due_date # create a list to store all the assignments assignments = [] # prompt the user to input their assignments and due dates while True: # ask the user if they want to add an assignment add_assignment = input(&quot;Do you want to add an assignment? (yes/no) &quot;) if add_assignment.lower() == &quot;yes&quot;: # if yes, ask for the assignment name and due date name = input(&quot;Enter the assignment name: &quot;) due_date = input(&quot;Enter the due date (MM/DD/YYYY): &quot;) # create an assignment object and add it to the list assignment = Assignment(name, due_date) assignments.append(assignment) else: # if no, break out of the loop break # print out the assignments and their due dates print(&quot;Here are your assignments:&quot;) for assignment in assignments: print(f&quot;{assignment.name} - Due on {assignment.due_date}&quot;) . Here are your assignments: Physics Mini-Lab - Due on 12/12/2022 Read and annotate Scarlet Letter chapter 18 - Due on 12/12/2022 3.12-3.13 hacks and notes - Due on 12/12/2022 . This code defines a class called Assignment, which represents a single assignment with a name and due date. The class has an __init__ method that initializes each instance of the class with a name and due date. | The code then creates an empty list called assignments to store all of the assignments that the user will enter. | It then enters a loop that will continue until the user indicates that they don&#39;t want to add any more assignments. Inside the loop, the code prompts the user to add an assignment and asks for the assignment name and due date. | When the user enters this information, the code creates a new Assignment object and adds it to the list of assignments. | After the user indicates that they don&#39;t want to add any more assignments, the code prints out a list of all the assignments and their due dates. |",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections12-13hacks",
            "relUrl": "/unit3/sections12-13hacks",
            "date": " • Dec 12, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Unit 3 Vocabulary",
            "content": "Big Idea 1 | Big Idea 2 | Big Idea 3 | Big Idea 4 | Big Idea 5 | Miscellaneous | . . Variables . Data Types . Assignment Operators . Managing Complexity with Variables . Lists . 2D Lists . Dictionaries . Class . Algorithms . An algorithm in computer science is a sequence of instructions that are followed in a specific order to perform a specific task or solve a particular problem. An algorithm is a set of well-defined steps that can be followed by a computer or other computational device to achieve a desired result. Algorithms are an essential part of computer science because they allow computers to perform complex tasks and make decisions based on the data they are given. An algorithm can be as simple as a set of instructions for carrying out a basic mathematical operation, such as adding two numbers together, or it can be more complex, such as a set of steps for sorting a large dataset. . Example . def find_largest_number(numbers): # Set a variable to store the largest number largest_number = numbers[0] # Iterate through the list of numbers for number in numbers: # If the current number is larger than the largest number, # update the largest number if number &gt; largest_number: largest_number = number # Return the largest number return largest_number # Test the function with a list of numbers print(find_largest_number([1, 3, 2, 5, 4])) # should print 5 . This algorithm finds the . Sequence . Selection . Iteration . Expressions . Comparison Operators . Booleans Expressions and Selection . Booleans Expressions and Iteration . Truth Tables . Characters . Strings . Length . Concatenation . Upper . Lower . Traversing Strings . Python If, Elif, Else conditionals . Nested Selection Statements . Python For . While loops . with Range . with List . Combining loops with conditionals to Break, Continue . Procedural Abstraction . Python Def procedures . Parameters . Return Values .",
            "url": "https://chewyboba10.github.io/sushi-burrito/vocab/unit3",
            "relUrl": "/vocab/unit3",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Unit 2 Vocabulary",
            "content": "Big Idea 1 | Big Idea 2 | Big Idea 3 | Big Idea 4 | Big Idea 5 | Miscellaneous | . . Examples coming in the future! . Bits . a bit (short for binary digit) is the basic unit of information used in computing and digital communications. It is a binary digit, that is, it can have only two values:0 or 1. These two values are typically used to represent the two logical states of a system, such as &quot;on&quot; or &quot;off,&quot; &quot;true&quot; or &quot;false,&quot; or &quot;high&quot; or &quot;low.&quot; A bit is the smallest unit of information that can be processed by a computer, and it is typically used to store and manipulate data in a computer&#39;s memory or storage. . Bytes . In computer science, a byte is a unit of information that typically consists of 8 bits. It is a basic unit of measurement used to represent the amount of data in computer memory or storage. A byte is used to store a single character in a computer&#39;s memory or on disk. Bytes are often used to represent larger values or data types, such as integers, floating-point numbers, or text strings. . Hexadecimal . In computer science and digital technology, hexadecimal is a positional numeral system with a base of 16. It uses 16 distinct symbols, most often the symbols 0-9 to represent values zero to nine, and A, B, C, D, E, F to represent values ten to fifteen. Hexadecimal is commonly used in computer science to represent binary data in a more compact and readable form. Each hexadecimal digit represents four binary digits (bits), which means that two hexadecimal digits can represent a byte (8 bits) of information. For example, the hexadecimal number 3F represents the binary number 0011 1111. . Nibbles . A nibble is a term used in computer science to refer to a group of four bits, or half of a byte. It is often used to represent a single hexadecimal digit, which can be used to represent binary data in a more compact and readable form. . Binary Numbers . In computer science and digital technology, the term &quot;binary&quot; refers to a system of representing numbers or information using only two different digits, usually 0 and 1. This system is known as the binary numeral system, and it is used by most computers and other digital devices because it is a simple and efficient way to represent and manipulate data. . Unsigned Integer . Signed Integer . Floating Point . Binary Data Abstractions . Boolean . ASCII . Unicode . RGB . Data Compression . Lossy . Lossless (note discussed yet) .",
            "url": "https://chewyboba10.github.io/sushi-burrito/vocab/unit2",
            "relUrl": "/vocab/unit2",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Unit 3 Sections 12-13",
            "content": "Calling Procedures . Slide 1: . A procedure is a named group of programming instructions that may have parameters and return values. | Procedures are referred to by different names, such as method or function, depending on the programing language. | Parameters are input values of a procedure. Arguments specify the values of the parameters when procedure is called. | A procedure call interrupts the sequential execution of statements causing the program to execute the statements within the procedure before continuing. One the last statement in the procedure (or a return statement) has executed, flow or control is returned to the point immediately following where the procedure was called. | . Slide 2: . When calling procedures, it&#39;s important to take notice to whether it returns data, or a block of statements. | If the procedure just returns a block of statements, you call the procedure by referring to the procedure name, and inputting the arguments. | If the procedure returns some sort of data like a boolean or value, then you will assign that value to a variable | . Slide 3: . Assume the Temperature outside is Fahrenheit. | The procedure convertFahrenheit is intended to convert from Fahrenheit to Celsius. | Convert the following psuedocode to python | . import random outsideTemp = random.randint(-500,500) def convertFahrenheit(Fahrenheit): celsius = Fahrenheit - 32 celsius = celsius * 5/9 # code goes here return celsius convertFahrenheit(outsideTemp) . 124.44444444444444 . Developing Procedures . Slide 8: . Picking a descriptive name is important in case you revisit the code later on (separate words with capitals) There are 2 different types of procedures- ones that return a value and those that simply execute a block of statements Steps of developing procedure: picking a useful name, thinking of parameters (what data does the procedure need to know), making a flowchart or writing procedure in pseudocode, and actually developing the procedure. . Slide 9: . In this example, a teacher is writing a program that will replace the grade on a previous quiz if the new grade is better than the previous. . What would be a good name for this procedure? | What parameters do we need for this procedure? | Try writing this procedure out in python based on the given pseudocode | . currentGrade &lt;- currentPoints / 40 currentGrade &lt;- currentGrade * 100 if currentGrade &gt; quizGrade quizGrade &lt;- currentGrade . def finalGrade(): currentPoints = input(&quot;How many points did you earn?&quot;) quizGrade = input(&quot;What was your original grade?&quot;) currentGrade = int(currentPoints) / 40 currentGrade = currentGrade * 100 if currentGrade &gt; int(quizGrade): quizGrade = currentGrade print(quizGrade) else: print(currentGrade) finalGrade() . 97.5 . Procedural Abstraction . One type of abstraction is procedural abstraction which provides a name for a process and allows a procedure to be used only knowing what it does and not how it does it | This is very helpful in managing complexity in a program | Subdivision of a program into separate subprograms is called modularity | A procedural abstraction may extract shared features to generalize functionality instead of duplicating code. This allows for program reuse, which helps manage complexity | When a pre-written procedure is called, you don’t necessarily need to know the details of this, just what it does and how to call it | Simply, procedural abstraction is naming and calling a prewritten procedure | Making sure to include the right arguments so the procedure can do what its supposed to do is crucial | . Complexity Example . One of the biggest advantages of procedural abstraction is managing complexity. . Think about the process of simplifying the code? What do you think the advantage of the code segment on the left is? . Code Segment 1 Code Segment 2 . ROTATE_LEFT() | detourLeft() | . MOVE_FORWARD()|turnCorner()| ROTATE_RIGHT |MOVE_FORWARD()| MOVE_FORWARD()|MOVE_FORWARD()| MOVE_FORWARD() ROTATE_RIGHT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() ROTATE_LEFT() MOVE_FORWARD() MOVE_FORWARD MOVE_FORWARD() . Hacks . Write a python procedure about something which can help you in school, for example the teacher’s function we spoke about earlier. | Points will be awarded based on creativity and functionality | 0.1 points will be deducted for late submissions | Submit the notes with all blanks filled in (scored out of 0.5 points) and the python procedure (scored out of 0.5 points) by Monday 12/12 at 11:59 PM. | . def procedure() # code goes here return # code goes here .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections12-13notes",
            "relUrl": "/unit3/sections12-13notes",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "3.9 & 3.11 Notes and Hacks",
            "content": "Hacks . import random def gcd(a, b): # base case if a == 0: return b if b == 0: return a # recursive step if a &gt;= b: return gcd(a % b, b) else: return gcd(a, b % a) num1 = random.randint(0,1000) num2 = random.randint(0,1000) print(&quot;Numbers being compared:&quot;, num1, &quot;&amp;&quot;, num2) print(&quot;The greatest common divisor between&quot;, num1, &quot;&amp;&quot;, num2, &quot;is:&quot;) gcd(num1, num2) . Numbers being compared: 744 &amp; 810 The greatest common divisor between 744 &amp; 810 is: . 6 . The function starts by defining a base case where gcd(a, b) is equal to a if b is 0, and b if a is 0. This is because the GCD of a number and 0 is always the number itself. | The next step is the recursive step, where the function calls itself with the arguments (a % b, b) if a is greater than or equal to b, or (a, b % a) if b is greater than a. This step is based on the Euclidean algorithm, which states that the GCD of two numbers a and b is the same as the GCD of b and the remainder of a divided by b (i.e. a % b). | This recursive step continues until the base case is reached, at which point the function returns the GCD of a and b. | Binary Search Hacks . def binary_search(array, x): low = 0 high = len(array) - 1 while low &lt;= high: mid = low + (high - low) // 2 if array[mid] == x: return mid elif array[mid] &lt; x: low = mid + 1 else: high = mid - 1 return -1 array = [3, 4, 5, 6, 7, 8, 9] x = 4 result = binary_search(array, x) if result != -1: print(&quot;Element is present at index &quot; + str(result)) else: print(&quot;Element is not present in the array&quot;) . Element is present at index 1 . This implementation follows the steps outlined in the previous section: . It initializes the low and high pointers to the start and end of the array, respectively. | It uses a while loop to iterate until the low and high pointers meet each other. | In each iteration, it finds the middle element of the current subarray (defined by the low and high pointers) and compares it to the target x. | If the middle element is equal to x, it returns the index of the middle element. | If x is greater than the middle element, it updates the low pointer to be the element immediately after the middle element, so that the search will continue on the right (greater) half of the array. | If x is smaller than the middle element, it updates the high pointer to be the element immediately before the middle element, so that the search will continue on the left (lower) half of the array. | If the while loop completes without finding x, it returns -1 to indicate that x is not present in the array. |",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections9&11hacks",
            "relUrl": "/unit3/sections9&11hacks",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "3.8 & 3.10 Notes",
            "content": "Lists . a sequence of variables . can be used to store multiple items into one variable | used to store collections of data | changeable, ordered, allowed duplicates | . Other collection data types in Python . Tuple: collection that is ordered, unchangeable, allows duplicates | Set: collection that is unordered, unchangeable, doesn’t allow duplicate | Dictionary: collection that is ordered, changeable, doesn’t allow duplicates | . Terms . Index: a term used to sort data in order to reference to element in a list (allows for duplicates) | Elements: the values in the list assigned to an index | . Iteration . The repetition of a process or utterance applied to the result or taken from a previous statement Types of iteration: definite and indefinite . Definite defines how many times the loop is going to run | Indefinite specifies a condition that must be met | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections8&10notes",
            "relUrl": "/unit3/sections8&10notes",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "3.8 & 3.10 Notes and Hacks",
            "content": "Iteration Hack . Use the list below to turn the first letter of any word (using input()) into its respective NATO phonetic alphabet word . Ex: . list -&gt; . lima india sierra tango . words = [&quot;alfa&quot;, &quot;bravo&quot;, &quot;charlie&quot;, &quot;delta&quot;, &quot;echo&quot;, &quot;foxtrot&quot;, &quot;golf&quot;, &quot;hotel&quot;, &quot;india&quot;, &quot;juliett&quot;, &quot;kilo&quot;, &quot;lima&quot;, &quot;mike&quot;, &quot;november&quot;, &quot;oscar&quot;, &quot;papa&quot;, &quot;quebec&quot;, &quot;romeo&quot;, &quot;sierra&quot;, &quot;tango&quot;, &quot;uniform&quot;, &quot;victor&quot;, &quot;whiskey&quot;, &quot;xray&quot;, &quot;yankee&quot;, &quot;zulu&quot;] inp = input().lower() lengthInp = len(inp) wordStart = [] for x in range(len(words)): wordLetter = words[x] wordThing = wordLetter[0] wordStart.append(wordThing) print(inp) for i in range(lengthInp): j = str(inp)[i] for y in range(len(wordStart)): if j == str(wordStart[y]): print(words[y]) . python papa yankee tango hotel oscar november . 2D Iteration Hacks . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] . def print_matrix3(matrix): for row in matrix: # Iterates through each &quot;row&quot; of matrix. Row is a dummy variable, it could technically be anything. It iterates through each value of matrix and each value is it&#39;s own list. in this syntax the list is stored in &quot;row&quot;. # Iterates through each value in row. Again col, column, is a dummy variable. Each value in row is stored in col. print(*row, end=&quot; &quot;) # Same as 1 print() # Same as 1 print_matrix3(keypad) . 1 2 3 4 5 6 7 8 9 0 . keypad = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [&quot; &quot;, 0, &quot; &quot;]] def print_matrix4(matrix): for i in range(len(matrix)): itr = iter(matrix[i]) print(next(itr), next(itr), next(itr)) print_matrix4(keypad) . 1 2 3 4 5 6 7 8 9 0 . def print_matrix5(matrix): i = 0 while i &lt; len(matrix): j = 0 while j &lt; len(matrix[i]): print(matrix[i][j], end=&quot; &quot;) j+=1 print() i += 1 return print_matrix5(keypad) . 1 2 3 4 5 6 7 8 9 0 . keyboard = [[&quot;`&quot;, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, &quot;-&quot;, &quot;=&quot;], [&quot;Q&quot;, &quot;W&quot;, &quot;E&quot;, &quot;R&quot;, &quot;T&quot;, &quot;Y&quot;, &quot;U&quot;, &quot;I&quot;, &quot;O&quot;, &quot;P&quot;, &quot;[&quot;, &quot;]&quot;], [&quot;A&quot;, &quot;S&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;;&quot;, &quot;&#39;&quot;], [&quot;Z&quot;, &quot;X&quot;, &quot;C&quot;, &quot;V&quot;, &quot;B&quot;, &quot;N&quot;, &quot;M&quot;, &quot;,&quot;, &quot;.&quot;, &quot;/&quot;, &quot; &quot;]] . def print_type(matrix): inp = input().upper() for i in range(len(inp)): j = str(inp)[i] for row in range(len(matrix)): # Iterates through each &quot;row&quot; of matrix. Row is a dummy variable, it could technically be anything. It iterates through each value of matrix and each value is it&#39;s own list. in this syntax the list is stored in &quot;row&quot;. for col in range(len(matrix[row])): if j == str(matrix[row][col]): # Iterates through each value in row. Again col, column, is a dummy variable. Each value in row is stored in coif j == str(keyword[y]): print(matrix[row][col], end=&quot;&quot;) # Same as 1 # Same as 1 print_type(keyboard) . I WAS BORN IN NOVEMBER AND I AM 17 YEARS OLD . Challenge may or may not be complete . def print_type(matrix): inp = input().upper() for i in range(len(inp)): j = str(inp)[i] for row in range(len(matrix)): # Iterates through each &quot;row&quot; of matrix. Row is a dummy variable, it could technically be anything. It iterates through each value of matrix and each value is it&#39;s own list. in this syntax the list is stored in &quot;row&quot;. for col in range(len(matrix[row])): if j == str(matrix[row][col]): # Iterates through each value in row. Again col, column, is a dummy variable. Each value in row is stored in coif j == str(keyword[y]): print(matrix[row][col], end=&quot;&quot;) matrix = matrix[row].pop() # Same as 1 # Same as 1 print_type(keyboard) .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections8&10hacks",
            "relUrl": "/unit3/sections8&10hacks",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "3.5-3.7 Notes and Hacks",
            "content": "Boolean and Binary . grade1 = 90 grade2 = 65 grade3 = 60 grade4 = 75 grade5 = 95 totalGrade = grade1 + grade2 + grade3 + grade3 + grade4 + grade5 gradeAvg = totalGrade/5 print(str(gradeAvg) + &quot;% &gt; 80%&quot;, gradeAvg&gt;80) . 89.0% &gt; 80% True . print(&quot;1 &gt; 2 or 5 &lt; 12&quot;, 1 &gt; 2 or 5 &lt; 12) # Output TRUE using OR ^ # Output FALSE using NOT print(&quot;24 &gt; 8:&quot;, not 24 &gt; 8) # Output FALSE using AND print(&quot;10 &gt; 20:&quot;, 10 &gt; 20) . 1 &gt; 2 or 5 &lt; 12 True 24 &gt; 8: False 10 &gt; 20: 20 . num1 = 20 num2 = 120 sum = num1 + num2 if sum == 200: print(sum) else: print(sum) . 140 . If a person has at least 8 hours, they are experienced If a person is experienced their salary is 90k, if they have ten hours or above their salary 150k If a person is inexperienced their salary is always 50k print the salary of the person at the end and whether they are experienced or not . hours = 8 if (hours &lt; 8) { console.log(&quot;they are inexperienced and their salary is 50K&quot;) } else { console.log(&quot;they are experienced&quot;) if (hours &gt;= 10) { console.log(&quot;Their salary is 150K&quot;) } else { console.log(&quot;Their salary is 90K&quot;) } } . they are experienced Their salary is 90K . Hacks . import random itemCost = random.randint(0,100) itemDaysOld = random.randint(0,100) print(&quot;The item is $&quot; + str(itemCost), &quot;and is&quot;, str(itemDaysOld), &quot;days old&quot;) if itemDaysOld &lt; 100: if itemCost &lt; 50: if itemCost &gt; 25: print(&quot;this is a regular product&quot;) else: print(&quot;this is a cheap product&quot;) else: print(&quot;this product is too expensive&quot;) else: print(&quot;this product is expired&quot;) . The item is $34 and is 57 days old this is a regular product . Quiz . import getpass q1options = [&quot;A. AND&quot;, &quot;B. OR&quot;, &quot;C. XOR&quot;, &quot;D. NOT&quot;] q2options = [&quot;A. True and True = &quot;, &quot;B. True and False = &quot;, &quot;C. False and True&quot;, &quot;D. False and False&quot;] ans1 = q1options[2] ans2 = q2options[0] x = 5 print(&quot;Welcome&quot;, getpass.getuser() + &quot;! Beginning quiz.&quot;) print(&quot;Question 1: nSuppose that there is a lightbulb connected to two light switches. When both light switches are on off, the lightbulb does not light up. When only one light switch is on, the lightbulb is on. Finally, when both of the light switches are on, the lightbulb is off. Which logical operator does this lightbulb follow?&quot;) for i in q1options: print(i) input1 = input(&quot;Please select an option:&quot;) print(&quot;you have selected option&quot;, str(input1.upper())) if input1.upper() == ans1[0]: print(&quot;Congratulations! That is correct&quot;) else: print(&quot;Sorry that is incorrect.&quot;) print(&quot;Question 2: Let presume that the light switches from Question1 are rewired to follow an AND logical operator. Which of the following would result in the lightbulb turning on?&quot;) for i in q2options: print(i) input2 = input(&quot;Please select an option:&quot;) print(&quot;you have selected option&quot;, str(input2.upper())) if input2.upper() == ans1[0]: print(&quot;Congratulations! That is correct. True and True = &quot;+ True and False) else: print(&quot;Sorry that is incorrect. The answer is A. True and True which would output&quot;, True and False) print(&quot;Question 3: What would not(x &lt; 5 and x &lt; 10) output if x = 5?&quot;) input3 = input() print(&quot;you have answered&quot;, str(input3.lower())) if input3.lower() == &quot;False&quot;: print(&quot;Congratulations! That is correct. not(x &lt; 5 and x &lt; 10) would output&quot;, not(x &lt; 5 and x &lt; 10)) else: print(&quot;Sorry that is incorrect. The answer is False. not(x &lt; 5 and x &lt; 10) would output&quot;, True and False) . Welcome chewyboba10! Beginning quiz. Question 1: Suppose that there is a lightbulb connected to two light switches. When both light switches are on off, the lightbulb does not light up. When only one light switch is on, the lightbulb is on. Finally, when both of the light switches are on, the lightbulb is off. Which logical operator does this lightbulb follow? A. AND B. OR C. XOR D. NOT you have selected option A Sorry that is incorrect. Question 2: Let presume that the light switches from Question1 are rewired to follow an AND logical operator. Which of the following would result in the lightbulb turning on? A. True and True = B. True and False = C. False and True D. False and False you have selected option V Sorry that is incorrect. The answer is A. True and True which would output False Question 3: What would not(x &lt; 5 and x &lt; 10) output if x = 5? you have answered true Sorry that is incorrect. The answer is False. not(x &lt; 5 and x &lt; 10) would output False .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections5-7hacks",
            "relUrl": "/unit3/sections5-7hacks",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Copy of Unit 3 Sections 14 and 15",
            "content": "wget https://raw.githubusercontent.com/aidenhuynh/CS_Swag/master/_notebooks/2022-11-30-randomvalues.ipynb . Libraries . A library is a collection of precompiled codes that can be used later on in a program for some specific well-defined operations. | These precompiled codes can be referred to as modules. Each module contains bundles of code that can be used repeatedly in different programs. | A library may also contain documentation, configuration data, message templates, classes, and values, etc. | . Why are libraries important? . Using Libraries makes Python Programming simpler and convenient for the programmer. | One example would be through looping and iteration, as we don’t need to write the same code again and again for different programs. | Python libraries play a very vital role in fields of Machine Learning, Data Science, Data Visualization, etc. | . A few libraries that simplify coding processes: . Pillow allows you to work with images. | Tensor Flow helps with data automation and monitors performance. | Matplotlib allows you to make 2D graphs and plots. | . The AP Exam Refrence Sheet itself is a library! . Hacks: . Research two other Python Libraries NOT DISCUSSED DURING LESSON and make a markdown post, explaining their function and how it helps programmers code. . API&#8217;s . An Application Program Interface, or API, contains specific direction for how the procedures in a library behave and can be used. | An API acts as a gateway for the imported procedures from a library to interact with the rest of your code. | . Activity: Walkthrough with NumPy . Install NumPy on VSCode: Open New Terminal In VSCode: | pip3 install --upgrade pip | pip install numpy | | . REMEMBER: When running library code cells use Python Interpreter Conda (Version 3.9.12) . Example of using NumPy for arrays: . import numpy as np new_matrix = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]]) print (new_matrix) . [[1 2 3] [4 5 6] [7 8 9]] . Example of using NumPy for derivatives: . import numpy as np # defining polynomial function var = np.poly1d([2, 0, 1]) print(&quot;Polynomial function, f(x): n&quot;, var) # calculating the derivative derivative = var.deriv() print(&quot;Derivative, f(x)&#39;=&quot;, derivative) # calculates the derivative of after # given value of x print(&quot;When x=5 f(x)&#39;=&quot;, derivative(5)) . Polynomial function, f(x): 2 2 x + 1 Derivative, f(x)&#39;= 4 x When x=5 f(x)&#39;= 20 . Random Values . Random number generation (RNG) produces a random number (crazy right?) This means that a procedure with RNG can return different values even if the parameters (inputs) do not change | . | CollegeBoard uses RANDOM(A, B), to return an integer between integers A and B. RANDOM(1, 10) can output 1, 2, 3, 4, 5, 6, 7, 8, 9, or 10 | In Python, this would be random.randint(A, B), after importing Python&#39;s &quot;random&quot; library (import random) | JavaScript&#39;s works a little differently, with Math.random() returning a value between 0 and 1. To match Python and CollegeBoard, you could make a procedure like this | . | . | . CollegeBoard Example: What is the possible range of values for answ3 . Convert the following procedure to Python, then determine the range of outputs if n = 5. . PROCEDURE Dice(n) sum ← 0 REPEAT UNTIL n = 0 sum ← sum + RANDOM(1, 6) n ← n - 1 RETURN sum . import random # Fill in the blank def Dice(n): sum = 0 while n != 0: sum = sum + random.randint(1, 6) n = n - 1 return sum # Code here Dice(5) # Will output a range of 5 to 30 . 19 . Homework . Write a procedure that generates n random numbers, then sorts those numbers into lists of even and odd numbers (JS or Python, Python will be easier). . | Using NumPy and only coding in python cell, find the answer to the following questions: a. What is the derivative of 2x^5 - 6x^2 + 24x? b. What is the derivative of (13x^4 + 4x^2) / 2 when x = 9? . | Suppose you have a group of 10 dogs and 10 cats, and you want to create a random order for them. Show how random number generation could be used to create this random order. . | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections14-15notes",
            "relUrl": "/unit3/sections14-15notes",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "3.3-3.4 Notes",
            "content": "Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.3-3.4 Hacks | | . 3.3-3.4 Notes | 3.3-3.4 Hacks | | . 3.5-3.7 Notes | 3.5-3.7 Hacks | | . Mathematical Expressions and Strings . Algorithms . A set of instructions that can accomplish a specific task . Three components of an algorithm . Sequencing: Algorithms do task in the order of specification | Selection: Helps choose two different outcomes based off a decision | Iteration: If a condition is true, then the code can repeat | Two different ways algorithms can be represented . Flowcharts: The steps of an algorithm are represented by shapes and arrows | Pseudocode: A blend of human language and coding format | Arithmetic Operations . Basic Operations . Addition is represented by + Example: num1 = 2 + 1 which would make num1 = 3 . Subtraction is represented by - Example: num1 = 2 - 1 which would make num1 = 1 . Multiplication is represented by * Example: num1 = 2 * 1 which would make num1 = 2 . Division is represented by / Example: num1 = 2 / 1 which would make num1 = 2 . Remainder is represented by MOD in psuedo code (% in python) Example: num1 = 5 % 2 which would make num1 = 1 . Order of operations applies . Variables . Numerical value stored in a variable | Value of another variable stored in a variable | Result of an operation stored in a variable | Result of a procedure call stored in a variable | . Sequence of variables is important . String . A collection of characters. Characters can be anything from numbers, letters, spaces, etc. . Certain procedures can be used to affect string Examples: len() to find the length of string concat() returns the strings as a concatenation of multiple strings lower() to convert to lowercase .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections3-4notes",
            "relUrl": "/unit3/sections3-4notes",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "3.3-3.4 Hacks",
            "content": "Hacks Part 1 . Num1 = 50 Num2 = Num1 % 9 + 15 # MOD comes before addition. 50 divided 9 is 5 remainder 5 since MOD only takes the value of the remainder, it will now be 5 + 15 which will make Num2 = 20 Num3 = Num2 / Num1 + ( Num2 * 2 ) # Parenthesis come first. Num2 equals 20. 20 times 2 equals 40. Next operation will be division. Num2, 20, divided by Num1, 50 is 0.4. Next is addition. 0.4 + 40 is 40.4. So Num3 = 40.4 Num4 = Num3 + Num1 / 5 - 10 # Division comes first. Num1 equals 50, so 50 divided by 5 is 10. Next is addition and subtraction. Num3 is 40.4. 40.4 + 10 - 10 is 40.4. So Num4 = 40.4 Result = Num4 - Num2 # Num4 equals 40.4 and Num2 equals 20. 40.4 - 20 is 20.4. So Result = 20.4 print(Result) . 20.4 . Num1 = 10 Num2 = Num1 % 3 * 4 # Num1 equals 10. MOD and multiplication go from left to right. 10 divided by 3 is 3 remainder 1 since MOD only takes the value of the remainder, it will now be 1 * 4 which will make Num2 = 4 Num1 = Num2 # The value of Num2, 4, will now be the value of Num1. Num1 = 4 Num3 = Num1 * 3 # The value of Num1 is now 4. 4 * 3 is 12. Num3 = 12 Result = Num3 % 2 # The value of Num3 is 12. 12 divided by 2 is 6 remainder 0. MOD only takes the value of the remainder. Result = 0 print(Result) . 0 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA # valueC = 17 and valueA = 4. 17 - 4 is 13. The result is being assigned as the new value of valueB, so valueB is now 13. valueA = valueA * 10 # valueA is 4. 4 * 10 is 40. The result is being assigned as the new value of valueA, so valueA is now 40 if valueB &gt; 10: # valueB is now 13. 13 is greater than 10. So it will print valueC, which is 17. print(valueC) . 17 . type = &quot;curly&quot; # initial value of variable &quot;type&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; # value of variable &quot;type&quot; is now &quot;straight&quot; hair = type + color + length # the addition of these non integer values will just concatenate the variables, so print will output &quot;straightbrownshort&quot; print(hair) . straightbrownshort . Hacks Part 2 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = substring(Noun, 1, 7) # based on psuedocode, this will take the first character of string, M, and every character after it up to the 7th character, t, so abrev = Mr.Mort yoda = concat(Adjective2, &quot; &quot;, Adjective, &quot; &quot;, abrev, &quot; &quot;,Verb, &quot;.&quot;) # concat combines the string of variables and addition string to get: Very handsome is Mr.Mort. print(yoda) . Pseudo code version . cookie = &quot;choclate&quot; # 8 characters in the incorrectly spelled word &quot;choclate&quot; cookie2 = &quot;rasin&quot; # 5 characters in the incorrectly spelled word &quot;raisin&quot; len1 = len(cookie) / 2 # there are 8 characters in &quot;choclate&quot;, so len(cookie) = 8. 8 divided by 2 is 4 so len1 equals 4 len2 = len(cookie2) * 45 # there are 6 characters in &quot;rasin&quot;, so len(cookie2) = 5. 5 times 45 is 225 so len2 equals 225 vote1 = (cookie, &quot;vote&quot;, len2) # I think they want to concatenate these together. The value of cookie is &quot;choclate&quot; and len2 is 22. So vote1 is assigned &quot;choclatevote225&quot; (no space in between) vote2 = (cookie2, &quot;vote&quot;, len1) # I think they want to concatenate these together. The value of cookie2 is &quot;rasin&quot; and len1 is 4. So vote1 is assigned &quot;rasinvote4&quot; (no space in between) votes = concat(vote1, &quot; &quot;, vote2) # concatenate vote1 and vote2 to get &quot;choclatevote225 rasinvote4&quot; display[votes] # vote will be displayed as &quot;choclatevote225 rasinvote4&quot; . Python version . cookie = &quot;choclate&quot; # 8 characters in the incorrectly spelled word &quot;choclate&quot; cookie2 = &quot;rasin&quot; # 5 characters in the incorrectly spelled word &quot;raisin&quot; len1 = len(cookie) / 2 # there are 8 characters in &quot;choclate&quot;, so len(cookie) = 8. 8 divided by 2 is 4 so len1 equals 4 len2 = len(cookie2) * 45 # there are 6 characters in &quot;rasin&quot;, so len(cookie2) = 5. 5 times 45 is 225 so len2 equals 225 vote1 = str(cookie) + &quot;vote&quot; + str(len2) # I think they want to concatenate these together. The value of cookie is &quot;choclate&quot; and len2 is 225. So vote1 is assigned &quot;choclatevote225&quot; (no space in between) vote2 = str(cookie2) + &quot;vote&quot; + str(len1) # I think they want to concatenate these together. The value of cookie2 is &quot;rasin&quot; and len1 is 4. So vote1 is assigned &quot;rasinvote4&quot; (no space in between) votes = str(vote1) + &quot; &quot; + str(vote2) # concatenate vote1 and vote2 to get &quot;choclatevote225 rasinvote4&quot; print(votes) # vote will be displayed as &quot;choclatevote225 rasinvote4&quot; . choclatevote225 rasinvote4.0 .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections3-4hacks",
            "relUrl": "/unit3/sections3-4hacks",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Unit Notes and Homework (Day 2)",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task.. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueC) . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . Noun = &quot;Mr.Mortenson&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = subtring(Noun, 1, 7) yoda = concat(Adjective2, &quot; &quot;, Adjective, &quot; &quot;, abrev, &quot; &quot;,Verb, &quot;.&quot;) display[yoda] . Problem 2 . cookie = &quot;choclate&quot; cookie2 = &quot;rasin&quot; len1 = len(cookie) / 2 len2 = len(cookie2) * 45 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = concat(vote1, &quot; &quot;, vote2) display[votes] .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections3&4notes",
            "relUrl": "/unit3/sections3&4notes",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "3.1-3.2 Notes",
            "content": "Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.3-3.4 Hacks | | . 3.3-3.4 Notes | 3.3-3.4 Hacks | | . 3.5-3.7 Notes | 3.5-3.7 Hacks | | . Variables . An abstraction inside a program that can hold a value . Variables should be something simple; not very complicated and not to vague | Use meaningful variables to help the program be easier to read Three parts of a variable: | name | value | type | . Types of data . integer (number) | Text/string: word Boolean: Data that determines if something is true or false | . lists can be stored as variables . specific values in the list can be retrieved from the list without creating multiple variables and data can be easily changed . Assignments . assigns values to variables . Allows the program to change the value represented by a variable . Data Abstraction . represents data in a useful form, takes away aspects of data that are unused in the situation | variables and lists and main tools for data abstraction | separates abstract properties of data type and concrete details of its representations | . Lists in Data Abstractions . Multiple elements can be stored together and treated as a single value in a list | Data abstraction is possible | Elements can be added | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections1-2notes",
            "relUrl": "/unit3/sections1-2notes",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "3.1-3.2 Hacks",
            "content": "Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.3-3.4 Hacks | | . 3.3-3.4 Notes | 3.3-3.4 Hacks | | . 3.5-3.7 Notes | 3.5-3.7 Hacks | | . . quesCount = 0 # Use a dictionary for the questions quesList = [{&quot;Question1&quot;, &quot;What is 1+1 equal to?&quot;}, {&quot;Question2&quot;, &quot;What is 2*2 equal to?&quot;}, {&quot;Question3&quot;, &quot;What is 3^3 equal to?&quot;}, {&quot;Question4&quot;, &quot;What is 4/4 equal to?&quot;}] print(quesList[0]) # Use a dictionary for the correct solutions soluList = [{&quot;Solution1&quot;}, {&quot;Solution2&quot;}, {&quot;Solution3&quot;}, {&quot;Solution4&quot;}] quesAmount= len(quesList) for i in range(quesAmount): print(quesList[i], &quot; n&quot;) guess = input() if guess == soluList[quesAmount]: score+=1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList(quesCount) + &quot; n&quot;) quesCount += 1 print(&quot;Final score: &quot; + str(score)) . quesCount = 0 score = 0 quesSkip = 0 # Use a dictionary for the questions quesList = [&quot;What is 1+1 equal to?&quot;, &quot;What is 2*2 equal to?&quot;, &quot;What is 3/3 equal to?&quot;, &quot;What is 4^4 equal to?&quot;] # Use a dictionary for the correct solutions soluList = [&quot;2&quot;, &quot;4&quot;, &quot;1&quot;, &quot;256&quot;] quesAmount= len(quesList) for i in range(quesAmount): print(quesList[i]) guess = input(&quot;Type &#39;skip&#39; if you wish to skip the question&quot;) if guess == soluList[i]: score+=1 print(&quot;Your answer&quot;, guess, &quot;is correct! Score: &quot;, score, &quot; n&quot;) elif guess == &quot;skip&quot;: print(&quot;You have skipped the question. The correct answer was &quot; + soluList[i]+ &quot; n&quot;) quesSkip+=1 else: print(&quot;Your answer&quot;, guess, &quot;is incorrect! The correct answer was &quot; + soluList[i] + &quot; n&quot;) quesCount += 1 def percentage(right, wrong): percentage = 100 * float(right)/float(wrong) return str(percentage) + &quot;%&quot; print(&quot;You got&quot;, score, &quot;questions correct, a&quot;, percentage(score, quesCount), &quot;and skipped &quot;, str(quesSkip), &quot;questions&quot;) . What is 1+1 equal to? Your answer 2 is correct! Score: 1 What is 2*2 equal to? You have skipped the question. The correct answer was 4 What is 3/3 equal to? Your answer 1 is correct! Score: 2 What is 4^4 equal to? Your answer 2 is incorrect! The correct answer was 256 You got 2 questions correct, a 50.0% and skipped 1 questions .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections1-2hacks",
            "relUrl": "/unit3/sections1-2hacks",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Variables, Assignments, and Data Abstraction",
            "content": "Variables . A variable is an abstraction inside a program that can hold a value | It organizes data by labeling it with a descriptive name | It consists of three parts: name, value, and type | Using meaningful variables names helps with readability of program code and understanding of what values are represented by the variables | . Naming Variables . Do&#39;s Don&#39;ts Why . highScore | highestScoreInTheGame | Keep it simple and easy to read, having variables that are too complicated can cause your code to become messy later on | . highScore | highscore | Differentiate the words in your variable with a capital letter. Makes things easier to read | . firstName | n | not specific enough/vague | . isRaining | is it raining | spaces are improper syntax | . phoneNumber | 555-number | dashes are improper syntax and numbers should be avoided in variable names | . Types of data Integer: A number | Text/string: A word | Boolean: Data that determines if something is true or false | . | . name = &quot;table1&quot; #string print(name, type(name)) number = 4 #integer print(number, type(number)) isAbsent = False print(isAbsent, type(isAbsent)) . table1 &lt;class &#39;str&#39;&gt; 4 &lt;class &#39;int&#39;&gt; False &lt;class &#39;bool&#39;&gt; . A list of data can also be stored in variables. Why is that useful? . print/retrieve specific values in the list without creating a lot of variables | easily remove/add/change items into the list | . colors = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;] print(colors[2]) . yellow . Assignments . The assignment operator allows a program to change the value represented by a variable | Used to assigning values to variables | . Operator Description Syntax Outcome when print(a) . = | Assign value of right side of expression to left side operand | a = b | b | . += | Add right side operand with left side operand and then assign to left operand | a += b | a + b | . -= | Subtract right operand from left operand and then assign to left operand: True if both operands are equal | a -= b | a - b | . *= | Multiply right operand with left operand and then assign to left operand | a *= b | a * b | . /= | Divide left operand with right operand and then assign to left operand | a /= b | a / b | . **= | Calculate exponent(raise power) value using operands and assign value to left operand | a **= b | a ^ b | . a = 1 b = 2 a = b print(a) . The value stored in a variable will be the most recent value assigned . a = 1 b = a a = 2 print(b) . 1 . Changing Values . currentScore = 10 highScore = currentScore currentScore = 7 print(highScore) . your turn! Here are 3 problems for you to solve . num1 = 5 num2 = 9 num1 = num2 print(num1) print(num2) . num1 = 15 num2 = 25 num3 = 42 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . Which of these will show the sum? . num2 += num1 print(num1) print(num2) print(str(num1)+ str(num2)) print(num1 + num2) . Data Abstraction . Method used in coding to represent data in a useful form, by taking away aspects of data that aren&#39;t being used in the situation | Variables and lists are primary tools in data abstraction | Provides a separation between the abstract properties of a data type and the concrete details of its representation | . Lists &amp; Strings . List = ordered sequence of elements | Element = individual value in a list that is assigned to a unique index | Index = a way to reference the elements in a list or string using natural numbers; each element of a string is referenced by an index | String = ordered sequence of characters (Letters, numbers, special characters) . Note: index starts at 1 for AP Exam, must be whole numbers, cannot be negative, and goes up to the number of elements in the list We can represent a list or string using a variable . | . Example of a List - Colors . Index Element . 1 | Green | . 2 | Blue | . 3 | Purple | . 4 | Pink | . At Index 1, the element is green, at index 2, the element is blue, etc. | . Managing the Complexity of a Program through Data Abstraction . Data abstractions help manage complexity in programs by giving a collection of data a name without referencing the specific details of the representation | Developing a data abstraction to use in a program can result in a program that is easier to develop and maintain | . Using Lists as Data Abstractions . What are Lists? . Allow for data abstraction | Bundle variables together | Store multiple elements | Allows multiple related items to be treated as a single value | Give one name to a set of memory cells | Can keep adding elements to it as needed | Can store elements as a single variable by using a list | . 3 Types of List Operations . Assigning values to a list at certain indices | Creating an empty list and assigning it to a variable | Assigning a copy of one list to another list (setting one list equal to another list) | 1. Assigning values to a list at certain indices . colorsList=[&quot;pink&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;orange&quot;] print(colorsList) . [&#39;pink&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;orange&#39;] . 2. Creating an empty list and assigning it to a variable . colorsList=[] # can be used if you want to create a list that can be filled with values later . 3. Assigning a copy of one list to another list (setting one list equal to another list) . # copy of the list is made; the list isn&#39;t sorted in place def Reverse(lst): # defining variable: lst new_lst = lst[::-1] return new_lst lst = [&quot;pink&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;yellow&quot;, &quot;orange&quot;, &quot;blue&quot;, &quot;black&quot;] print(Reverse(lst)) # reverse 1st . [&#39;black&#39;, &#39;blue&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;pink&#39;] . What is Managing Complexity? . Improving code readability | Reducing the need for new variables as more data is collected | Can easily update data | Can easily convert data to different forms | . How do Lists Help Manage the Complexity of a Program? . Don’t need as many variables | Can easily change the number of variables | Can apply the same mathematical computation (through an algorithm) to all the elements in the list | . Data Abstraction Practice . Manage the complexity of the given code below using a list. Re-write the code segment in a less complex way, but with the same result. . color1=&quot;green&quot; color2=&quot;red&quot; color3=&quot;pink&quot; color4=&quot;purple&quot; color5=&quot;blue&quot; color6=&quot;brown&quot; print(color1) print(color2) print(color3) print(color4) print(color5) print(color6) . green red pink purple blue brown . Answer . colorList=[&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] print(str(colorList)) . [&#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;purple&#39;, &#39;blue&#39;, &#39;brown&#39;] . AP Exam Use of Data Abstraction . With the properties of the AP Exam pseudocode, lists work differently from what we&#39;ve learned in python so far, here are the two major differences: . The index does not start at 0 but 1 | There is only one method of interchanging data between lists, and that is completely overwriting previous list data with the other list n&quot;, | . Homework . You will turn in a program that utilizes lists and variables as it&#39;s primary function, options could be a quiz, a sorter, database, or wherever your imagination brings you. You will be graded on how well you understood the concepts and if you used anything other than just the simplest parts . Quiz template, if you do use it, fix the issues, and add more to it than it&#39;s current barebones state. I would recommend using it to create something related to school. . quesCount = 0 # Use a dictionary for the questions quesList = [&quot;Question1&quot;, &quot;Question2&quot;, &quot;Question3&quot;, &quot;Question4&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Solution1&quot;, &quot;Solution2&quot;, &quot;Solution3&quot;, &quot;Solution4&quot;] quesAmount= len(quesList) hrm quesCount &lt;= quesAmount: print(quesList[quescount] + &quot; n&quot;) guess = input() if(guess == soluList[quesamOOuaunt]): print(&quot;Correct!&quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList(quescount) + &quot; n&quot;) quesCount += 1 print(&quot;Final score: &quot; + str(score)) . Name Complete Correct Complexity Final Score Notes . Sreeja Gangapuram | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Moein Taleban | 1/1 | 1/1 | 0.7/1 | 0.9/1 | Utilized a list but could&#39;ve enforced some functions to maximize efficiency | Output is not as clear as it could be | Only the questions are printed and the number 4 is not referred to as the score which might be confusing | | . Ekam Kaire | 1/1 | 1/1 | 1/1 | 1/1 | Unique and creative use of lists and dictionaries | Stores and outputs data based on user&#39;s preference | Utilizes functions and if statements | | . Azeem Khan | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | Score is given as a number and a percentage | | . Jishnu Singiresu | 1/1 | 1/1 | 0.8/1 | 0.95/1 | created a function which is called at the end | nice and clean output | | . Soham Kamat | 1/1 | 1/1 | 1/1 | 1/1 | creative and advanced use of lists | | . Trey | 1/1 | 1/1 | 0.6/1 | 0.8/1 | Used list to print information | no use of functions or loops | | . Joshua Williams | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Used for loop to iterate through the questions. Efficient and allows for clean code | Output is clear and specific, states question and answer | | . Yuri Subramaniam | 1/1 | 1/1 | 1/1 | 1/1 | creative and advanced use of lists | | . Max Wu | 1/1 | 1/1 | 0.8/1 | 0.95/1 | Utilized a list as well as other functions to make code more efficient | Very clear output of what happened;Printed correct answers, score, and questions | | . Kalani Omana | 1/1 | | | | . Jonathan | 1/1 | 1/1 | /1 | /1 | . Alan Liu Sui | 1/1 | 1/1 | /1 | /1 | . Dhruva Iyer | 1/1 | 1/1 | /1 | /1 | . Ethan | 1/1 | 1/1 | /1 | /1 | . Dash Penning | 1/1 | 1/1 | /1 | /1 | . Jeffery Fonesca | 1/1 | 1/1 | /1 | /1 | . Ahah Biabani | 1/1 | 1/1 | /1 | /1 | . Abdullah | 1/1 | 1/1 | /1 | /1 | . Luke Angelini | .9/1 | 0.7/1 | 0.7/1 | 0.7/1 | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/unit3/sections1&2notes",
            "relUrl": "/unit3/sections1&2notes",
            "date": " • Nov 27, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Unit 3 Section 17-18 Plan",
            "content": "Unit 3 Section 17-18 Plan . This lesson is subject to change and will be altered and improved . Topics: 17 and 18(Algorithmic efficiency and undecidable problems) . Lesson: . Give examples of inefficient algorithms and their more efficient versions | Give an example of inefficient algorithms and ask students to see if they can create a more efficient algorithm . | Give an example decidable problems (maybe like determining if a number is odd or even) | Explain what undecidable problems are and give examples | . Activity #1: Card Sorting (Algorithmic Efficiency) . Objective: Make students comfortable with Algorithmic Efficiency . Activity Description: . 4 cards given to each group, they have to organize them from least to greatest. The cards will be randomly organized, facing down. The catch is that they are only allowed to pick up any 2 cards at a time to look at, from there the one can choose to swap places or keep the cards in their place. Record the number of times you pick up a pair of cards until you order the cards from least to greatest. . Reason: It will give them a real life example . Hacks(Homework): . Algorithmic efficiency . Make students do a simple card sort themselves and record the comparisons and swaps | Apply it to code given in a jupyter notebook Undecidable problems | Create a jupyter notebook with errors in the code and make students find and fix the errors | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t2/post/2022/11/18/Lesson-Plan.html",
            "relUrl": "/t2/post/2022/11/18/Lesson-Plan.html",
            "date": " • Nov 18, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "N@tM Reflection",
            "content": "Night at the Museum Reflection . Goals . The Night at the Museum was an event coordinated by the visual arts and computer science departments to create an opportunity for students to observe and learn from the projects of others while benefiting from their gains. It allowed students to gain a broader range of perspectives and views from their fellow students projects. The projects displayed by the Tri 1 APCSP classes utilized two web applications with one designated for Frontend display and one for Backend processing. The two endpoints were linked up via an API developed on the backend, which allows for communication between backend and frontend and ultimately interactive webpages. . Our Project . Our group created a minesweeper game where individual users need to log in into an account or create an account on the home page. This system is created by our backend API which stores users and their credentials and information in a 2 dimensional python dictionary. Our initial goal was to allow for our user to play the minesweeper game while allowing them to freely store their high scores so long as the website is up, based on the time it took them to complete the board. However, our timer was faulty and as a result, we did not make the leaderboard that would show incorrect data. Will need to continue to improve upon this project because while it is functional, it still has much to be improved. . Others Group Projects . Safin, Navan, Alex, Kalani - Made a motivational quotes website that allows users to like and dislike quotes and also giving them the ability to comment on each individual quote. . Alan, Ederick, Liav, Noor, Steven - Created a calendar that displays date and weather information. Allows users to input and store events on any date and incorporated city-wide weather data via an API. . Luke - Created a Quiz program that compiles random questions from a collection of geography, math and SAT prompts. His program has an about page that links to everyone’s fastpage blogs and has a good design. . Raunak, Tanay, Yuri, Sachit, Harsha - Created a clock alarm and stopwatch, I thought that is was impressive that they used a custom api to request data from a variety of time of timezones to display times. . Paaras, Samarth, AJ, Haoxuan - Developed an api that grabs some motivational quotes from the internet and allows users to vote on their favorite quotes through number counter. . Peacock Justin, James, Shruti, Joslyn - Created a Tetris game and used an astronomy api to create a table based on city names to provide location details such as longitude latitude and moon traits. . Advay, Krishiv, Shivansh, Dhruva, Prasith - Another motivational quotes generator with added motivational features for fitness and athletic goals. . Jonathan, Martin, Abdulla, Leonard - Created a program to return basketball stats of NBA teams, and used an API to get the stats for each team. Target audience seems to be people interested in the NBA, and I wonder how recent these stats are. . Lyntax Aniket, Soham, Ryan, Lucas - Used an api with a dictionary hosted on a flask server that has words and definitions so users can input it against a word. Which serves to play a hangman game. Which also eliminates letters and dynamically renders the character. . Ananya, Sreeja, Aliya, Clair - Created a Wordle game that uses a custom api and randomly generates a game. Also checks if words are valid are not and informs the user if they are incorrect or not. . Lily, Ekam, Ishi, Shreyas - Uses a custom dictionary api of different words and their definitions to allow users to find them and a word of the day that changes. Along with a feedback to adapt the user experience. . Aiden, Ahad, Dash, Sabine - Used an api that contained multiple games such as Tetris, blackjack, cookie clicker, and a pokemon game with custom to log losses wins, correct answers wrong and other game data. I am wondering if they took how they were able to compile multiple games within the timeframe we were given. It must have taken much effort and creative thinking. . Keira, Zeen, Ellie, Giannina - Made a custom customer survey along with a quiz that has three different quizzes for calculus, physics, and statistics, with solutions. Display is randomized with a backend database along with a quiz summary and a customer service api that prompts users with questions to save them. . Conclusion . It was very interesting to see what my peers have been up to and it is interesting that you combining api backend with frontend can create numerous results, the possibilities are countless. I do think that there are all things that we need to learn and improve on though. For example, if a list stores input data, if the server is shut down, then the inputted data will be lost. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/post/2022/11/09/22-N@tM.html",
            "relUrl": "/t1/post/2022/11/09/22-N@tM.html",
            "date": " • Nov 9, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "Project Video and Transcript",
            "content": "Project Video .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/post/2022/10/20/project-video1.html",
            "relUrl": "/t1/post/2022/10/20/project-video1.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Project Week 1 Video",
            "content": "Project Video . .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/10/20/project-video.html",
            "relUrl": "/jupyter/2022/10/20/project-video.html",
            "date": " • Oct 20, 2022"
        }
        
    
  
    
        ,"post31": {
            "title": "Using API",
            "content": "Python RapidAPI | Using API | . . import requests url = &quot;https://soundcloud-scraper.p.rapidapi.com/v1/track/metadata&quot; querystring = {&quot;track&quot;:&quot;https://soundcloud.com/edsheeran/photograph&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;982d09f4b6msha36abf60bba5931p11f8b1jsn17c33bd8dbf4&quot;, &quot;X-RapidAPI-Host&quot;: &quot;soundcloud-scraper.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) #print(response.text) #print(response.json()) data = response.json() print(&quot;Song Information: &quot;) print(&quot; Song Name: &quot;, data[&quot;title&quot;]) print(&quot; Genre: &quot;, data[&quot;genre&quot;]) print(&quot; Song Length: &quot;, data[&quot;durationText&quot;]) print(&quot; Number of Times played: &quot;, data[&quot;playCount&quot;]) . Song Information: Song Name: Ed Sheeran - Photograph Genre: Pop Song Length: 04:16 Number of Times played: 32393871 .",
            "url": "https://chewyboba10.github.io/sushi-burrito/api/api-usage",
            "relUrl": "/api/api-usage",
            "date": " • Oct 5, 2022"
        }
        
    
  
    
        ,"post32": {
            "title": "Python RapidAPI",
            "content": "Python RapidAPI | Using API | . . Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;982d09f4b6msha36abf60bba5931p11f8b1jsn17c33bd8dbf4&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) #print(response.text) # uncomment this line to see raw data #print(response.json()) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;asc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;982d09f4b6msha36abf60bba5931p11f8b1jsn17c33bd8dbf4&quot;, &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) # print(response.text) # End Rapid API Code json = response.json() # convert response to python json object #print(response.json()) # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; API status: success FXTC 0.0779200097827158 Icon Url: https://cdn.coinranking.com/VCcpsxMOb/fxtc-pools.svg Rank Url: https://coinranking.com/coin/JJEVdobzFfNn+fxtcpools-fxtc BOOT 0.006634674736075586 Icon Url: https://cdn.coinranking.com/WQzZCePhf/BOOT_1563330941007_light.png Rank Url: https://coinranking.com/coin/cuPvJZZsffVr3+bitcoinrebooted-boot BC 0.013626999507315067 Icon Url: https://cdn.coinranking.com/ZNnDh97xw/bc.png Rank Url: https://coinranking.com/coin/00143FdsSOmd+bitcoinconfidential-bc CCA 0.00015015368848074 Icon Url: https://cdn.coinranking.com/HY9czzwx_/4122.png Rank Url: https://coinranking.com/coin/CNm61Nt1_ih_+counoscoin-cca SVR 0.005450799802926027 Icon Url: https://cdn.coinranking.com/KCxC1pJB3/4594.png Rank Url: https://coinranking.com/coin/9I0C0CCwF_Rd+sovranocoin-svr MCN 0.000194671421533072 Icon Url: https://cdn.coinranking.com/BImEmxkuc/423.png Rank Url: https://coinranking.com/coin/58uJvk3vOkGf+monetaverde-mcn HOSP 0.003893428430661448 Icon Url: https://cdn.coinranking.com/o512Nw0-e/Hospital_Coin.png Rank Url: https://coinranking.com/coin/rL5brTWKayJU+hospitalcoin-hosp PEOS 0.000055204707588876 Icon Url: https://cdn.coinranking.com/-Q7fMD4gj/3910.png Rank Url: https://coinranking.com/coin/OtjXUM9ymkdI+peos-peos OPN 0.002920071322996086 Icon Url: https://cdn.coinranking.com/QZlPEiCWt/opn.png Rank Url: https://coinranking.com/coin/NXE_WTIH4Diy+openbit-opn YOB 0.005450799802926027 Icon Url: https://cdn.coinranking.com/Q6hQcT2s4/yobank.png Rank Url: https://coinranking.com/coin/br5t9N75S_XQ+yobank-yob XGK 5.637878338e-7 Icon Url: https://cdn.coinranking.com/HgleTy8uZ/F8pONNqi_400x400.png Rank Url: https://coinranking.com/coin/WuSl3eeO2Jt0+goldkash-xgk ABET 0.001406212522500279 Icon Url: https://cdn.coinranking.com/TVxx6o4vv/4502.png Rank Url: https://coinranking.com/coin/tsYwLMUHlEtr+altbet-abet INNBC 2.0021489258e-8 Icon Url: https://cdn.coinranking.com/3oSm7vNHl/innovative-bioresearch-coin.svg Rank Url: https://coinranking.com/coin/kDDoiqG4W6s+innovativebioresearchcoin-innbc TNR 1.4339925769e-8 Icon Url: https://cdn.coinranking.com/y61K2cKYf/tnr.png Rank Url: https://coinranking.com/coin/2lXwQqlHiVe3+tonestra-tnr NOR 0.005256128381392954 Icon Url: https://cdn.coinranking.com/xEnOrtfZ8Vc/noir.svg Rank Url: https://coinranking.com/coin/cdhFXkXV3mRP0+noir-nor GLT 0.000175204279379765 Icon Url: https://cdn.coinranking.com/jInwKn4GcYi/globaltoken.svg Rank Url: https://coinranking.com/coin/kpHamxaeamGVC+globaltoken-glt HATCH 0.00200241757081142 Icon Url: https://cdn.coinranking.com/txhGRJgGU/4185.png Rank Url: https://coinranking.com/coin/DKNkOIfAiPJB+hatch-hatch COW 0.003737427441862211 Icon Url: https://cdn.coinranking.com/HPlXvsAcg/5895.png Rank Url: https://coinranking.com/coin/kVSbvjZ8Mlit+cowry-cow EKO 0.000072028617323584 Icon Url: https://cdn.coinranking.com/S1l3RA1zX/eko.svg Rank Url: https://coinranking.com/coin/QmaGeC2kxWNzc+echolink-eko AUDAX 0.00021413856368638 Icon Url: https://cdn.coinranking.com/gdHwdnTfV/logo-284x284.png Rank Url: https://coinranking.com/coin/fYNqTyYGQ+audax-audax RISE 0.000502561667010731 Icon Url: https://cdn.coinranking.com/ryJ6Xr9NM/rise.svg Rank Url: https://coinranking.com/coin/p7VD1xOWgroAy+rise-rise YAP 0.001912308780124906 Icon Url: https://cdn.coinranking.com/F0TfmGvWF/yap.png Rank Url: https://coinranking.com/coin/k828ut4b+yapstone-yap GUN 0.000042684172199619 Icon Url: https://cdn.coinranking.com/BJjQnHg67/gun.svg Rank Url: https://coinranking.com/coin/_rfn6Am9rkEhy+guncoin-gun XSH 0.000136275913583028 Icon Url: https://cdn.coinranking.com/B148rB9Vz/xsh.svg Rank Url: https://coinranking.com/coin/d6UohiNz99VG_+shield-xsh EXCL 0.011096752963189438 Icon Url: https://cdn.coinranking.com/qg0ee-keMm/exclusive-coin.svg Rank Url: https://coinranking.com/coin/ugHHr58GbHNgR+exclusivecoin-excl GRIMM 0.0700104601574839 Icon Url: https://cdn.coinranking.com/FRKlvl5RV/4866.png Rank Url: https://coinranking.com/coin/gAcPTtQT+grimm-grimm MBC 0.000001551676220874 Icon Url: https://cdn.coinranking.com/tZfbQ2-Yo/3507.png Rank Url: https://coinranking.com/coin/vzs9mp4qQYw3+microbitcoin-mbc ZCR 0.003270249011629434 Icon Url: https://cdn.coinranking.com/LMgtIf8rdgu/zcore.svg Rank Url: https://coinranking.com/coin/rI74W2gx6DuLs+zcore-zcr ETNXP 5.40724403774e-7 Icon Url: https://cdn.coinranking.com/4E1UMVvqW/5669.png Rank Url: https://coinranking.com/coin/jxWBqe7rwfzS+electroneropulse-etnxp USDCLP 1.4676216587401518 Icon Url: https://cdn.coinranking.com/o9RJOVs42/usdclp-waves.png Rank Url: https://coinranking.com/coin/asCEJv7MI+usdclp-usdclp MEME 0.06210288061855142 Icon Url: https://cdn.coinranking.com/l4XrqHA7Gf/pepe.svg Rank Url: https://coinranking.com/coin/SNnn13b3diN6f+pepe-meme GET 0.000093463455186644 Icon Url: https://cdn.coinranking.com/s_FyvCVUK2z/themis.svg Rank Url: https://coinranking.com/coin/IPbVhqaRHFqd7+themis-get XQR 0.003504085587595303 Icon Url: https://cdn.coinranking.com/36Qb3hA8e/3821.png Rank Url: https://coinranking.com/coin/KdRlEzu26D8Y+qredit-xqr LTK 4.0058290611e-8 Icon Url: https://cdn.coinranking.com/TbnjE4Wmh/litkoin.png Rank Url: https://coinranking.com/coin/kRdfEZ63gfQ2+litkoin-ltk CURE 0.00934463407426479 Icon Url: https://cdn.coinranking.com/N_mfFHsEa/333.png Rank Url: https://coinranking.com/coin/NMbkyaCf4rWjJ+curecoin-cure APR 0.000661882833212446 Icon Url: https://cdn.coinranking.com/2eD2WvevrVG/apr-coin.svg Rank Url: https://coinranking.com/coin/htLu2sg2z0lUU+aprcoin-apr XGG 0.0299026883154086 Icon Url: https://cdn.coinranking.com/tM0p4PBZV4v/going-gems.svg Rank Url: https://coinranking.com/coin/9KoB2vsXgpfp+goinggems-xgg LUNES 0.004404508195435037 Icon Url: https://cdn.coinranking.com/_az8jwbum/Lunes-Symbol-200x200.png Rank Url: https://coinranking.com/coin/Jwrwwrh_z9s2+lunes-lunes SPHR 0.007981874938434509 Icon Url: https://cdn.coinranking.com/4kr3S0UafJ2/sphere-coin.svg Rank Url: https://coinranking.com/coin/8EOiMbVD_r71T+spherecoin-sphr BTCR 0.010231502830473535 Icon Url: https://cdn.coinranking.com/D1knZEEJul/bitcurrency.svg Rank Url: https://coinranking.com/coin/tBbVxV9pmmzlA+bitcurrency-btcr BSTY 0.006708098862218256 Icon Url: https://cdn.coinranking.com/jE3b0Qzpj0J/globalboost.svg Rank Url: https://coinranking.com/coin/0ltXI_jLXJRuS+globalboost-y-bsty AFC 0.4035513100157843 Icon Url: https://cdn.coinranking.com/oegp1dZG4um/anti-fraud-chain.svg Rank Url: https://coinranking.com/coin/CvAIy2j_1a-rJ+anti-fraudchain-afc WCC 0.019463875485540686 Icon Url: https://cdn.coinranking.com/-J18ej4xe/5233.png Rank Url: https://coinranking.com/coin/X3E9XWPYw+wincash-wcc ACM 0.004282735431699251 Icon Url: https://cdn.coinranking.com/5mNWGtDKlr/actinium.svg Rank Url: https://coinranking.com/coin/CB_utF8r69Aze+actinium-acm ARQ 0.005450754185799047 Icon Url: https://cdn.coinranking.com/MtjTL5b4m/arqma.svg Rank Url: https://coinranking.com/coin/rflPPmiBQp1iC+arqma-arq MONK 0.014076870847099432 Icon Url: https://cdn.coinranking.com/4NcGdg13raj/monkey-project.svg Rank Url: https://coinranking.com/coin/uvdwgYO8XF-Av+monkeyproject-monk VRC 0.000778719506188733 Icon Url: https://cdn.coinranking.com/ByFWHPdub/vrc.svg Rank Url: https://coinranking.com/coin/I9t3toniFVZow+vericoin-vrc YCE 0.001771509935950959 Icon Url: https://cdn.coinranking.com/YUJbQllWkI/myce.svg Rank Url: https://coinranking.com/coin/f8y0e39gedW-Y+myce-yce GPS 0.001557110038843255 Icon Url: https://cdn.coinranking.com/wAr2DzdaP/gps.png Rank Url: https://coinranking.com/coin/ezR2yeG1X+gpsecosystem-gps UNN 0.1938927358469401 Icon Url: https://cdn.coinranking.com/LEGFuKk6J/GyWRnJKC_400x400.png Rank Url: https://coinranking.com/coin/Qal82VrX+uninet-unn . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/api/rapidapi",
            "relUrl": "/api/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post33": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter d is the 4 letter in the alphabet . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) count = 1 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . The letter z is the 26 letter in the alphabet . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] == 0: continue if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) elif numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98] . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a “single” test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write “just enough” code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 print(&quot;Welcome to Mr. Mort Burgers&quot;) print(&quot;Here are the items we offer: &quot;) #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times #code should add the price of the menu items selected by the user item_amount = int(input(&quot;How many items do you wish to buy? &quot;)) if item_amount == int: print(&quot;Which {0} items would you like to buy?&quot;.format(item_amount)) else: print(&quot;please choose a number&quot;) counter = 0 chosen = {&quot;burger&quot;:0,&quot;fries&quot;:0,&quot;drink&quot;:0} while counter &lt; item_amount: item = input(&quot;Please select an item from the menu&quot;) try: total+=menu[item] chosen[item]+=1 print(&quot;You have selected a {0}&quot;.format(item)) counter+=1 except: print(&quot;Product &quot;{0} &quot; is not on our menu, please try again...&quot;.format(item)) print(&quot;You have chosen {0} burgers, {1} fries, and {2} drinks. Your total is ${3}&quot;.format(chosen[&quot;burger&quot;],chosen[&quot;fries&quot;],chosen[&quot;drink&quot;],round(total,2))) . Welcome to Mr. Mort Burgers Here are the items we offer: Menu burger $3.99 fries $1.99 drink $0.99 please choose a number You have selected a burger You have selected a burger You have selected a drink You have selected a drink Product &#34; fries&#34; is not on our menu, please try again... You have selected a fries You have chosen 2 burgers, 1 fries, and 2 drinks. Your total is $11.95 . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are “single” tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action … Divide these “single” tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/week%207/2022/10/03/AP-error_testing.html",
            "relUrl": "/week%207/2022/10/03/AP-error_testing.html",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post34": {
            "title": "Collegeboard Notes and Assignment Reflections",
            "content": "Big Idea 1: Creative Development . AP Exam Weighting 10-13% . 1.1: Collaboration . Learning Objectives . CRD-1.A Explain how computing innovations are improved through collaboration. . CRD-1.B Explain how computing innovations are developed by groups of people. . CRD-1.C Demonstrate effective interpersonal skills during collaboration. . Essential Knowledge . CRD-1.A.1 A computing innovation includes a program as an integral part of its function. . CRD-1.A.2 A computing innovation can be physical (e.g&gt;, self-driving car), nonphysical computing software (e.g., picture editing software), or a nonphysical computing concept (e.g., e-commerce). . CRD-1.A.3 Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it. . CRD-1.A.4 Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations. . CRD-1.A.5 Consultation and communication with users are important aspects of the development of computing innovations. . CRD-1.A.6 Information gathered from potential users can be used to understand the purpose of a program from diverse perspectives and to develop a program that fully incorporates these perspectives . CRD-1.B.1 Online tools support collaboration by allowing programmers to share and provide feedback on ideas and documents . CRD-1.B.2 Common models such as pair programming exist to facilitate collaboration . CRD-1.C.1 Effective collaborative teams practice interpersonal skills include but not limited to: . communication | consensus building | conflict resolution | negotiation | . Addition Notes . Pair Programming: Two programmers work together as a pair. One writes the program code while the other reviews each line of program code . Think-Pair-Share: Students think through a problem alone, pair with a partner to share ideas, and then share results with the class . 1.2: Program Function and Purpose . Learning Objectives . CRD-2.A Describe the purpose of a computing innovation. . CRD-2.B Explain how a program or code segment functions. . CRD-2.C Identify input(s) to a program. . CRD-2.D Identify output(s) produced by a program. . Essential knowledge . CRD-2.A.1 The purpose of computing innovations is to solve problems or to pursue interests through creative expression. . CRD-2.A.2 An understanding of the purpose of a computing innovation provides developers with an improved ability to develop that computing innovation; . CRD-2.B.1 A program is a collection of program statements that performs a specific task when run by a computer. A program is often referred to as software. . CRD-2.B.2 A code segment is a collection of program statements that is part of a program. . CRD-2.B.3 A program needs to work for a variety of inputs and situations. . CRD-2.B.4 The behavior of a program is how a program functions during execution and is often described by how a user interacts with it. . CRD-2.B.5 A program can be described broadly by what it does, or in more detail by both what the program does and how the program statements accomplish this function . CRD-2.C.1 Program inputs are data sent to a computer for processing by a program. Input can come in a variety of forms. such as tactile, audio, visual, or text. . CRD-2.C.2 An event is associated with an action and supplies input data to a program. . CRD-2.C.3 Events can be generated when a key is pressed, a mouse is clicked, a program is started, or any other defined action occurs that affects the flow of execution. . CRD-2.C.4 Inputs usually affect the output produced by a program. . CRD-2.C.5 In event-driven programming, program statements are executed when triggered rather than through teh sequential flow of control. . CRD-2.C.6 Input can come from a user or other programs. . CRD-2.D.1 Program outputs are any data sent from a program to a device. . CRD-2.D.2 Program output is usually based on a program’s input or prior state (e.g., internal values). . 1.3: Program Design and Development . Learning Objectives . CRD-2.E Develop a program using a development process. . CRD-2.F Design a program and its user interface. . CRD-2.G Describe the purpose of a code segment or program by writing documentation . CRD-2.H Acknowledge code segments use from other sources. . Essential Knowledge . CRD-2.E.1 A development process can be order and intentional, or exploratory in nature. . CRD-2.E.2 There are multiple development processes. The following phases are commonly used when developing a program: . investigating and reflecting | designing | prototyping | testing | . CRD-2.E.3 A development process that is iterative requires refinement and revision based on feedback, testing, or reflection throughout the process. This may require revisiting earlier phases of the process. . CRD-2.E.4 A development process that is incremental is one that breaks the problem into smaller pieces and makes sure each piece works before adding it to the whole. . CRD-2.F.1 The design of a program incorporates investigation to determine its requirements . CRD-2.F.2 Investigation in a development process is useful for understanding and identifying the program constraints, as well as the concerns and interests of the people who will use the program. . CRD-2.F.3 Some ways investigation can be performed are as follows: . collecting data through surveys | user testing | interviews | direct observations | . CRD-2.F.4 Program requirements describe how a program functions and may include a description of user interactions that a program must provide. . CRD-2.F.5 A program’s specification defines the requirements for the program. . CRD-2.F.6 In a development process, the design phase outlines how to accomplish a given program specification. . CRD-2.F.7 The design phase ofa program may include: . brainstorming | planning and storyboarding | organizing the program into modules and functional components | creation of diagrams that represent the layouts of the user interface | development of a testing strategy for the program | . CRD-2.G.1 Program documentation is a written description of the function of a code segment, event, procedure, or program and how it was developed. . CRD-2.G.2 Comments are a form of program documentation written into the program to be read by people and do not affect how a program runs. . CRD-2.G.3 Programmers should document a program throughout its development. . CRD-2.G.4 Program documentation helps in developing and maintaining correct programs when working individually or in collaborative programming environments. . CRD-2.G.5 Not all programming environments support comments, so other methods of documentation may be required. . CRD-2.H.1 It is important to acknowledge any code segments that were developed collaboratively or by another source . CRD-2.H.2 Acknowledgement of a code segment(s) written by someone else and used in a program can be in the program documentation. The acknowledgement should include the origin or original author’s name. . 1.4: Identifying and Correcting Errors . Learning Objectives . CRD-2.I For errors in an algorithm or program: . Identify the error. | Correct the error. | . CRD-2.J Identify inputs and corresponding expected outputs or behaviors that can be used to check the correctness of an algorithm or program. . Essential Knowledge . CRD-2.I.1 A logic error is a mistake in the algorithm or program that causes it to behave incorrectly or unexpectedly. . CRD-2.I.2 A syntax error is a mistake in the program where the rules of programming language are not followed. . CRD-2.I.3 A run-time error is a mistake in the program that occurs during the execution of a program. Programming languages define their own run-time errors . CRD-2.I.4 An overflow error is an error that occurs when a computer attempts to handle a number that is outside of the defined range of values. . CRD-2.I.5 The following are effective ways to find and correct errors: . test cases | hand tracing | visualizations | debuggers | adding extra output statement(s) | . CRD-2.J.1 In the development process, testing uses defined inputs to ensure that an algorithm or program is producing the expected outcomes. Programmers use the results from testing to revise their algorithms or programs. . CRD-2.J.2 Defined inputs used to test a program should demonstrate the different expected outcomes that are at or just beyond the extremes (minimum and maximum) of input data. . CRD-2.J.3 Program requirements are needed to identify appropriate defined inputs for testing. . Big Idea 4: Computing Systems and Networks . AP Exam Weighting 11-15% . 4.1: The Internet . Learning Objectives . CSN-1.A Explain how computing devices work together in a network. . CSN-1.B Explain how the Internet works. . CSN-1.C Explain how data are sent through the Internet via packets. . CSN-1.D Describe the differences between the Internet and the World Wide Web . Essential Knowledge . CSN-1.A.1 A computing device is a physical artifact that can run a program. Some examples include computers, tablets, servers, routers, and smart sensors. . CSN-1.A.2 A computing system is a group of computing devices and programs working together for a common purpose. . CSN-1.A.3 A computer network is a group of interconnected computing devices capable of sending or receiving data. . CSN-1.A.4 A computer network is a type of computing system. . CSN-1.A.5 A path between two computing devices on a computer network (a sender and a receiver) is a sequence of directly connected computing devices that begins at the sender and ends at the receiver. . CSN-1.A.6 Routing is the process of finding a path from sender to receiver. . CSN-1.A.7 The bandwidth of a computer network is the maximum amount of data that can be sent in a fixed amount of time. . CSN-1.A.8 Bandwidth is usually measured in bits per second. . CSN-1.B.1 The Internet is a computer network consisting of interconnected networks that use standardized, open (nonproprietary) communication protocols. . CSN-1.B.2 Access to the Internet depends on the ability to connect a computing device to an Internet-connected device. . CSN-1.B.3 A protocol is an agreed-upon set of rules that specify the behavior of a system. . CSN-1.B.4 The protocols used in the Internet are open, which allows users to easily connect additional computing devices to the Internet. . CSN-1.B.5 Routing on the Internet is usually dynamic; it is not specified in advance. . CSN-1.B.6 The scalability of a system is the capacity for the system to change in size and scale to meet new demands. . CSN-1.B.7 The Internet was designed to be scalable. . CSN-1.C.1 Information is passed through the Internet as a data stream. Data streams contain chunks of data, which are encapsulated in packets. . CSN-1.C.2 Packets contain a chunk of data and metadata used for routing the packet between the origin and the destination on the Internet, as well as for data reassembly. . CSN-1.C.3 Packets may arrive at the destination in order, out of order, or not at all. . CSN-1.C.4 IP, TCP, and UDP are common protocols used on the Internet. . CSN-1.D.1 The World Wide Web is a system of linked pages, programs, and files. . CSN-1.D.2 HTTP is a protocol used by the World Wide Web. . CSN-1.D.3 The World Wide Web uses the Internet . Quiz/Test Results Updated 11/9/22 . Quiz Results 10/13/22 . . Problems that I thought were challenging . I just found this question to be hard to read and analyze. I need to review collegeboard psuedo code. . After thinking about and review on why I got this answer wrong, I realized that the packets are given specific flags so that the device doesn’t need a specific order for the packets to be sent, rather the packets can be reassembled in any configuration due to the flags given to the packets, which tell the device on how to order the packets. . . Tri 1 Final Test 11/9/22 . Score: 45/50 . Problems I got incorrect: . Q8: Documentation for procedure with lists . I forgot that the square brackets referred to the indices of the list, which led to me debating between b and d, which I ended up choosing b. . Q19: Adding numbers in 4-bit representation . 4-bit binary sequences can only hold up to 16 different values, the decimal values can only be up to 16, and since 29 is greater than 16, you won’t be able to represent it in 4-bit binary sequences. . Q41: Value of r after sequence of assignments . I got slightly confused with the amount of data that I was given, which led me to assigning the wrong values to the variables. the value of q was 20, then q was assigned to p, so the value of p was 20. Then p was assigned to r, so the value of r was 20. . Q43: Value of x after REPEAT UNTIL block . I accidentally thought that the iteration would stop when result &gt; 5. . Q44: Value of y in x MOD y . I was unsure was MOD did. After researching a little into it, I learned that MOD stood for Modulus, which shows the remainder after number is divided by another. In this situation, it is x being divided by y and any remainder would be the value of z. . Things I had to research to gain more information . What are 4-bit binary sequences? How do you count them? | What is Boolean? | What is MOD? | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2022/09/29/Collegeboard-Notes.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2022/09/29/Collegeboard-Notes.html",
            "date": " • Sep 29, 2022"
        }
        
    
  
    
        ,"post35": {
            "title": "Final Project Idea's Program Purpose",
            "content": "Project Idea . Our team wishes to build a minesweeper game with a python backend that could consistently communicate with our frontend website while creating a new aesthetic to this classic game. This project would be split into two main portions each with it’s own challenge. The first portion would be making the game engine in python, while the latter portion would be to design and create an aesthetically pleasing and functional frontend to display the Game Status. . The Frontend . The frontend aspect of this project should preferably display a grid of the game and incorporate some aspect of user input. Preliminary testing and experimentation could be done through textbox inputs of coordinate values, while prospective functions could include individual buttons on the Grid itself to provide a GUI for the user to interact with. In both cases, the frontend should be able to communicate with the python backend through JSON data to send and receive data. . More aspects about the Frontend aspects will be added with additional planning in the future. . The Backend . Arguably the more challenging half of this project, the backend would primarily serve to be the game engine of the minesweeper game. Additionally, the backend would also control and organize the various pages and menus on the website. In this writeup, we will only be focusing on the main goals and challenges faced by the Backend team. . Using Object Oriented Programming to create individual objects for the game. Some aspects that could be represented by such objects would be the gameboard and also the individual cells and nodes present within the game board. -Doing so would simplify the algorithmic aspect of the game, as the board itself could have methods and attributes to help control the game logic. -Moreover, using an object to represent an individual cell in the board would provide greater functionalities than just using a single variable | Use Enumerated types with the python enum module to create different values for the type and status of each node. Each of these types could then be bound to a constant value which could then be printed on the screen | Use Recursion to create an algorithm to recursively detect adjacent cells that are safe (AKA not mines). This algorithm would work in the following format: Maintain a list of current cells already determined to be safe | Verify if the four adjacent (up, down, left, right) cells next to the selected cell are safe or not, if safe, store the coordinate point in the list, if not, record the cell as a “border cell”, terminate the recursive process, and run another helper function to determine the precise number of mines surrounding the cell | Re-call the function for each of the surrounding adjacent cells to identify other consecutive cells who are safe. | Return a list of the coordinates of a contiguous block of safe cells | Mark the cells to be safe and calculate number of surrounding mines for border cells. | . | Verify the Game status: Game is won if all mines are flagged | Game is lost if a mine was dug by the user | . | Return the final result back to the front end. If a safe cell was dug, send out a JSON containing an array of the coordinates of the cell and it’s safe neighbors. If a mine was dug, send a JSON containing a boolean value to signify the end of the game. | . SCRUM Team . Here is an infographic of the scrum process showing our roles as a team . .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/week%205/markdown/post/2022/09/25/project-purpose.html",
            "relUrl": "/t1/week%205/markdown/post/2022/09/25/project-purpose.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post36": {
            "title": "JavaScript Usage",
            "content": "JavaScript Usage | Table Using JavaScript and HTML Fragments | . Unit 3 . Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.1-3.2 Hacks | 0.95/1 | . 3.3-3.4 Notes | 3.3-3.4 Hacks | 0.9/1 | . 3.5-3.7 Notes | 3.5-3.7 Hacks | 0.95/1 | . 3.8 &amp; 3.10 Notes | 3.8 &amp; 3.10 Hacks | 0.9/1 | . 3.9 &amp; 3.11 Notes | 3.9 &amp; 3.11 Hacks | 0.8/1 | . 3.12 &amp; 3.13 Notes | 3.12 &amp; 3.13 Hacks | 0.95/1 | . 3.14 &amp; 3.15 Notes | 3.14 &amp; 3.15 Hacks | 0.9/1 | . 3.16 Notes | 3.16 Hacks | TBD | . . Solving Physics Problems . Lets see if we can use math in JavaScript to Solve for physics problems . A car moves with a constant acceleration of 2.00 m/s² along a straight line from point A to point B starting from a speed of 5.00 m/s, taking 10 seconds. What distance does the car travel assuming the place where the car starts is the point of reference? . function solve(Δx) { var t = 10 // Variable t represents time var a = 2 // Variable a represents acceleration var vᵢ = 5 // Variable v represents the initial velocity var Δx = (vᵢ * t) + (0.5 * a * Math.pow(t, 2)) // Kinematic Equation for position as a function of time } function logIt() { console.log(&quot;Use the kinematic equation Δx = vᵢt + at²&quot;); console.log(&quot;plug in the known values: Δx = (5)(10) + (2)(10)²&quot;); console.log(&quot;The car travels&quot;, Δx, &quot;meters&quot;); } logIt() . Use the kinematic equation Δx = vᵢt + at² plug in the known values: Δx = (5)(10) + (2)(10)² The car travels 150 meters .",
            "url": "https://chewyboba10.github.io/sushi-burrito/frontend/javascript",
            "relUrl": "/frontend/javascript",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post37": {
            "title": "HTML Fragments and JavaScript Data Table",
            "content": "JavaScript Usage | Table Using JavaScript and HTML Fragments | . Unit 3 . Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.1-3.2 Hacks | 0.95/1 | . 3.3-3.4 Notes | 3.3-3.4 Hacks | 0.9/1 | . 3.5-3.7 Notes | 3.5-3.7 Hacks | 0.95/1 | . 3.8 &amp; 3.10 Notes | 3.8 &amp; 3.10 Hacks | 0.9/1 | . 3.9 &amp; 3.11 Notes | 3.9 &amp; 3.11 Hacks | 0.8/1 | . 3.12 &amp; 3.13 Notes | 3.12 &amp; 3.13 Hacks | 0.95/1 | . 3.14 &amp; 3.15 Notes | 3.14 &amp; 3.15 Hacks | 0.9/1 | . 3.16 Notes | 3.16 Hacks | TBD | . . Console.log output . console.log() is similar to the function of print() in python. Running the command outputs the parameter to the console, so it you can see it in a Jupyter document. However, running the command in a web application does not make it visible from the browser. . console.log(&quot;Hello World&quot;) . Hello World . Variables . Variables in JavaScript are defined using the var keyword . var msg = &quot;Hello everyone&quot; console.log(msg) . Hello everyone . Functions . Functions are defined in JavaScript with the function keyword, a function name, and the arguments of the function. The code in the function needs to be contained in curly braces {}. . Since the variable msg was defined in the previous cell, it can be used as a parameter when calling the logIt function. . function logIt(output) { console.log(output) } logIt(msg) . Hello everyone . Reuse of a Function . Functions that have been previous defined in a previous cell can be called in any subsequent cell in the Jupyter notebook. A function/method is a process of creating a procedural abstraction . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;) logIt(&quot;Foo Bar!&quot;) logIt(2022) logIt(msg) . Reuse of logIT Hello, Students! Foo Bar! 2022 Hello everyone . Dynamic or Loosely Typed Language (string, number) . Javascript is a loosely typed language, so you don&#39;t have to specify what type of information will be stored in a variable in advance. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Creating a different table . Here is my usage of a Jupyter JavaScript kernel to create a table: . function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } Person.prototype.setRole = function(role) { this.role = role; } Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } var ScrumMaster = new Person(&quot;Shaurya Goel&quot;, &quot;STG-7&quot;, 2025); ScrumMaster.setRole(&quot;Scrum Master&quot;); var DevOp = new Person(&quot;Evan Aparri&quot;, &quot;chewyboba10&quot;, 2024); var FrontendDevs = [ new Person(&quot;Haseeb Beg&quot;, &quot;h4seeb-cmd&quot;, 2024), new Person(&quot;Tirth Thakkar&quot;, &quot;Tirth-Thakkar&quot;, 2024), ]; var BackendDev = new Person(&quot;Alex Lu&quot;, &quot;YLu-1258&quot;, 2024); function Group(DevOp, BackendDevs, ScrumMaster, FrontendDevs){ ScrumMaster.setRole(&quot;Scrum Master&quot;); this.ScrumMaster = ScrumMaster; this.group = [ScrumMaster]; this.DevOp = DevOp; DevOp.setRole(&quot;Dev Op&quot;); this.group.push(DevOp); this.FrontendDevs = FrontendDevs; this.FrontendDevs.forEach(FrontendDev =&gt; { FrontendDev.setRole(&quot;Frontend Dev&quot;); this.group.push(FrontendDev); }); this.BackendDev = BackendDev; BackendDev.setRole(&quot;Backend Dev&quot;); this.group.push(BackendDev); this.json = []; this.group.forEach(person =&gt; this.json.push(person.toJSON())); } compsci = new Group(DevOp, BackendDev, ScrumMaster, FrontendDevs); Group.prototype._toHtml = function() { var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); var body = &quot;&quot;; body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row of compsci.group) { body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;tr&gt;&quot;; } return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Shaurya Goel | STG-7 | 2025 | Scrum Master | Evan Aparri | chewyboba10 | 2024 | Dev Op | Haseeb Beg | h4seeb-cmd | 2024 | Frontend Dev | Tirth Thakkar | Tirth-Thakkar | 2024 | Frontend Dev | Alex Lu | YLu-1258 | 2024 | Backend Dev | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://chewyboba10.github.io/sushi-burrito/frontend/table",
            "relUrl": "/frontend/table",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post38": {
            "title": "Notes - College Board Create Performance Task",
            "content": "College Board Create Performance Task . Plan and ideas . Organizing various recipes based on where it originates, the ingredients it uses, and how long the recipe takes | Organizing various animals based on where it lives, what it eats, it population size, etc. | More ideas coming soon | . Row 1: Program Purpose and Function . Know the difference between program purpose and function . The purpose of my program will be to find specific recipes with conditions the user sets while the function will that users can specify what things they are looking for in a recipe (nationality, ingredients, time) that will be sorted by the computer. . Row 2: Data Abstraction . Assesses students’ ability to use abstraction to manage complexity in a program (Skill Abstraction in Program Development - data) . Create lists and dictionaries that show what the nationality of the recipe, the ingredients that it uses, and how long it takes. . Row 3: Managing Complexity . Explain how abstraction manages complexity (Skill Abstraction in Program Development explain complexity) . Similar to how my posts are tagged, I want to create different tags for the recipes I put in the program so that it can be sorted out that way. Make different functions to reduce the complexity and therefore compartmentalizing the code. . Row 4: Procedural Abstraction . Use abstraction to manage complexity in a program (Skill Abstraction in Program Development - procedures/functions) . Find a way to sort it out the recipes based on input the user provides. . Row 5: Algorithm Implementation . Implement and apply an algorithm (Skill Algorithms and Program Development) . Still need to learn how to make good algorithms that are more efficient and are more complex . Row 6: Testing . Investigate the situation, context, or task (Skill Computational Solution Design - testing) . Test that the recipes sort out in the different ways I want them to. Ask for others’ opinions during the tests . Different Ways to study . Khan Academy | Look at notes/old code | research on the internet | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2022/09/08/CollegeBoard-Performance-Task.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2022/09/08/CollegeBoard-Performance-Task.html",
            "date": " • Sep 8, 2022"
        }
        
    
  
    
        ,"post39": {
            "title": "Notes - AppLab Quiz Creation",
            "content": "AppLab Quiz Creation . Here is the link to my quiz . Starting off . Here is what I noticed when exploring: . the dimensions of the screen were 320 by 450. This Note is mainly used to help center the objects I add | I could change the color of the objects color, or the color of texts using setting the rgba values | I can duplicate the screen if I want to keep the format of the screen I created | I saw that the user can input text and that they can choose from a dropdown menu | I can switch between block code and text code | . Plan . Create a math themed quiz that tests users on their math knowledge | Create different difficulties | Find a way to go to a quiz of matching difficulty using the dropdown menu | Users will be able to input their answers and the computer will be able to sort out if the answer is correct | Be able to show the final score at the end of the quiz by abstracting the number of correct answers | create a variable that defines the number of questions and number of answers | . | . Process . I ended up designing a total of 13 different screens with three pairs of 3 questions, each with a different corresponding difficulty, a starting screen: Start_Window, a correct answer screen: CorrectScreen, a incorrect answer screen: WrongAnswer, and a end screen: End_Screen . . I created 3 different difficulties corresponding to different school levels . . I initially had problems figuring out how to use the dropdown to manage which difficulty quiz I would go to. However, after exploring a bit more in the code blocks, I was able to create an if else statement that would take me to different screens depending on what was chosen from the dropdown option. . . The format for all the questions is a user inputted response based one. The algorithm that I wrote makes it so that after you click the button the reads “Check Answer”, if the inputted texts matches the answer, you go to the CorrectScreen screen. If you get it wrong, you’ll go to the WrongAnswer screen (The question shown below, Normal_Question_1, is the only one where there were two possible answers, which I was able to do using double vertical bars). . . For the final question of each difficulty, I created a string concatenation that would show the results of the quiz in the blank text box in the End_Screen. . . Results and Findings (Testing) . The block form of code made it really easy to visualize how each block of code worked and made it easier to find out what went wrong. It was also cool to be able to convert the blocks into JavaScript, which made JavaScript muc easier to understand. While thinking back to how I made this quiz, I realize there are a few bugs that need to be patched up such as: . If I go back to the Start_Window clicking a “Quit” or “Home” button, the dropdown menu defaults to the previously chosen item. So if I end up choose the “Choose Difficulty” item and press start, it goes to the “Hard” difficulty. | edit: I was able to fix this by assigning a value to the variable: correct = 0 | . | The var correct does not reset back to 0 after starting another quiz | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%203/markdown/post/2022/09/07/AppLab-Quiz.html",
            "relUrl": "/t1/notes/week%203/markdown/post/2022/09/07/AppLab-Quiz.html",
            "date": " • Sep 7, 2022"
        }
        
    
  
    
        ,"post40": {
            "title": "Lecture Notes - HTML Fragments",
            "content": "Lecture Notes - HTML Fragments . What Lists, Dictionaries, and Iterations are and how to use them . HTML Fragments . procedural abstraction and data abstraction - taking little pieces of information and putting them into different files so that something can take it in the bigger system. . markdown gets converted into html. everything in your website gets converted to html. . HTML Write Analysis . The theme of the Blog could be changed in the _config.yml file in the home directory of the blog. Either theme or remote_theme key pair value can be altered. The remote_theme method needs to have the jekyll-remote-theme to be defined in the plugins key. I decided to change to the midnight theme because I thought the theme name sounded cool. . I ran into a minor problem of naming the remote theme wrong, but that was quickly fixed . . Here is what the homepage looked like: . . The problems that I noticed were that the changes removed the blog’s navigation bar such as the search and tabs. That is the main problem I saw. When opening some of my posts, they were no negatively affected, but you are unable to open the homepage once you have left: . . One last thing that I noticed before I changed back to the minima theme is that the icon of the blog does not show up. The conclusion that I came from this experiment is that other Jekyll themes are not entirely compatible with fastpages and that minima is the preferred theme. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%202/markdown/post/2022/09/01/Lecture-Notes.html",
            "relUrl": "/t1/notes/week%202/markdown/post/2022/09/01/Lecture-Notes.html",
            "date": " • Sep 1, 2022"
        }
        
    
  
    
        ,"post41": {
            "title": "Lecture Notes - Lists, Dictionaries, Iteration",
            "content": "Lists . Starts with square brackets [], then list the values, quote each value, with commas after each variable . list = [1, 2, 3, 4] print(&quot;list&quot;, list, type(list), &quot;length&quot;, len(list)) print(&#39;- list[3]&#39;, list[3], type(list[3])) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) . list [1, 2, 3, 4] &lt;class &#39;list&#39;&gt; length 4 - list[3] 4 &lt;class &#39;int&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; . name = &quot;Evan&quot; print(&quot;What is the value of variable name:&quot;, name) . What is the value of variable name: Evan . Notes can be made this way. . Dictionary . Starts with squiggly brackets {} Define data patterns . A list of dictionaries . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;none&quot;, &quot;Hobbies&quot;: [&quot;sleeping&quot;] }) print(InfoDb) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: &quot;4Runner&quot;, &quot;Hobbies&quot;: [&quot;eating&quot;] }) print() print() # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}] [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: &#39;4Runner&#39;, &#39;Hobbies&#39;: [&#39;eating&#39;]}] . Hacks . .append() . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person InfoDb.append({ &quot;FirstName&quot;: &quot;John&quot;, &quot;LastName&quot;: &quot;Mortensen&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;October 21&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;jmortensen@powayusd.com&quot;, &quot;Fav_Color&quot;: &quot;Unknown&quot;, &quot;Sleep_Schedule&quot; : &quot;Unknown&quot;, &quot;is_Teacher&quot;: True, &quot;Hobbies&quot;: [&quot;Teaching&quot;, &quot;Programming&quot;], &quot;Games&quot;: [], &quot;Owns_Cars&quot;: [&quot;2015-Fusion&quot;, &quot;2011-Ranger&quot;, &quot;2003-Excursion&quot;, &quot;1997-F350&quot;, &quot;1969-Cadillac&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Fav_Color&quot;: &quot;Blue&quot;, &quot;Sleep_Schedule&quot; : &quot;2am&quot;, &quot;is_Teacher&quot;: False, &quot;Hobbies&quot;: [&quot;Running&quot;, &quot;Reading&quot;, &quot;Eating Asian Food/ Food Connoisseur&quot;, &quot;Sleeping&quot;, &quot;Homework&quot;, &quot;Programming&quot;], &quot;Games&quot;: [], &quot;Owns_Cars&quot;: [&quot;2001-Camry&quot;] }) InfoDb.append({ &quot;FirstName&quot;: &quot;Alex&quot;, &quot;LastName&quot;: &quot;Lu&quot;, &quot;Gender&quot;: &quot;Male&quot;, &quot;DOB&quot;: &quot;November 29, 2006&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;maodou1258@gmail.com&quot;, &quot;Fav_Color&quot;: &quot;White&quot;, &quot;Sleep_Schedule&quot; : &quot;1am&quot;, &quot;is_Teacher&quot;: False, &quot;Hobbies&quot;: [&quot;Programming&quot;, &quot;Tennis&quot;, &quot;Reading&quot;, &quot;Sleeping&quot;], &quot;Games&quot;: [&quot;League of Legends&quot;, &quot;VALORANT&quot;, &quot;Minecraft&quot;, &quot;OSU&quot;], &quot;Owns_Cars&quot;: [] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;John&#39;, &#39;LastName&#39;: &#39;Mortensen&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;October 21&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;jmortensen@powayusd.com&#39;, &#39;Fav_Color&#39;: &#39;Unknown&#39;, &#39;Sleep_Schedule&#39;: &#39;Unknown&#39;, &#39;is_Teacher&#39;: True, &#39;Hobbies&#39;: [&#39;Teaching&#39;, &#39;Programming&#39;], &#39;Games&#39;: [], &#39;Owns_Cars&#39;: [&#39;2015-Fusion&#39;, &#39;2011-Ranger&#39;, &#39;2003-Excursion&#39;, &#39;1997-F350&#39;, &#39;1969-Cadillac&#39;]}, {&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;Blue&#39;, &#39;Sleep_Schedule&#39;: &#39;2am&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;Running&#39;, &#39;Reading&#39;, &#39;Eating Asian Food/ Food Connoisseur&#39;, &#39;Sleeping&#39;, &#39;Homework&#39;, &#39;Programming&#39;], &#39;Games&#39;: [], &#39;Owns_Cars&#39;: [&#39;2001-Camry&#39;]}, {&#39;FirstName&#39;: &#39;Alex&#39;, &#39;LastName&#39;: &#39;Lu&#39;, &#39;Gender&#39;: &#39;Male&#39;, &#39;DOB&#39;: &#39;November 29, 2006&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;maodou1258@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;White&#39;, &#39;Sleep_Schedule&#39;: &#39;1am&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;Programming&#39;, &#39;Tennis&#39;, &#39;Reading&#39;, &#39;Sleeping&#39;], &#39;Games&#39;: [&#39;League of Legends&#39;, &#39;VALORANT&#39;, &#39;Minecraft&#39;, &#39;OSU&#39;], &#39;Owns_Cars&#39;: []}] . For loop . def data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Favorite Color:&quot;, d_rec[&quot;Fav_Color&quot;]) print(&quot; t&quot;, &quot;Is Teacher?:&quot;, d_rec[&quot;is_Teacher&quot;]) print(&quot; t&quot;, &quot;Hours of Sleep:&quot;, d_rec[&quot;Sleep_Schedule&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot; + &quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) print(&quot; t&quot;, &quot;Games: &quot; + &quot;, &quot;.join(d_rec[&quot;Games&quot;])) print(&quot; t&quot;, &quot;Cars Owned: &quot; + &quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e . While loop . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: . Printing in reverse . def reversed_loop(arr): print(&quot;Reversed output of For loop:&quot;) for i in arr[::-1]: print_data(i) reversed_loop(InfoDb) . Reversed output of For loop: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac . Recursion . def recursion(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursion(i + 1) return print(&quot;Recursive loop output n&quot;) recursion(0) . Recursive loop output John Mortensen Residence: San Diego Birth Day: October 21 Email: jmortensen@powayusd.com Favorite Color: Unknown Is Teacher?: True Hours of Sleep: Unknown Hobbies: Teaching, Programming Games: Cars Owned: 2015-Fusion, 2011-Ranger, 2003-Excursion, 1997-F350, 1969-Cadillac Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Email: evanaparri@gmail.com Favorite Color: Blue Is Teacher?: False Hours of Sleep: 2am Hobbies: Running, Reading, Eating Asian Food/ Food Connoisseur, Sleeping, Homework, Programming Games: Cars Owned: 2001-Camry Alex Lu Residence: San Diego Birth Day: November 29, 2006 Email: maodou1258@gmail.com Favorite Color: White Is Teacher?: False Hours of Sleep: 1am Hobbies: Programming, Tennis, Reading, Sleeping Games: League of Legends, VALORANT, Minecraft, OSU Cars Owned: Haseeb Beg Residence: san diego Birth Day: december sixth 2007 Email: mirzahbeg123@gmail.com Favorite Color: blbue Is Teacher?: False Hours of Sleep: 11pm Hobbies: sleep, none Games: minecraft, none Cars Owned: n, o, n, e . Adding to the List using Input . def add_entry(): name = input(&quot;First and last name seperated by spaces: &quot;).split() gender = input(&quot;What is your gender? &quot;) birthdate = input(&quot;When were you born? &quot;) residence = input(&quot;City you live in? &quot;) email = input(&quot;email? &quot;) color = input(&quot;favorite color? &quot;) sleep = input(&quot;When do you go to bed? &quot;) is_teacher = bool_input(&quot;Are you a teacher? [yes/no] &quot;) hobbies = [] print(&quot;hobbies? &quot;) hobbies = multi_input(hobbies) games = [] print(&quot;Games? &quot;) games = multi_input(games) cars = input(&quot;What car(s) do you own? &quot;) entry = { &quot;FirstName&quot;: name[0], &quot;LastName&quot;: name[1], &quot;Gender&quot;: gender, &quot;DOB&quot;: birthdate, &quot;Residence&quot;: residence, &quot;Email&quot;: email, &quot;Fav_Color&quot;: color, &quot;Sleep_Schedule&quot;: sleep, &quot;is_Teacher&quot;: is_teacher, &quot;Hobbies&quot;: hobbies, &quot;Games&quot; : games, &quot;Owns_Cars&quot;: cars } return entry def bool_input(prompt): while True: try: return {&quot;yes&quot;:True,&quot;no&quot;:False}[input(prompt).lower()] except KeyError: print(&quot;Invalid input please enter yes or no&quot;) def multi_input(arr): i = 0 temp = &quot;&quot; while temp != &quot;none&quot;: i+=1 temp = input(&quot;Please enter item number {0}, type none to proceede &quot;.format(str(i))) if temp.lower != &quot;none&quot;: arr.append(temp) return arr new_entry = add_entry() InfoDb.append(new_entry) print(InfoDb[-1]) . hobbies? Games? {&#39;FirstName&#39;: &#39;Haseeb&#39;, &#39;LastName&#39;: &#39;Beg&#39;, &#39;Gender&#39;: &#39;male&#39;, &#39;DOB&#39;: &#39;december sixth 2007&#39;, &#39;Residence&#39;: &#39;san diego&#39;, &#39;Email&#39;: &#39;mirzahbeg123@gmail.com&#39;, &#39;Fav_Color&#39;: &#39;blbue&#39;, &#39;Sleep_Schedule&#39;: &#39;11pm&#39;, &#39;is_Teacher&#39;: False, &#39;Hobbies&#39;: [&#39;sleep&#39;, &#39;none&#39;], &#39;Games&#39;: [&#39;minecraft&#39;, &#39;none&#39;], &#39;Owns_Cars&#39;: &#39;none&#39;} . Quiz . Questions_Answers = { &quot;What is 1 + 1 equal to?&quot; : [&quot;2&quot;], &quot;What is 1 times 1 equal to?&quot; : [&quot;1&quot;], &quot;What is 1 divided by 1 equal to?&quot; : [&quot;1&quot;], &quot;What is 1 divided by 0 equal to?&quot; : [&quot;Undefined&quot;, &quot;undefined&quot;] } def get_pair(dict): return [q for q, a in dict.items()], [a for q, a in dict.items()] def percentage(x, y): return &#39;{0:.2f}&#39;.format(100 * float(x)/float(y)) correct = 0 total = len(Questions_Answers) Questions_Answers_pairs = get_pair(Questions_Answers) for i in range(0,len(Questions_Answers_pairs[0])): rsp = input(&quot;Question: &quot; + Questions_Answers_pairs[0][i]) if rsp in Questions_Answers_pairs[1][i]: print(rsp + &quot; was correct!&quot;) correct+=1 else: print(&quot;{0} was incorrect, the correct answer was: {1}&quot;.format(rsp, &quot;, &quot;.join(Questions_Answers_pairs[1][i]))) print(&quot;Congratulations, you got {0}% on this quiz&quot;.format(percentage(correct,total))) . 2 was correct! 1 was correct! 0 was incorrect, the correct answer was: 1 undefined was correct! Congratulations, you got 75.00% on this quiz .",
            "url": "https://chewyboba10.github.io/sushi-burrito/t1/notes/week%202/2022/08/30/Lectures-Notes.html",
            "relUrl": "/t1/notes/week%202/2022/08/30/Lectures-Notes.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post42": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | list = [1, 2, 3, 4] print(&quot;list&quot;, list, type(list), &quot;length&quot;, len(list)) print(&#39;- list[3]&#39;, list[3], type(list[3])) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) . list [1, 2, 3, 4] &lt;class &#39;list&#39;&gt; length 4 - list[3] 4 &lt;class &#39;int&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; . name = &quot;Evan&quot; print(&quot;What is the value of variable name:&quot;, name) . What is the value of variable name: Evan . # variable of type string name = &quot;Evan&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) # variable of type float score = 101.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs)) print(&quot;- langs[0]&quot;, langs[0], type(langs[0])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Evan &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 101.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; - langs[0] Python &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Evan&#39;, &#39;age&#39;: 16, &#39;score&#39;: 101.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Evan &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Evan&quot;, &quot;LastName&quot;: &quot;Aparri&quot;, &quot;DOB&quot;: &quot;November 10, 2005&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;evanaparri@gmail.com&quot;, &quot;Owns_Cars&quot;: &quot;none&quot;, &quot;Hobbies&quot;: [&quot;sleeping&quot;] }) print(InfoDb) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: &quot;4Runner&quot;, &quot;Hobbies&quot;: [&quot;eating&quot;] }) print() print() # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}] [{&#39;FirstName&#39;: &#39;Evan&#39;, &#39;LastName&#39;: &#39;Aparri&#39;, &#39;DOB&#39;: &#39;November 10, 2005&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;evanaparri@gmail.com&#39;, &#39;Owns_Cars&#39;: &#39;none&#39;, &#39;Hobbies&#39;: [&#39;sleeping&#39;]}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: &#39;4Runner&#39;, &#39;Hobbies&#39;: [&#39;eating&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, d_rec[&quot;Owns_Cars&quot;]) print(&quot; t&quot;, &quot;Hobbies: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Hobbies&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Cars: none Hobbies: sleeping Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Hobbies: eating . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Cars: none Hobbies: sleeping Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Hobbies: eating . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Evan Aparri Residence: San Diego Birth Day: November 10, 2005 Cars: none Hobbies: sleeping Sunny Naidu Residence: Temecula Birth Day: August 2 Cars: 4Runner Hobbies: eating . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post43": {
            "title": "Installation Checks for Evan Aparri",
            "content": "Python Intstallation Checks . python --version python3 --version . Python 3.9.12 Python 3.9.12 . function PythonInstallationCheck () { printf &quot;Checking python version n&quot; if [[ $(python3 --version) ]]; then py3version=$(python3 --version | cut -d&quot; &quot; -f2) printf &quot; - Python version $py3version has already been installed&quot; else printf &quot;Python not found&quot; fi } PythonInstallationCheck . Checking python version - Python version has already been installed . Java Installation Checks . function JavaInstallationCheck () { printf &quot;Checking java version n&quot; if [[ $(java --version) ]]; then javaversion=$(java --version | cut -d&quot; &quot; -f2) printf &quot; - Java version $javaversion has already been installed n&quot; else printf &quot;Java not found n&quot; fi } function JavaCInstallationCheck () { printf &quot;Checking javaC version n&quot; if [[ $(javac --version) ]]; then javacversion=$(javac --version | cut -d&quot; &quot; -f2) printf &quot; - JavaC version $javacversion has already been installed n&quot; else printf &quot;JavaC not found n&quot; fi } JavaInstallationCheck JavaCInstallationCheck . Checking java version - Java version 11.0.16 Runtime 64-Bit has already been installed Checking javaC version - JavaC version 11.0.16 has already been installed . Anaconda . Anaconda Installation Checks . function AnacondaInstallationCheck () { printf &quot;Checking anaconda version n&quot; if [[ $(conda --version) ]]; then anacondaversion=$(conda --version | cut -d&quot; &quot; -f2) printf &quot; - anaconda version $anacondaversion has already been installed&quot; else printf &quot;Anaconda not found&quot; fi } AnacondaInstallationCheck . Checking anaconda version - anaconda version 4.13.0 has already been installed . Anaconda Package Installation Check . function AnacondaPackageCheck () { printf &quot;Checking Anaconda package version n&quot; if [[ $(conda list | grep $1) ]]; then anacondapackageversion=$(conda list | grep $1 | awk &#39;{print $2}&#39;) printf &quot; - Conda package $1 version $anacondapackageversion has already been installed&quot; else printf &quot; - Conda Package not found&quot; fi } AnacondaPackageCheck &quot;nodejs&quot; . Checking Anaconda package version - Conda package nodejs version 6.11.2 has already been installed . Jupyter . Jupyter Kernels Check . function JupyterKernelsCheck () { printf &quot;Checking jupyter kernel installation&quot; if [[ $(jupyter kernelspec list | grep $1) ]]; then kernelpath=$(jupyter kernelspec list | grep $1 | awk &#39;{print $2}&#39;) printf &quot; - Jupyter $1 kernel has been found at $kernelpath&quot; else printf &quot; - Jupyter $1 kernel not found&quot; fi } kernels=&quot;bash javascript python3&quot; for i in $kernels; do JupyterKernelsCheck $1 done . Checking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not foundChecking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not foundChecking jupyter kernel installationUsage: grep [OPTION]... PATTERNS [FILE]... Try &#39;grep --help&#39; for more information. Traceback (most recent call last): File &#34;/home/chewyboba10/anaconda3/bin/jupyter-kernelspec&#34;, line 10, in &lt;module&gt; sys.exit(KernelSpecApp.launch_instance()) File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/traitlets/config/application.py&#34;, line 846, in launch_instance app.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 266, in start return self.subapp.start() File &#34;/home/chewyboba10/anaconda3/lib/python3.9/site-packages/jupyter_client/kernelspecapp.py&#34;, line 54, in start print(&#34;Available kernels:&#34;) BrokenPipeError: [Errno 32] Broken pipe - Jupyter kernel not found .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/26/bash-checks.html",
            "relUrl": "/jupyter/2022/08/26/bash-checks.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post44": {
            "title": "Lecture Notes - Bash and Cloud",
            "content": "Notes . The cloud has all git repositories. Individual computers can clone repositories from the cloud takes it to their SSD . A pull action will pull any new updates made at the repository down to our local repository and update it with the latest changes. . A push action will push any new updates made at the local repository to our remote repository in the cloud and contribute to the git repository. . A sequence is two or more lines of code .",
            "url": "https://chewyboba10.github.io/sushi-burrito/markdown/2022/08/25/Lecture-Notes.html",
            "relUrl": "/markdown/2022/08/25/Lecture-Notes.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post45": {
            "title": "Python Quiz",
            "content": "Original Quiz by Mr. Mortenson . Below shows the initial code created by Mr. Mortenson in Hello to Python. . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_with_response(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, root running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Question: What command is used to include other functions that were previously developed? yes is incorrect! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! root you scored 2/3 . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;Name the Python output command mentioned in this lesson?&quot;) question_and_answer(&quot;If you see many lines of code in order, what would College Board call it?&quot;) question_and_answer(&quot;Describe a keyword used in Python to define a function?&quot;) . Question: Name the Python output command mentioned in this lesson? Answer: sequence Question: If you see many lines of code in order, what would College Board call it? Answer: sequence Question: Describe a keyword used in Python to define a function? Answer: sequence . Changes Made by Me . Compared to my friend Alex Lu&#39;s quiz, this will be very lacking, but I think that this is a good representation of my current abilities. . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 skipped = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) rsp = question_with_response(&quot;Are you ready to take a test? Answer &#39;yes&#39; or &#39;no&#39;&quot;) if rsp == &quot;yes&quot;: print(&quot;good luck&quot;) if rsp == &quot;no&quot;: print(&quot;too bad&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 elif rsp == &quot;skip&quot;: print(&quot;skipping question&quot;) skipped += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) + &quot;/&quot; + str(questions) + &quot;, with &quot; + str(skipped) + &quot; skipped questions&quot;) . Hello, chewyboba10 running /bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Answer &#39;yes&#39; or &#39;no&#39; too bad Question: What command is used to include other functions that were previously developed? skipping question Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! chewyboba10 you scored 2/3, with 0 skipped questions . Getting Rid of Repeating Code . It will take a long time to add these lines of code multiple times, so I&#39;ll try to reduce the amount I make when creating more questions. . import getpass, sys questions = 10 correct = 0 skipped = 0 def question_with_response(question, answer): print(&quot;Question: &quot; + question) msg = input() if msg == answer: print(msg + &quot; is correct&quot;) global correct correct += 1 elif msg == &quot;skip&quot;: print(&quot;Question has been skipped&quot;) global skipped skipped += 1 else: print(msg + &quot; is incorrect&quot;) def percentage(right, wrong): percentage = 100 * float(right)/float(wrong) return str(percentage) + &quot;%&quot; print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) print(&quot;Are you ready to take a test?&quot;) rsp = input() if rsp == &quot;yes&quot;: print(&quot;Great! Good luck!&quot;) if rsp == &quot;no&quot;: print(&quot;too bad&quot;) question_with_response(&quot;Name the Python output command mentioned in this lesson?&quot;, &quot;print&quot;) question_with_response(&quot;If you see many lines of code in order, what would College Board call it?&quot;, &quot;sequence&quot;) question_with_response(&quot;Describe a keyword used in Python to define a function?&quot;, &quot;def&quot;) question_with_response(&quot;What command is used to evaluate correct or incorrect response in this quiz?&quot;, &quot;if&quot;) question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;expression&quot;) question_with_response(&quot;What is an input to a function or method called?&quot;, &quot;parameter&quot;) question_with_response(&quot;If Input is data the computer receives, what is the data that the computer sends back?&quot;, &quot;output&quot;) question_with_response(&quot;What is a reusable block of code called?&quot;, &quot;function&quot;) question_with_response(&quot;What operator is used for string concatenation in Python?&quot;, &quot;+&quot;) question_with_response(&quot;Which function can be used to turn numbers turned into string in Python?&quot;, &quot;str() function&quot;) print(&quot;Congratulations &quot; + getpass.getuser() + &quot;! You got &quot; + percentage(correct, questions) + &quot; and skipped &quot; + str(skipped) + &quot; questions!&quot;) . Hello, chewyboba10 running /bin/python3 You will be asked 10 questions. Are you ready to take a test? too bad Question: Name the Python output command mentioned in this lesson? print is correct Question: If you see many lines of code in order, what would College Board call it? sequence is correct Question: Describe a keyword used in Python to define a function? Question has been skipped Question: What command is used to evaluate correct or incorrect response in this quiz? if is correct Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct Question: What is an input to a function or method called? parameter is correct Question: If Input is data the computer receives, what is the data that the computer sends back? output is correct Question: What is a reusable block of code called? idk is incorrect Question: What operator is used for string concatenation in Python? + is correct Question: Which function can be used to turn numbers turned into string in Python? str() function is correct Congratulations chewyboba10! You got 80.0% and skipped 1 questions! . I am satisfied with how this turned out! Please comment if there is any problems or things I can work on. .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/23/Python-Quiz.html",
            "relUrl": "/jupyter/2022/08/23/Python-Quiz.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post46": {
            "title": "First Blog Post",
            "content": "Hello Everyone . This is my first blog post! My name is Evan Aparri, and I currently have no experience with Computer Science. I am excited to learn how to continue working on my blog. . My Hobbies . Here are some of the things that I like to do when I have free time: . Sleep | Eat | Violin | Cross Country | Track and Field | Watch YouTube | . Other Things that I like . The color blue | Sushi | Traveling | . Thanks for visiting . Please let me know if there is anything that I could improve .",
            "url": "https://chewyboba10.github.io/sushi-burrito/markdown/2022/08/21/First-blog-post.html",
            "relUrl": "/markdown/2022/08/21/First-blog-post.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post47": {
            "title": "First Jupyter Notebook",
            "content": "Trying things out . I&#39;m going to see if I can actually do something with Python . print(&quot;Hello everyone&quot;) . Hello everyone . It Worked! . Let&#39;s do something a little harder . a = 2 b = 5 c = (a + b) d = 7 if (c == d): for i in range(3): print(&quot;2+5 is equal to 7&quot;) . 2+5 is equal to 7 2+5 is equal to 7 2+5 is equal to 7 . That&#39;s all for now! . &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD ======= print(&quot;good afternoon&quot;) . good afternoon . &gt;&gt;&gt;&gt;&gt;&gt;&gt; 31e5fbc87eaddd935747d10ca14fa5f646cc95c1",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2022/08/20/first-notebook.html",
            "relUrl": "/jupyter/2022/08/20/first-notebook.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post48": {
            "title": "Binary RGB",
            "content": "COLOR PICKER . rgb() R . G . B .",
            "url": "https://chewyboba10.github.io/sushi-burrito/frontend/rgb",
            "relUrl": "/frontend/rgb",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post49": {
            "title": "Binary Math",
            "content": "JavaScript Usage | Table Using JavaScript and HTML Fragments | . Unit 3 . Notes | Hacks | Grade | . 3.1-3.2 Notes | 3.1-3.2 Hacks | 0.95/1 | . 3.3-3.4 Notes | 3.3-3.4 Hacks | 0.9/1 | . 3.5-3.7 Notes | 3.5-3.7 Hacks | 0.95/1 | . 3.8 &amp; 3.10 Notes | 3.8 &amp; 3.10 Hacks | 0.9/1 | . 3.9 &amp; 3.11 Notes | 3.9 &amp; 3.11 Hacks | 0.8/1 | . 3.12 &amp; 3.13 Notes | 3.12 &amp; 3.13 Hacks | 0.95/1 | . 3.14 &amp; 3.15 Notes | 3.14 &amp; 3.15 Hacks | 0.9/1 | . 3.16 Notes | 3.16 Hacks | TBD | . Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | +1 | 00000000 | 0 | 0 | 0 | -1 | +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | +1 | 00000000 | 0 | 0 | 0 | -1 | +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | .",
            "url": "https://chewyboba10.github.io/sushi-burrito/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Jul 7, 2022"
        }
        
    
  
    
        ,"post50": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://chewyboba10.github.io/sushi-burrito/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chewyboba10.github.io/sushi-burrito/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "API",
          "content": "Python RapidAPI | Using API | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/api/overview",
          "relUrl": "/api/overview",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Lecture Notes",
          "content": "This page contains the notes I have taken during Mr. Mortenson’s lecture . Table of Contents . Week 0 . Date Subject . Blank | Blank | . Week 1 . Date Subject . 8/24/22 | Blog Posting and Configuration | . 8/25/22 | Bash and Cloud | . Week 2 . Date Subject . 8/29/22 | Data Abstraction | . 8/30/22 | List, Dictionaries, Iteration | . 9/1/22 | HTML Fragments | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/_pages/lecture-notes.html",
          "relUrl": "/_pages/lecture-notes.html",
          "date": ""
      }
      
  

  
  

  

  
  

  
      ,"page8": {
          "title": "Submenu",
          "content": "{% include nav_frontend.html %} .",
          "url": "https://chewyboba10.github.io/sushi-burrito/submenu",
          "relUrl": "/submenu",
          "date": ""
      }
      
  

  

  
      ,"page10": {
          "title": "Vocab",
          "content": "Vocabulary Page . This vocab page will consist of vocab from all of the College Board units and other miscellaneous vocab. . {% include nav_vocab.html %} . Vocab Definition . Algorithms | a process or set of rules to be followed in calculations or other problem-solving operations | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/vocab",
          "relUrl": "/vocab",
          "date": ""
      }
      
  

  
  

  
  

  
  

  

  

  

  
  

  
      ,"page18": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://chewyboba10.github.io/sushi-burrito/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}